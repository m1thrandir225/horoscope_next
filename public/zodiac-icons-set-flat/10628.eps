%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1505.i040.012.P.m005.c26.zodiac icon set.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Aksana
%%CreationDate: 5/27/2015
%%BoundingBox: 0 0 408 337
%%HiResBoundingBox: 0 0 407.8233 336.2129
%%CropBox: 0 0 407.8233 336.2129
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2015-05-27T11:43:41+06:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-05-27T11:43:41+06:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-05-27T11:43:41+06:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>212</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgA1AEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4ql95rlhbSNDz9SZAWdF34gfzHtmr1XbGDFIwvimBZA6e/8W5WLSTmL5BA&#xA;r5rRpUj+rEFl5n4x8K9q7ZrY+0gMhHg5i+fIeezkHs4gXxIq38zaNKhZrhYSv7Mp4k/6tftfRmfp&#xA;u3NNlBIlXDzv8btM9BlieV+5DTebbMRtJbxNMiGjb8SK96Gu2YWX2lxCJljiZgc+jbHs2d1I0vi8&#xA;0WhLetG0aKFbmDzHFu/QHJ4/aHESeMGIFG+ex6sZdny6G03gnhniWWFxJG24ZTUZvcOaGSIlA3Eu&#xA;FOBiaOxX5YxS9dWjjvJbW5pG6mqMOhQ/ZJ/rmrHacY5ZYsnpI5e7p/by9zknTExEo7ov65af7/j/&#xA;AOCX+uZv5rF/Oj8w0+HLuKXX/mry/YTCG5vFWRl5cUV5NvcxqwH05CWtwj+IfDf7nKw9n58guMdv&#xA;gPvUP8ceV/8Alt/5JTf80YPz+Hv+wtv8kan+b9sf1tN568rDren6IZj+pMH5/D3/AGH9S/yRqf5v&#xA;2x/WmtvqmnXEKTQ3MbxyAMp5AbH2O4+RywavEf4o/MOFPBkiaMTYdNqVlChdpVanZSGP4ZDLr8MB&#xA;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&#xA;X//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:BF100FA33104E5118F66A5C682A1D572</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:BF100FA33104E5118F66A5C682A1D572</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:072fe496-8525-4667-ac62-e26c3841be4a</stRef:instanceID>
            <stRef:documentID>xmp.did:4AB1A13183FFE41193F8A2161FF39E2A</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4AB1A13183FFE41193F8A2161FF39E2A</stEvt:instanceID>
                  <stEvt:when>2015-05-21T12:32:46+06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BF100FA33104E5118F66A5C682A1D572</stEvt:instanceID>
                  <stEvt:when>2015-05-27T11:43:41+06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>30</xmpG:red>
                           <xmpG:green>15</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>30</xmpG:red>
                           <xmpG:green>15</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -336.213 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 336.213 li
407.823 336.213 li
407.823 0 li
cp
clp
138.979 24.8096 mo
138.38 22.1357 132.772 21.1162 126.454 22.5322 cv
120.136 23.9482 115.499 27.2646 116.097 29.9385 cv
116.696 32.6123 122.306 33.6318 128.624 32.2178 cv
134.942 30.7998 139.579 27.4834 138.979 24.8096 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 .415686 .219608 rgb
f
160.815 24.8096 mo
161.415 22.1357 167.022 21.1162 173.341 22.5322 cv
179.659 23.9482 184.296 27.2646 183.696 29.9385 cv
183.097 32.6123 177.489 33.6318 171.171 32.2178 cv
164.853 30.7998 160.216 27.4834 160.815 24.8096 cv
cp
f
127.171 24.6006 mo
125.62 24.1201 123.333 24.8818 121.884 25.4033 cv
120.146 26.0264 118.577 27.29 117.899 29.0244 cv
117.663 29.6299 118.157 30.1865 118.673 30.3877 cv
118.794 30.4346 118.913 30.4814 119.034 30.5283 cv
120.149 30.9658 120.792 29.4561 120.147 28.7002 cv
120.483 27.4717 121.987 26.7236 123.034 26.167 cv
124.394 25.4443 125.724 25.3721 127.171 25.0225 cv
127.388 24.9678 127.37 24.6611 127.171 24.6006 cv
cp
.768627 .192157 0 rgb
f
172.528 24.6006 mo
174.079 24.1201 176.364 24.8818 177.815 25.4033 cv
179.552 26.0264 181.122 27.29 181.8 29.0244 cv
182.036 29.6299 181.54 30.1865 181.024 30.3877 cv
180.905 30.4346 180.784 30.4814 180.665 30.5283 cv
179.548 30.9658 178.907 29.4561 179.552 28.7002 cv
179.216 27.4717 177.712 26.7236 176.665 26.167 cv
175.306 25.4443 173.976 25.3721 172.528 25.0225 cv
172.312 24.9678 172.329 24.6611 172.528 24.6006 cv
cp
f
171.022 21.1494 mo
169.952 18.5791 168.339 16.3779 168.284 13.6338 cv
168.304 13.5068 168.306 13.3721 168.292 13.2334 cv
168.302 12.9443 168.323 12.6494 168.372 12.3486 cv
168.47 11.7412 167.933 11.3745 167.489 11.4858 cv
165.021 9.09131 134.772 9.09131 132.306 11.4858 cv
131.862 11.3745 131.325 11.7412 131.421 12.3486 cv
131.47 12.6494 131.491 12.9443 131.503 13.2334 cv
131.489 13.3721 131.491 13.5068 131.509 13.6338 cv
131.456 16.3779 129.841 18.5791 128.772 21.1494 cv
127.511 24.1846 128.099 27.46 128.651 30.5771 cv
129.71 36.5635 129.888 34.0244 129.616 40.0498 cv
129.513 42.3545 129.669 44.8545 130.647 46.9795 cv
131.815 49.5107 133.995 51.0322 136.06 52.7939 cv
139.657 55.8604 139.751 66.6553 144.903 67.958 cv
147.737 68.6748 152.056 68.6748 154.89 67.958 cv
160.044 66.6553 160.136 55.8604 163.733 52.7939 cv
165.798 51.0322 167.979 49.5107 169.147 46.9795 cv
170.126 44.8545 170.28 42.3545 170.177 40.0498 cv
169.907 34.0244 170.085 36.5635 171.144 30.5771 cv
171.694 27.46 172.284 24.1846 171.022 21.1494 cv
cp
f
171.022 21.1494 mo
169.952 18.5791 168.339 16.3779 168.284 13.6338 cv
168.304 13.5068 168.306 13.3721 168.292 13.2334 cv
168.302 12.9443 168.323 12.6494 168.372 12.3486 cv
168.47 11.7412 167.933 11.3745 167.489 11.4858 cv
166.411 10.4399 160.021 9.84912 152.964 9.71826 cv
152.94 9.71826 152.919 9.71826 152.894 9.71729 cv
152.462 9.70947 152.028 9.70361 151.591 9.69971 cv
151.278 9.69678 150.962 9.69482 150.647 9.69385 cv
150.427 9.69189 150.208 9.69092 149.987 9.69092 cv
149.927 9.69092 149.866 9.69092 149.806 9.69092 cv
149.587 9.69092 149.368 9.69189 149.149 9.69385 cv
148.833 9.69482 148.517 9.69678 148.202 9.69971 cv
147.769 9.70361 147.335 9.70947 146.905 9.71729 cv
146.878 9.71826 146.853 9.71826 146.827 9.71826 cv
139.772 9.8501 133.384 10.4399 132.306 11.4858 cv
131.862 11.3745 131.325 11.7412 131.421 12.3486 cv
131.47 12.6494 131.491 12.9443 131.503 13.2334 cv
131.489 13.3721 131.491 13.5068 131.509 13.6338 cv
131.456 16.3779 129.841 18.5791 128.772 21.1494 cv
127.511 24.1846 128.099 27.46 128.651 30.5771 cv
128.698 30.8447 128.743 31.0928 128.788 31.3291 cv
130.782 33.6943 134.378 36.251 136.526 38.3174 cv
139.821 41.4854 141.815 43.2178 142.925 47.79 cv
144.017 52.2998 143.614 57.0576 142.53 61.5146 cv
142.269 62.585 141.853 63.6221 141.384 64.6514 cv
142.253 66.3018 143.347 67.5654 144.903 67.958 cv
147.737 68.6748 152.056 68.6748 154.89 67.958 cv
156.448 67.5654 157.54 66.3018 158.409 64.6514 cv
157.944 63.6221 157.526 62.585 157.265 61.5146 cv
156.179 57.0576 155.778 52.2998 156.87 47.79 cv
157.978 43.2178 159.972 41.4854 163.269 38.3174 cv
165.419 36.249 169.013 33.6924 171.007 31.3271 cv
171.052 31.0908 171.097 30.8447 171.144 30.5771 cv
171.694 27.46 172.284 24.1846 171.022 21.1494 cv
cp
.658824 .164706 0 rgb
f
193.739 6.37842 mo
193.194 7.68701 186.214 11.6138 183.284 12.0498 cv
180.354 12.4854 173.345 12.0498 168.999 11.6138 cv
164.653 11.1782 163.856 21.2119 166.911 21.3213 cv
169.964 21.4307 177.054 22.1943 185.233 18.5947 cv
193.413 14.9951 195.485 7.68701 195.704 6.37842 cv
196.247 4.51318 194.286 5.06982 193.739 6.37842 cv
cp
106.054 6.37842 mo
106.599 7.68701 113.579 11.6138 116.509 12.0498 cv
119.438 12.4854 126.45 12.0498 130.796 11.6138 cv
135.142 11.1782 135.938 21.2119 132.884 21.3213 cv
129.831 21.4307 122.741 22.1943 114.562 18.5947 cv
106.38 14.9951 104.31 7.68701 104.091 6.37842 cv
103.547 4.51318 105.509 5.06982 106.054 6.37842 cv
cp
.992157 .756863 .109804 rgb
f
168.999 14.1592 mo
173.345 14.5947 180.354 15.0322 183.284 14.5947 cv
186.214 14.1592 193.194 10.2319 193.739 8.92432 cv
194.054 8.17139 194.835 7.67041 195.339 7.73389 cv
195.55 7.10693 195.661 6.63037 195.704 6.37842 cv
196.247 4.51318 194.286 5.06982 193.739 6.37842 cv
193.194 7.68701 186.214 11.6138 183.284 12.0498 cv
180.354 12.4854 173.345 12.0498 168.999 11.6138 cv
166.015 11.3149 164.702 15.9561 165.165 18.9248 cv
165.501 16.417 166.79 13.9385 168.999 14.1592 cv
cp
.992157 .866667 .521569 rgb
f
130.796 11.6138 mo
126.45 12.0498 119.438 12.4854 116.509 12.0498 cv
113.579 11.6138 106.599 7.68701 106.054 6.37842 cv
105.509 5.06982 103.547 4.51318 104.091 6.37842 cv
104.133 6.63037 104.245 7.10693 104.455 7.73389 cv
104.96 7.67041 105.74 8.17139 106.054 8.92432 cv
106.599 10.2319 113.579 14.1592 116.509 14.5947 cv
119.438 15.0322 126.45 14.5947 130.796 14.1592 cv
133.003 13.9385 134.292 16.417 134.63 18.9248 cv
135.091 15.9561 133.782 11.3149 130.796 11.6138 cv
cp
f
138.038 30.4287 mo
138.048 27.3721 136.427 24.8896 134.419 24.8838 cv
132.411 24.8779 130.776 27.3506 130.767 30.4072 cv
130.759 33.4639 132.378 35.9443 134.386 35.9521 cv
136.394 35.958 138.028 33.4854 138.038 30.4287 cv
cp
.278431 .0745098 .00784314 rgb
f
132.724 31.0303 mo
132.612 30.4326 132.278 29.9951 131.976 30.0498 cv
131.675 30.1064 131.521 30.6377 131.634 31.2354 cv
131.745 31.833 132.081 32.2725 132.382 32.2158 cv
132.683 32.1592 132.837 31.6279 132.724 31.0303 cv
cp
.992157 .866667 .521569 rgb
f
133.132 33.1787 mo
133.095 32.9834 132.899 32.8564 132.694 32.8955 cv
132.491 32.9326 132.354 33.1221 132.392 33.3174 cv
132.429 33.5127 132.624 33.6416 132.827 33.6025 cv
133.032 33.5635 133.167 33.376 133.132 33.1787 cv
cp
f
169.026 30.4287 mo
169.036 27.3721 167.415 24.8896 165.407 24.8838 cv
163.401 24.8779 161.765 27.3506 161.757 30.4072 cv
161.747 33.4639 163.368 35.9443 165.374 35.9521 cv
167.382 35.958 169.017 33.4854 169.026 30.4287 cv
cp
.278431 .0745098 .00784314 rgb
f
163.882 32.7451 mo
163.521 32.2568 163.026 32.0088 162.78 32.1904 cv
162.534 32.374 162.628 32.9189 162.991 33.4072 cv
163.354 33.8955 163.849 34.1416 164.093 33.96 cv
164.339 33.7764 164.245 33.2334 163.882 32.7451 cv
cp
.992157 .866667 .521569 rgb
f
165.188 34.4971 mo
165.069 34.3389 164.839 34.3096 164.671 34.4326 cv
164.505 34.5576 164.466 34.7861 164.585 34.9463 cv
164.702 35.1064 164.935 35.1357 165.103 35.0107 cv
165.269 34.8877 165.308 34.6572 165.188 34.4971 cv
cp
f
169.853 19.9736 mo
169.481 18.2529 167.468 13.999 167.702 12.2061 cv
167.733 12.1084 167.804 11.6807 167.81 11.4858 cv
167.704 11.4624 167.595 11.4595 167.489 11.4858 cv
166.267 10.2993 158.231 9.70166 150.13 9.69092 cv
149.976 9.69092 149.819 9.69092 149.663 9.69092 cv
141.563 9.70166 133.526 10.2993 132.306 11.4858 cv
132.2 11.4595 132.093 11.4624 131.987 11.4849 cv
132.021 11.7549 132.067 12.1338 132.093 12.2061 cv
132.327 13.999 130.313 18.2529 129.942 19.9736 cv
129.366 22.6436 128.952 25.6279 130.843 27.874 cv
132.581 29.9404 135.964 32.2021 137.948 34.0186 cv
140.894 36.7119 142.675 38.1826 143.665 42.0693 cv
144.642 45.9014 144.282 49.9443 143.313 53.7314 cv
142.431 57.1807 139.548 60.2393 139.763 63.8975 cv
139.841 65.2354 140.114 68.9678 142.091 68.9072 cv
144.032 68.8467 155.763 68.8467 157.704 68.9072 cv
159.679 68.9678 159.954 65.2354 160.032 63.8975 cv
160.245 60.2393 157.364 57.1807 156.481 53.7314 cv
155.511 49.9443 155.151 45.9014 156.128 42.0693 cv
157.118 38.1826 158.901 36.7119 161.847 34.0186 cv
163.831 32.2021 167.212 29.9404 168.95 27.874 cv
170.841 25.6279 170.427 22.6436 169.853 19.9736 cv
cp
1 .415686 .219608 rgb
f
147.14 66.7061 mo
147.151 65.6963 147.106 63.9014 146.825 62.249 cv
146.808 61.8799 146.733 61.5186 146.604 61.1963 cv
146.14 59.3799 145.288 58.0439 143.755 58.7197 cv
141.892 59.542 142.958 63.1709 143.978 64.2646 cv
144.485 64.8076 145.358 64.8604 145.985 64.4463 cv
146.192 65.2412 146.384 66.0459 146.616 66.8271 cv
146.712 67.1553 147.136 67.0518 147.14 66.7061 cv
cp
1 .537255 .380392 rgb
f
152.819 66.7061 mo
152.808 65.6963 152.853 63.9014 153.136 62.249 cv
153.151 61.8799 153.226 61.5186 153.356 61.1963 cv
153.821 59.3799 154.669 58.0439 156.202 58.7197 cv
158.067 59.542 157.001 63.1709 155.981 64.2646 cv
155.474 64.8076 154.601 64.8604 153.974 64.4463 cv
153.767 65.2412 153.575 66.0459 153.345 66.8271 cv
153.247 67.1553 152.823 67.0518 152.819 66.7061 cv
cp
f
146.292 66.7764 mo
146.304 65.9834 146.259 64.5752 145.976 63.2783 cv
145.96 62.9873 145.886 62.7041 145.755 62.4521 cv
145.29 61.0264 144.44 59.9775 142.907 60.5088 cv
141.044 61.1533 142.108 64.001 143.13 64.8584 cv
143.636 65.2861 144.511 65.3271 145.136 65.0029 cv
145.345 65.626 145.536 66.2568 145.769 66.8701 cv
145.864 67.1279 146.286 67.0459 146.292 66.7764 cv
cp
.768627 .192157 0 rgb
f
153.669 66.7764 mo
153.655 65.9834 153.7 64.5752 153.983 63.2783 cv
154.001 62.9873 154.075 62.7041 154.204 62.4521 cv
154.669 61.0264 155.519 59.9775 157.052 60.5088 cv
158.915 61.1533 157.851 64.001 156.829 64.8584 cv
156.323 65.2861 155.448 65.3271 154.821 65.0029 cv
154.614 65.626 154.423 66.2568 154.192 66.8701 cv
154.095 67.1279 153.673 67.0459 153.669 66.7764 cv
cp
f
152.019 49.3662 mo
152.019 55.8389 151.069 61.085 149.897 61.085 cv
148.726 61.085 147.776 55.8389 147.776 49.3662 cv
147.776 42.8936 148.726 37.6475 149.897 37.6475 cv
151.069 37.6475 152.019 42.8936 152.019 49.3662 cv
cp
1 .537255 .380392 rgb
f
143.423 41.2236 mo
143.687 37.9424 142.696 33.7451 140.456 29.6689 cv
137.597 24.4697 133.479 20.8994 129.919 20.085 cv
129.356 22.7275 128.978 25.6572 130.843 27.874 cv
132.581 29.9404 135.964 32.2021 137.948 34.0186 cv
140.669 36.5049 142.396 37.9541 143.423 41.2236 cv
cp
f
169.874 20.085 mo
166.313 20.8994 162.198 24.4697 159.339 29.6689 cv
157.097 33.7451 156.106 37.9443 156.37 41.2275 cv
157.397 37.9561 159.124 36.5068 161.847 34.0186 cv
163.831 32.2021 167.212 29.9404 168.95 27.874 cv
170.815 25.6572 170.437 22.7275 169.874 20.085 cv
cp
f
167.171 11.2651 mo
165.235 10.2261 157.712 9.70068 150.13 9.69092 cv
149.976 9.69092 149.819 9.69092 149.663 9.69092 cv
142.083 9.70068 134.56 10.2261 132.624 11.2651 cv
133.558 14.1123 140.931 24.8135 149.897 24.8135 cv
158.862 24.8135 166.237 14.1123 167.171 11.2651 cv
cp
f
74.7637 9.25732 mo
69.2646 6.67627 62.9775 6.45947 57.1113 7.6958 cv
53.6855 8.41748 48.7861 10.2632 47.0361 13.6807 cv
43.3672 17.0674 47.5967 24.585 49.9951 27.4814 cv
51.8389 29.7061 55.1123 30.0381 57.7783 30.1396 cv
58.6299 30.1709 59.6377 29.9951 60.5771 29.6338 cv
60.5771 29.6357 li
60.5518 29.8057 60.749 29.9639 60.8887 29.8154 cv
63.416 27.1436 68.8613 27.9619 71.4736 30.1396 cv
73.9912 32.2354 84.2646 44.2158 73.2334 55.249 cv
66.9346 61.5498 66.583 50.4307 67.001 49.9326 cv
67.04 49.8916 67.0752 49.8486 67.1064 49.8037 cv
67.6182 49.1924 67.3467 48.4326 66.8232 48.0654 cv
66.5459 47.8252 66.1523 47.6475 65.71 47.8057 cv
64.3896 48.2803 62.0859 52.876 62.6455 56.4482 cv
63.4502 61.5869 67.8994 64.3916 72.6924 63.3955 cv
84.6006 60.9209 90.7725 50.0479 91.4893 38.5479 cv
92.2471 26.3877 85.8848 14.4775 74.7637 9.25732 cv
cp
.992157 .756863 .109804 rgb
f
74.8311 34.0732 mo
75.168 34.5771 75.501 35.1182 75.8213 35.6924 cv
79.0127 34.6709 81.9014 31.5439 83.9092 29.3135 cv
85.7373 27.2842 87.2432 25.0498 88.2744 22.624 cv
87.665 21.3975 86.9727 20.2139 86.2041 19.083 cv
85.7578 21.5088 84.8213 23.5771 83.4619 25.665 cv
81.1211 29.2627 78.3037 31.8721 74.8311 34.0732 cv
cp
.992157 .866667 .521569 rgb
f
77.5078 39.5889 mo
77.6416 40.0225 77.7607 40.4658 77.8613 40.9189 cv
81.2334 40.6514 84.71 39.2764 87.8701 38.3564 cv
89.1045 37.999 90.3242 37.5752 91.54 37.1455 cv
91.5547 36.3193 91.5361 35.4971 91.4873 34.6768 cv
90.0244 35.2939 88.6104 35.9424 87.3311 36.4033 cv
84.1465 37.5518 80.6797 38.3506 77.5078 39.5889 cv
cp
f
65.2471 49.1162 mo
65.6191 49.333 66.1982 49.3701 66.6162 49.3408 cv
66.9697 49.3154 66.9551 48.8447 66.6162 48.8037 cv
66.2178 48.7529 66.0127 48.5576 65.6846 48.3662 cv
65.5693 48.2979 65.415 48.2822 65.2881 48.2393 cv
65.2461 48.2256 65.21 48.1943 65.1709 48.1729 cv
65.0576 48.2803 64.9424 48.4111 64.8262 48.5557 cv
64.9307 48.79 65.0684 49.0107 65.2471 49.1162 cv
cp
f
66.1035 51.4424 mo
66.3662 51.4658 66.6279 51.4561 66.8896 51.4326 cv
66.8799 51.1787 66.8789 50.9482 66.8848 50.7451 cv
66.374 50.8232 65.8555 50.7725 65.3701 50.9365 cv
65.29 50.9639 65.2383 51.0811 65.3154 51.1455 cv
65.5752 51.3604 65.7666 51.4111 66.1035 51.4424 cv
cp
f
64.2783 50.585 mo
64.3643 50.6025 64.4326 50.4736 64.3418 50.4346 cv
64.1611 50.3564 63.9961 50.2607 63.8428 50.1494 cv
63.7998 50.2354 63.7559 50.3213 63.7139 50.4111 cv
63.8945 50.4873 64.0811 50.5479 64.2783 50.585 cv
cp
f
70.4336 10.0161 mo
71.4727 12.6958 72.1865 15.5557 72.4238 18.4189 cv
72.6318 20.9189 72.1641 23.4385 71.5273 25.8408 cv
71.2158 27.0186 70.6631 28.1455 70.1396 29.2725 cv
70.6318 29.5283 71.0869 29.8154 71.4736 30.1396 cv
71.5498 30.2021 71.6338 30.2744 71.7227 30.3564 cv
73.7373 27.2061 74.4189 22.2432 74.5869 19.3369 cv
74.7734 16.04 74.1514 12.0864 72.8838 8.48096 cv
71.7061 8.05225 70.502 7.71924 69.2793 7.47803 cv
69.6943 8.31299 70.0986 9.15381 70.4336 10.0161 cv
cp
f
71.1689 59.2627 mo
71.5811 61.2432 70.6387 62.2646 69.5693 63.501 cv
70.0723 63.5713 70.5859 63.6006 71.1104 63.5811 cv
72.7617 61.7451 72.9971 58.626 72.165 56.1963 cv
71.5742 56.6494 71.0479 56.9268 70.5752 57.0654 cv
70.7725 57.8057 71.0205 58.542 71.1689 59.2627 cv
cp
f
66.2705 13.415 mo
67.7686 18.3838 66.9746 23.2588 66.6504 28.2139 cv
67.2227 28.2822 67.79 28.3936 68.3369 28.5537 cv
69.8486 23.3389 69.4639 16.8174 68.042 11.98 cv
67.6035 10.4888 66.7529 8.69189 65.6299 7.021 cv
64.6582 6.96436 63.6826 6.95166 62.708 6.98975 cv
64.4131 8.81494 65.5498 11.0229 66.2705 13.415 cv
cp
f
72.9102 31.5771 mo
73.1924 31.8955 73.4912 32.2549 73.7998 32.6475 cv
78.75 28.3896 81.7676 21.2568 82.1865 14.3369 cv
81.2637 13.4619 80.2764 12.646 79.2334 11.8931 cv
79.5137 14.7256 79.3662 17.5557 78.5742 20.5928 cv
77.4932 24.7373 75.1377 28.0752 72.9102 31.5771 cv
cp
f
77.3096 61.8994 mo
77.2979 60.0088 77.1914 58.1572 76.5029 56.3701 cv
76.1143 55.3545 75.5186 54.3369 74.6436 53.6787 cv
74.4092 53.9658 74.1621 54.251 73.8994 54.5381 cv
74.0508 54.6221 74.1953 54.7178 74.3154 54.8389 cv
75.2412 55.7451 75.6416 57.2314 75.9873 58.4385 cv
76.3408 59.6611 76.5449 60.9873 76.4414 62.2666 cv
76.7354 62.1494 77.0244 62.0264 77.3096 61.8994 cv
cp
f
68.1963 61.9248 mo
68.7842 60.4502 69.2334 58.6982 69.2451 57.0635 cv
69.0635 56.9971 68.8955 56.8994 68.7393 56.7822 cv
68.1396 57.8994 67.9736 59.2725 67.6709 60.4951 cv
67.4854 61.2451 67.2041 61.9482 66.8213 62.6104 cv
67.0928 62.7568 67.3701 62.8896 67.6572 63.0029 cv
67.8838 62.6279 68.0674 62.251 68.1963 61.9248 cv
cp
f
81.5869 55.6377 mo
80.2412 53.5225 78.4541 52.1475 76.2256 51.4229 cv
76.0811 51.6689 75.9404 51.9131 75.7783 52.1572 cv
78.0576 53.292 79.8301 55.1064 81.0908 57.3779 cv
81.3818 57.9053 81.6084 58.5127 81.8154 59.1475 cv
82.2275 58.8174 82.6309 58.4756 83.0176 58.1182 cv
82.5361 57.1768 82.0166 56.3115 81.5869 55.6377 cv
cp
f
77.6924 48.0654 mo
77.5146 48.6748 77.2891 49.29 77.0146 49.9072 cv
79.0889 50.7646 81.4111 51.2432 83.4092 52.3584 cv
84.4209 52.9229 85.3867 53.5986 86.3145 54.3154 cv
86.7813 53.6455 87.2119 52.9502 87.6162 52.2334 cv
84.6787 49.8193 80.7979 47.958 77.6924 48.0654 cv
cp
f
86.8779 40.2178 mo
84.0615 40.5479 80.7607 40.8252 78.083 42.1064 cv
78.1523 42.583 78.1943 43.0674 78.2158 43.5576 cv
81.0986 43.0674 83.9404 42.1338 86.8779 41.8896 cv
88.3154 41.7686 89.7393 41.5986 91.1777 41.5068 cv
91.2705 40.874 91.3486 40.2393 91.4072 39.5986 cv
89.7236 39.7236 88.0273 40.085 86.8779 40.2178 cv
cp
f
63.4717 59.1006 mo
64.4189 58.8135 65.3154 58.5498 66.0928 57.8545 cv
66.4844 57.5068 67.0537 57.085 67.251 56.585 cv
67.3965 56.2178 67.6152 55.9111 67.7979 55.5811 cv
67.7061 55.3936 67.6221 55.1982 67.5459 54.9951 cv
66.7568 55.4326 66.042 56.0557 65.3682 56.6377 cv
64.9111 57.0322 64.4971 57.3584 64.0986 57.8115 cv
63.8252 58.124 63.5752 58.4131 63.2881 58.6768 cv
63.3486 58.8193 63.4053 58.9658 63.4717 59.1006 cv
cp
f
86.1631 47.2842 mo
87.2715 47.5928 88.3408 47.9912 89.3838 48.4521 cv
89.5947 47.9053 89.7881 47.3506 89.9688 46.79 cv
89.4424 46.5869 88.9365 46.4033 88.4902 46.2354 cv
85.4209 45.0791 81.5596 44.499 78.2002 45.1846 cv
78.165 45.6846 78.1025 46.1904 78.0088 46.7021 cv
80.6318 47.126 83.542 46.5498 86.1631 47.2842 cv
cp
f
86.1094 32.1104 mo
83.1865 34.2549 79.8857 35.7412 76.6455 37.3252 cv
76.8135 37.6963 76.9756 38.0732 77.124 38.4639 cv
80.8994 37.2197 84.5186 35.4033 87.8154 33.2119 cv
88.624 32.6729 89.8359 31.8213 91.0107 30.8018 cv
90.8525 29.9561 90.6611 29.1201 90.4346 28.292 cv
89.1816 29.7529 87.6299 30.9971 86.1094 32.1104 cv
cp
f
64.5322 54.3486 mo
65.2158 54.2939 66.3818 54.126 67.1748 53.7061 cv
67.1055 53.3857 67.0498 53.0654 67.0068 52.751 cv
66.3994 52.7822 65.7295 53.0342 65.2031 53.1045 cv
64.5957 53.1846 63.9932 53.2354 63.3838 53.1436 cv
63.1865 53.1123 63.0088 53.0459 62.8389 52.9736 cv
62.7451 53.3857 62.6738 53.8076 62.626 54.2275 cv
63.2646 54.3994 64.0146 54.3916 64.5322 54.3486 cv
cp
f
64.6084 28.1768 mo
65.0889 23.4424 63.5322 17.8076 61.8633 14.1201 cv
60.9941 12.2036 59.7158 9.65381 58.0576 7.51221 cv
57.7412 7.56885 57.4258 7.62939 57.1113 7.6958 cv
56.2471 7.87744 55.2881 8.13135 54.3096 8.46436 cv
54.8369 8.76611 55.3467 9.1167 55.8291 9.56104 cv
57.4932 11.0913 58.6611 13.4033 59.7178 15.376 cv
61.3066 18.3428 62.5576 21.3799 62.9785 24.7334 cv
63.1357 25.9893 63.0977 27.2451 63.0557 28.499 cv
63.5498 28.3389 64.0693 28.2295 64.6084 28.1768 cv
cp
f
3.30566 38.5479 mo
4.02246 50.0479 10.1924 60.9209 22.1025 63.3955 cv
26.8945 64.3916 31.3438 61.5869 32.1484 56.4482 cv
32.708 52.876 30.4033 48.2803 29.084 47.8057 cv
28.6416 47.6475 28.2471 47.8252 27.9717 48.0654 cv
27.4482 48.4326 27.1768 49.1924 27.6885 49.8037 cv
27.7178 49.8486 27.7539 49.8916 27.793 49.9326 cv
28.2109 50.4307 27.8594 61.5498 21.5596 55.249 cv
10.5303 44.2158 20.8027 32.2354 23.3203 30.1396 cv
25.9326 27.9619 31.3779 27.1436 33.9053 29.8154 cv
34.0459 29.9639 34.2432 29.8057 34.2158 29.6357 cv
34.2158 29.6338 li
35.1572 29.9951 36.165 30.1709 37.0146 30.1396 cv
39.6807 30.0381 42.9561 29.7061 44.7998 27.4814 cv
47.1973 24.585 51.4268 17.0674 47.7588 13.6807 cv
46.0088 10.2632 41.1084 8.41748 37.6826 7.6958 cv
31.8174 6.45947 25.5283 6.67627 20.0303 9.25732 cv
8.90918 14.4775 2.54785 26.3877 3.30566 38.5479 cv
cp
.992157 .756863 .109804 rgb
f
19.9619 34.0732 mo
19.626 34.5771 19.293 35.1182 18.9736 35.6924 cv
15.7813 34.6709 12.8936 31.5439 10.8838 29.3135 cv
9.05566 27.2842 7.55176 25.0498 6.51953 22.624 cv
7.12988 21.3975 7.82129 20.2139 8.59082 19.083 cv
9.03613 21.5088 9.97266 23.5771 11.332 25.665 cv
13.6729 29.2627 16.4912 31.8721 19.9619 34.0732 cv
cp
.992157 .866667 .521569 rgb
f
17.2871 39.5889 mo
17.1523 40.0225 17.0342 40.4658 16.9326 40.9189 cv
13.5605 40.6514 10.083 39.2764 6.9248 38.3564 cv
5.69043 37.999 4.46973 37.5752 3.25293 37.1455 cv
3.23926 36.3193 3.25879 35.4971 3.30762 34.6768 cv
4.76953 35.2939 6.18359 35.9424 7.46387 36.4033 cv
10.6475 37.5518 14.1143 38.3506 17.2871 39.5889 cv
cp
f
29.5469 49.1162 mo
29.1748 49.333 28.5967 49.3701 28.1777 49.3408 cv
27.8252 49.3154 27.8389 48.8447 28.1777 48.8037 cv
28.5771 48.7529 28.7822 48.5576 29.1084 48.3662 cv
29.2246 48.2979 29.3779 48.2822 29.5059 48.2393 cv
29.5479 48.2256 29.584 48.1943 29.624 48.1729 cv
29.7363 48.2803 29.8516 48.4111 29.9678 48.5557 cv
29.8643 48.79 29.7256 49.0107 29.5469 49.1162 cv
cp
f
28.6904 51.4424 mo
28.4268 51.4658 28.165 51.4561 27.9043 51.4326 cv
27.9141 51.1787 27.915 50.9482 27.9092 50.7451 cv
28.4189 50.8232 28.9385 50.7725 29.4238 50.9365 cv
29.5049 50.9639 29.5557 51.0811 29.4795 51.1455 cv
29.2178 51.3604 29.0273 51.4111 28.6904 51.4424 cv
cp
f
30.5166 50.585 mo
30.4307 50.6025 30.3604 50.4736 30.4521 50.4346 cv
30.6338 50.3564 30.7979 50.2607 30.9521 50.1494 cv
30.9951 50.2354 31.0381 50.3213 31.0791 50.4111 cv
30.8994 50.4873 30.7139 50.5479 30.5166 50.585 cv
cp
f
24.3604 10.0161 mo
23.3213 12.6958 22.6084 15.5557 22.3701 18.4189 cv
22.1631 20.9189 22.6299 23.4385 23.2666 25.8408 cv
23.5791 27.0186 24.1309 28.1455 24.6553 29.2725 cv
24.1611 29.5283 23.708 29.8154 23.3203 30.1396 cv
23.2451 30.2021 23.1611 30.2744 23.0713 30.3564 cv
21.0566 27.2061 20.374 22.2432 20.208 19.3369 cv
20.0205 16.04 20.6416 12.0864 21.9102 8.48096 cv
23.0869 8.05225 24.292 7.71924 25.5146 7.47803 cv
25.0986 8.31299 24.6943 9.15381 24.3604 10.0161 cv
cp
f
23.625 59.2627 mo
23.2129 61.2432 24.1553 62.2646 25.2246 63.501 cv
24.7217 63.5713 24.208 63.6006 23.6836 63.5811 cv
22.0332 61.7451 21.7969 58.626 22.6279 56.1963 cv
23.2197 56.6494 23.7461 56.9268 24.2188 57.0654 cv
24.0225 57.8057 23.7744 58.542 23.625 59.2627 cv
cp
f
28.5244 13.415 mo
27.0264 18.3838 27.8193 23.2588 28.1436 28.2139 cv
27.5713 28.2822 27.0029 28.3936 26.4561 28.5537 cv
24.9463 23.3389 25.3311 16.8174 26.7529 11.98 cv
27.1904 10.4888 28.04 8.69189 29.1641 7.021 cv
30.1357 6.96436 31.1104 6.95166 32.0859 6.98975 cv
30.3799 8.81494 29.2441 11.0229 28.5244 13.415 cv
cp
f
21.8838 31.5771 mo
21.6016 31.8955 21.3027 32.2549 20.9951 32.6475 cv
16.0439 28.3896 13.0264 21.2568 12.6084 14.3369 cv
13.5303 13.4619 14.5186 12.646 15.5615 11.8931 cv
15.2803 14.7256 15.4277 17.5557 16.2197 20.5928 cv
17.2998 24.7373 19.6553 28.0752 21.8838 31.5771 cv
cp
f
17.4854 61.8994 mo
17.4951 60.0088 17.6035 58.1572 18.29 56.3701 cv
18.6807 55.3545 19.2744 54.3369 20.1494 53.6787 cv
20.3838 53.9658 20.6318 54.251 20.8936 54.5381 cv
20.7432 54.6221 20.5996 54.7178 20.4775 54.8389 cv
19.5537 55.7451 19.1533 57.2314 18.8057 58.4385 cv
18.4541 59.6611 18.249 60.9873 18.3525 62.2666 cv
18.0586 62.1494 17.7705 62.0264 17.4854 61.8994 cv
cp
f
26.5967 61.9248 mo
26.0107 60.4502 25.5615 58.6982 25.5488 57.0635 cv
25.7314 56.9971 25.8984 56.8994 26.0557 56.7822 cv
26.6543 57.8994 26.8203 59.2725 27.123 60.4951 cv
27.3086 61.2451 27.5908 61.9482 27.9717 62.6104 cv
27.7021 62.7568 27.4229 62.8896 27.1367 63.0029 cv
26.9111 62.6279 26.7275 62.251 26.5967 61.9248 cv
cp
f
13.208 55.6377 mo
14.5537 53.5225 16.3408 52.1475 18.5684 51.4229 cv
18.7119 51.6689 18.8545 51.9131 19.0166 52.1572 cv
16.7354 53.292 14.9639 55.1064 13.7041 57.3779 cv
13.4111 57.9053 13.1846 58.5127 12.9795 59.1475 cv
12.5654 58.8174 12.1631 58.4756 11.7764 58.1182 cv
12.2578 57.1768 12.7783 56.3115 13.208 55.6377 cv
cp
f
17.1016 48.0654 mo
17.2783 48.6748 17.5049 49.29 17.7803 49.9072 cv
15.7051 50.7646 13.3838 51.2432 11.3838 52.3584 cv
10.373 52.9229 9.40723 53.5986 8.47949 54.3154 cv
8.0127 53.6455 7.58203 52.9502 7.17871 52.2334 cv
10.1162 49.8193 13.9951 47.958 17.1016 48.0654 cv
cp
f
7.91504 40.2178 mo
10.7324 40.5479 14.0322 40.8252 16.7119 42.1064 cv
16.6416 42.583 16.6006 43.0674 16.5781 43.5576 cv
13.6963 43.0674 10.8535 42.1338 7.91504 41.8896 cv
6.47949 41.7686 5.05371 41.5986 3.61621 41.5068 cv
3.52344 40.874 3.44531 40.2393 3.3877 39.5986 cv
5.07129 39.7236 6.7666 40.085 7.91504 40.2178 cv
cp
f
31.3223 59.1006 mo
30.376 58.8135 29.4795 58.5498 28.7002 57.8545 cv
28.3096 57.5068 27.7402 57.085 27.5439 56.585 cv
27.3975 56.2178 27.1787 55.9111 26.9961 55.5811 cv
27.0889 55.3936 27.1719 55.1982 27.249 54.9951 cv
28.0371 55.4326 28.7529 56.0557 29.4268 56.6377 cv
29.8838 57.0322 30.2959 57.3584 30.6953 57.8115 cv
30.9697 58.124 31.2197 58.4131 31.5049 58.6768 cv
31.4453 58.8193 31.3896 58.9658 31.3223 59.1006 cv
cp
f
8.62988 47.2842 mo
7.52344 47.5928 6.45313 47.9912 5.41016 48.4521 cv
5.2002 47.9053 5.00488 47.3506 4.8252 46.79 cv
5.35254 46.5869 5.85645 46.4033 6.30371 46.2354 cv
9.37402 45.0791 13.2344 44.499 16.5938 45.1846 cv
16.6279 45.6846 16.6924 46.1904 16.7842 46.7021 cv
14.1631 47.126 11.251 46.5498 8.62988 47.2842 cv
cp
f
8.68457 32.1104 mo
11.6084 34.2549 14.9072 35.7412 18.1484 37.3252 cv
17.9814 37.6963 17.8193 38.0732 17.6709 38.4639 cv
13.8945 37.2197 10.2744 35.4033 6.97949 33.2119 cv
6.16895 32.6729 4.95898 31.8213 3.7832 30.8018 cv
3.94238 29.9561 4.13379 29.1201 4.36035 28.292 cv
5.6123 29.7529 7.16504 30.9971 8.68457 32.1104 cv
cp
f
30.2607 54.3486 mo
29.5771 54.2939 28.4111 54.126 27.6201 53.7061 cv
27.6885 53.3857 27.7451 53.0654 27.7881 52.751 cv
28.3936 52.7822 29.0654 53.0342 29.5908 53.1045 cv
30.1982 53.1846 30.8018 53.2354 31.4111 53.1436 cv
31.6084 53.1123 31.7842 53.0459 31.9561 52.9736 cv
32.0498 53.3857 32.1201 53.8076 32.168 54.2275 cv
31.5293 54.3994 30.7803 54.3916 30.2607 54.3486 cv
cp
f
30.1846 28.1768 mo
29.7051 23.4424 31.2617 17.8076 32.9307 14.1201 cv
33.7998 12.2036 35.0771 9.65381 36.7373 7.51221 cv
37.0537 7.56885 37.3682 7.62939 37.6826 7.6958 cv
38.5479 7.87744 39.5059 8.13135 40.4834 8.46436 cv
39.958 8.76611 39.4482 9.1167 38.9658 9.56104 cv
37.2998 11.0913 36.1328 13.4033 35.0771 15.376 cv
33.4873 18.3428 32.2373 21.3799 31.8154 24.7334 cv
31.6592 25.9893 31.6963 27.2451 31.7393 28.499 cv
31.2451 28.3389 30.7236 28.2295 30.1846 28.1768 cv
cp
f
64.8311 25.7529 mo
60.748 22.3291 48.0029 18.2529 47.3975 18.2529 cv
46.791 18.2529 34.0459 22.3291 29.9639 25.7529 cv
26.3271 28.8018 28.207 33.4443 28.5771 37.3604 cv
28.7939 39.6533 28.6611 42.3018 29.7754 44.3877 cv
31.2041 47.0615 32.7393 49.5342 33.7686 52.415 cv
34.6689 54.9326 35.8584 56.8662 37.4951 58.9736 cv
37.9463 59.5537 38.3096 60.2295 38.8262 60.6514 cv
39.8223 63.9092 43.2617 66.7451 46.7119 67.0869 cv
46.7861 67.0947 46.8594 67.0986 46.9326 67.1045 cv
47.0078 67.1104 47.084 67.1143 47.1592 67.1182 cv
47.2373 67.1201 47.3174 67.1201 47.3975 67.1201 cv
47.4766 67.1201 47.5557 67.1201 47.6348 67.1182 cv
47.71 67.1143 47.7861 67.1104 47.8604 67.1045 cv
47.9346 67.0986 48.0088 67.0947 48.0811 67.0869 cv
51.5322 66.7451 54.9717 63.9092 55.9678 60.6514 cv
56.4854 60.2295 56.8486 59.5537 57.2979 58.9736 cv
58.9365 56.8662 60.125 54.9326 61.0254 52.415 cv
62.0547 49.5342 63.5898 47.0615 65.0186 44.3877 cv
66.1338 42.3018 66.001 39.6533 66.2158 37.3604 cv
66.5869 33.4443 68.4668 28.8018 64.8311 25.7529 cv
cp
.768627 .192157 0 rgb
f
68.1885 24.5557 mo
65.0752 22.2705 61.5947 19.583 58.1943 17.9795 cv
52.8691 15.4697 49.0332 15.4463 47.5518 11.7563 cv
47.501 11.7681 47.4473 11.7729 47.3975 11.7847 cv
47.3467 11.7729 47.292 11.7681 47.2412 11.7563 cv
45.7607 15.4463 41.9248 15.4697 36.6006 17.9795 cv
33.1982 19.583 29.7188 22.2705 26.6064 24.5557 cv
26.4697 24.9307 26.3418 25.3057 26.2432 25.6826 cv
25.3379 29.1494 26.9346 31.7217 29.6992 33.7822 cv
31.2451 34.9346 33.1025 37.8311 35.0313 38.2236 cv
36.9971 38.626 38.8252 41.1455 38.6699 44.2119 cv
38.4287 48.9639 34.585 47.2979 34.5127 52.1846 cv
34.4453 56.7314 40.8213 65.374 45.6709 62.4873 cv
46.3154 62.3799 46.918 62.1045 47.3975 61.6904 cv
47.876 62.1045 48.4785 62.3799 49.1221 62.4873 cv
53.9736 65.374 60.3486 56.7314 60.2822 52.1846 cv
60.21 47.2979 56.3652 48.9639 56.124 44.2119 cv
55.9688 41.1455 57.7979 38.626 59.7627 38.2236 cv
61.6924 37.8311 63.5498 34.9346 65.0947 33.7822 cv
67.8604 31.7217 69.4561 29.1494 68.5498 25.6826 cv
68.4521 25.3057 68.3252 24.9307 68.1885 24.5557 cv
cp
.658824 .164706 0 rgb
f
34.2656 34.4932 mo
34.2744 31.4385 32.6553 28.9561 30.6475 28.9502 cv
28.6387 28.9424 27.0049 31.415 26.9951 34.4717 cv
26.9854 37.5283 28.6055 40.0107 30.6143 40.0166 cv
32.6221 40.0225 34.2568 37.5498 34.2656 34.4932 cv
cp
.278431 .0745098 .00784314 rgb
f
28.9521 35.0967 mo
28.8398 34.499 28.5049 34.0596 28.2041 34.1162 cv
27.9033 34.1729 27.749 34.7041 27.8613 35.2998 cv
27.9736 35.8994 28.3096 36.3389 28.6094 36.2803 cv
28.9102 36.2236 29.0645 35.6943 28.9521 35.0967 cv
cp
.992157 .866667 .521569 rgb
f
29.3584 37.2451 mo
29.3213 37.0498 29.126 36.9209 28.9219 36.96 cv
28.7178 36.9971 28.582 37.1865 28.6182 37.3838 cv
28.6553 37.5791 28.8506 37.7061 29.0557 37.6689 cv
29.2588 37.6299 29.3955 37.4404 29.3584 37.2451 cv
cp
f
67.7998 34.4932 mo
67.8096 31.4385 66.1885 28.9561 64.1807 28.9502 cv
62.1729 28.9424 60.5381 31.415 60.5293 34.4717 cv
60.5195 37.5283 62.1396 40.0107 64.1475 40.0166 cv
66.1553 40.0225 67.79 37.5498 67.7998 34.4932 cv
cp
.278431 .0745098 .00784314 rgb
f
62.6553 36.8096 mo
62.292 36.3213 61.7988 36.0752 61.5527 36.2568 cv
61.3066 36.4404 61.4014 36.9834 61.7646 37.4717 cv
62.127 37.96 62.6201 38.208 62.8662 38.0264 cv
63.1123 37.8408 63.0176 37.2979 62.6553 36.8096 cv
cp
.992157 .866667 .521569 rgb
f
63.9619 38.5635 mo
63.8428 38.4033 63.6123 38.374 63.4443 38.4971 cv
63.2764 38.6221 63.2393 38.8525 63.3584 39.0127 cv
63.4756 39.1709 63.708 39.2002 63.876 39.0771 cv
64.041 38.9521 64.0811 38.7236 63.9619 38.5635 cv
cp
f
68.1885 24.5557 mo
65.0752 22.2705 61.5947 19.583 58.1943 17.9795 cv
52.8691 15.4697 49.0332 15.4463 47.5518 11.7563 cv
47.501 11.7681 47.4473 11.7729 47.3975 11.7847 cv
47.3467 11.7729 47.292 11.7681 47.2412 11.7563 cv
45.7607 15.4463 41.9248 15.4697 36.6006 17.9795 cv
33.1982 19.583 29.7188 22.2705 26.6064 24.5557 cv
26.4697 24.9307 26.3418 25.3057 26.2432 25.6826 cv
25.3379 29.1494 26.9346 31.7217 29.6992 33.7822 cv
31.2451 34.9346 33.1025 36.1338 35.0313 36.5283 cv
36.9971 36.9287 38.8252 36.0537 38.6699 39.1221 cv
38.4287 43.8721 34.585 47.2979 34.5127 52.1846 cv
34.4453 56.7314 40.8213 65.374 45.6709 62.4873 cv
46.3154 62.3799 46.918 62.1045 47.3975 61.6904 cv
47.876 62.1045 48.4785 62.3799 49.1221 62.4873 cv
53.9736 65.374 60.3486 56.7314 60.2822 52.1846 cv
60.21 47.2979 56.3652 43.8721 56.124 39.1221 cv
55.9688 36.0537 57.7979 36.9287 59.7627 36.5283 cv
61.6924 36.1338 63.5498 34.9346 65.0947 33.7822 cv
67.8604 31.7217 69.4561 29.1494 68.5498 25.6826 cv
68.4521 25.3057 68.3252 24.9307 68.1885 24.5557 cv
cp
1 .415686 .219608 rgb
f
47.3975 28.1768 mo
52.0713 28.1768 49.998 11.1577 47.3975 11.7847 cv
44.7959 11.1577 42.7236 28.1768 47.3975 28.1768 cv
cp
1 .537255 .380392 rgb
f
26.0313 28.2607 mo
26.2725 30.4775 27.6689 32.2705 29.6992 33.7822 cv
31.2451 34.9346 33.1025 36.1338 35.0313 36.5283 cv
36.2793 36.7822 37.4697 36.5264 38.1357 37.0869 cv
38.6533 36.3369 38.9453 35.5205 38.9424 34.665 cv
38.9307 31.0654 33.8584 28.165 27.6143 28.1846 cv
27.0752 28.1865 26.5498 28.2178 26.0313 28.2607 cv
cp
f
55.3154 44.3838 mo
55.3154 36.7979 51.7705 28.9502 47.3975 28.9502 cv
43.0244 28.9502 39.4795 36.7979 39.4795 44.3838 cv
39.4795 51.9697 43.0244 56.4248 47.3975 56.4248 cv
51.7705 56.4248 55.3154 51.9697 55.3154 44.3838 cv
cp
f
67.1377 28.1846 mo
60.8926 28.2041 55.8408 31.1396 55.8525 34.7393 cv
55.8545 35.5752 56.1416 36.3721 56.6416 37.1045 cv
57.3037 36.5225 58.5029 36.7861 59.7627 36.5283 cv
61.6924 36.1338 63.5498 34.9346 65.0947 33.7822 cv
67.1279 32.2686 68.5244 30.4736 68.7637 28.2549 cv
68.2314 28.2119 67.6914 28.1826 67.1377 28.1846 cv
cp
f
47.3975 61.9521 mo
48.1631 62.8857 50.2305 63.8213 51.374 63.7002 cv
52.6533 63.5635 54.1943 62.6475 55.6084 61.5771 cv
55.7412 61.2861 55.8604 60.9893 55.9541 60.6904 cv
54.9268 61.3877 53.8506 62.0029 52.9365 62.1514 cv
50.874 62.4893 48.8877 62.1455 47.8633 60.3662 cv
48.208 60.1006 48.3682 59.2646 48.4385 59.0342 cv
48.7725 57.9404 51.0576 55.458 51.3027 55.2803 cv
52.1416 54.6709 52.7598 53.8213 53.416 53.0342 cv
53.6123 52.7979 53.3525 52.376 53.0654 52.5791 cv
52.292 53.124 51.5225 53.7803 50.6465 54.1572 cv
49.7646 54.5381 48.6025 54.3975 47.6631 54.5225 cv
47.5645 54.5361 47.4775 54.5615 47.3975 54.5947 cv
47.3164 54.5615 47.2295 54.5361 47.1318 54.5225 cv
46.1924 54.3975 45.0303 54.5381 44.1475 54.1572 cv
43.2725 53.7803 42.5029 53.124 41.7295 52.5791 cv
41.4424 52.376 41.1826 52.7979 41.3779 53.0342 cv
42.0342 53.8213 42.6533 54.6709 43.4912 55.2803 cv
43.7354 55.458 46.0205 57.9404 46.3564 59.0342 cv
46.4268 59.2646 46.5869 60.1006 46.9307 60.3662 cv
45.9063 62.1455 43.9209 62.4893 41.8574 62.1514 cv
40.9443 62.0029 39.8672 61.3877 38.8398 60.6904 cv
38.9336 60.9893 39.0518 61.2861 39.1855 61.5771 cv
40.5986 62.6475 42.1416 63.5635 43.4209 63.7002 cv
44.5635 63.8213 46.6318 62.8857 47.3975 61.9521 cv
cp
.658824 .164706 0 rgb
f
43.4912 55.2803 mo
43.5498 55.3232 43.7305 55.5029 43.9727 55.7646 cv
44.0322 55.792 44.0879 55.8291 44.1475 55.8545 cv
45.0303 56.2354 49.7646 56.2354 50.6465 55.8545 cv
50.7061 55.8291 50.7627 55.792 50.8213 55.7646 cv
51.0635 55.5029 51.2432 55.3232 51.3027 55.2803 cv
52.1416 54.6709 52.7598 53.8213 53.416 53.0342 cv
53.6123 52.7979 53.3525 52.376 53.0654 52.5791 cv
52.292 53.124 51.5225 53.7803 50.6465 54.1572 cv
49.7646 54.5381 45.0303 54.5381 44.1475 54.1572 cv
43.2725 53.7803 42.5029 53.124 41.7295 52.5791 cv
41.4424 52.376 41.1826 52.7979 41.3779 53.0342 cv
42.0342 53.8213 42.6533 54.6709 43.4912 55.2803 cv
cp
.278431 .0745098 .00784314 rgb
f
136.523 292.739 mo
137.948 291.304 136.354 287.413 132.962 284.046 cv
129.57 280.681 125.666 279.116 124.242 280.552 cv
122.816 281.987 124.413 285.878 127.803 289.245 cv
131.195 292.61 135.1 294.175 136.523 292.739 cv
cp
.768627 .192157 0 rgb
f
131.961 285.315 mo
131.643 284.161 130.261 283.042 129.361 282.347 cv
128.282 281.513 126.873 281.042 125.526 281.31 cv
125.056 281.401 124.906 281.933 124.986 282.333 cv
125.004 282.427 125.023 282.519 125.042 282.612 cv
125.215 283.479 126.407 283.278 126.621 282.577 cv
127.519 282.298 128.581 282.937 129.343 283.366 cv
130.332 283.923 130.906 284.722 131.699 285.481 cv
131.818 285.597 132.002 285.464 131.961 285.315 cv
cp
.658824 .164706 0 rgb
f
163.271 292.739 mo
161.848 291.304 163.441 287.413 166.834 284.046 cv
170.225 280.681 174.129 279.116 175.553 280.552 cv
176.979 281.987 175.383 285.878 171.992 289.245 cv
168.6 292.61 164.695 294.175 163.271 292.739 cv
cp
.768627 .192157 0 rgb
f
167.834 285.315 mo
168.152 284.161 169.534 283.042 170.434 282.347 cv
171.514 281.513 172.922 281.042 174.27 281.31 cv
174.739 281.401 174.889 281.933 174.81 282.333 cv
174.791 282.427 174.772 282.519 174.754 282.612 cv
174.581 283.479 173.389 283.278 173.174 282.577 cv
172.277 282.298 171.215 282.937 170.453 283.366 cv
169.463 283.923 168.889 284.722 168.096 285.481 cv
167.977 285.597 167.793 285.464 167.834 285.315 cv
cp
.658824 .164706 0 rgb
f
165.846 288.63 mo
162.111 285.499 150.452 281.771 149.897 281.771 cv
149.344 281.771 137.684 285.499 133.949 288.63 cv
130.623 291.421 132.342 295.667 132.682 299.251 cv
132.879 301.347 132.757 303.771 133.777 305.679 cv
135.084 308.126 136.488 318.149 137.43 320.784 cv
138.254 323.089 139.342 324.858 140.84 326.786 cv
141.252 327.313 141.584 327.935 142.057 328.319 cv
142.968 331.3 146.114 333.894 149.271 334.208 cv
149.338 334.214 149.406 334.218 149.473 334.224 cv
149.542 334.229 149.611 334.233 149.68 334.235 cv
149.752 334.239 149.824 334.237 149.897 334.237 cv
149.971 334.237 150.043 334.239 150.115 334.235 cv
150.185 334.233 150.254 334.229 150.322 334.224 cv
150.39 334.218 150.457 334.214 150.523 334.208 cv
153.682 333.894 156.828 331.3 157.738 328.319 cv
158.213 327.935 158.544 327.313 158.955 326.786 cv
160.454 324.858 161.541 323.089 162.365 320.784 cv
163.307 318.149 164.711 308.126 166.019 305.679 cv
167.039 303.771 166.917 301.347 167.114 299.251 cv
167.453 295.667 169.174 291.421 165.846 288.63 cv
cp
.768627 .192157 0 rgb
f
159.775 281.521 mo
154.903 279.224 151.395 279.204 150.039 275.827 cv
149.993 275.837 149.943 275.841 149.897 275.853 cv
149.852 275.841 149.802 275.837 149.756 275.827 cv
148.4 279.204 144.893 279.224 140.021 281.521 cv
136.908 282.987 133.725 285.446 130.877 287.536 cv
130.752 287.878 130.635 288.224 130.546 288.567 cv
129.717 291.739 131.178 294.093 133.707 295.978 cv
135.121 297.032 136.82 299.681 138.585 300.04 cv
140.383 300.409 142.057 302.714 141.914 305.519 cv
141.693 309.866 138.177 316.104 138.11 320.575 cv
138.049 324.733 143.883 332.64 148.319 329.999 cv
148.908 329.901 149.459 329.649 149.897 329.271 cv
150.336 329.649 150.887 329.901 151.477 329.999 cv
155.914 332.64 161.746 324.733 161.686 320.575 cv
161.619 316.104 158.102 309.866 157.882 305.519 cv
157.739 302.714 159.412 300.409 161.21 300.04 cv
162.975 299.681 164.674 297.032 166.088 295.978 cv
168.617 294.093 170.078 291.739 169.25 288.567 cv
169.16 288.224 162.887 282.987 159.775 281.521 cv
cp
.658824 .164706 0 rgb
f
139.312 296.694 mo
139.32 293.638 137.701 291.155 135.693 291.149 cv
133.685 291.144 132.051 293.616 132.041 296.673 cv
132.031 299.729 133.651 302.21 135.66 302.218 cv
137.668 302.222 139.303 299.751 139.312 296.694 cv
cp
.278431 .0745098 .00784314 rgb
f
133.998 297.296 mo
133.886 296.698 133.551 296.261 133.25 296.315 cv
132.949 296.372 132.795 296.903 132.907 297.501 cv
133.02 298.099 133.355 298.538 133.656 298.481 cv
133.957 298.425 134.11 297.894 133.998 297.296 cv
cp
.992157 .866667 .521569 rgb
f
134.404 299.444 mo
134.367 299.249 134.173 299.122 133.968 299.161 cv
133.764 299.198 133.629 299.388 133.664 299.583 cv
133.702 299.778 133.896 299.907 134.102 299.868 cv
134.305 299.829 134.441 299.642 134.404 299.444 cv
cp
f
167.754 296.694 mo
167.765 293.638 166.145 291.155 164.137 291.149 cv
162.129 291.144 160.493 293.616 160.484 296.673 cv
160.475 299.729 162.096 302.21 164.104 302.218 cv
166.111 302.222 167.746 299.751 167.754 296.694 cv
cp
.278431 .0745098 .00784314 rgb
f
162.609 299.011 mo
162.248 298.522 161.754 298.274 161.508 298.456 cv
161.262 298.64 161.356 299.185 161.719 299.673 cv
162.082 300.161 162.576 300.407 162.821 300.226 cv
163.067 300.042 162.973 299.499 162.609 299.011 cv
cp
.992157 .866667 .521569 rgb
f
163.916 300.763 mo
163.799 300.604 163.566 300.575 163.4 300.698 cv
163.232 300.823 163.194 301.052 163.313 301.212 cv
163.432 301.372 163.663 301.401 163.83 301.276 cv
163.996 301.153 164.036 300.923 163.916 300.763 cv
cp
f
166.563 284.065 mo
161.691 281.769 151.395 279.204 150.039 275.827 cv
149.993 275.837 149.943 275.841 149.897 275.853 cv
149.852 275.841 149.802 275.837 149.756 275.827 cv
148.4 279.204 138.104 281.769 133.232 284.065 cv
130.121 285.532 130.635 288.224 130.546 288.567 cv
129.717 291.739 131.178 294.093 133.707 295.978 cv
135.121 297.032 136.82 298.128 138.585 298.487 cv
140.383 298.856 142.057 298.056 141.914 300.86 cv
141.693 305.208 138.177 316.104 138.11 320.575 cv
138.049 324.733 143.883 332.64 148.319 329.999 cv
148.908 329.901 149.459 329.649 149.897 329.271 cv
150.336 329.649 150.887 329.901 151.477 329.999 cv
155.914 332.64 161.746 324.733 161.686 320.575 cv
161.619 316.104 158.102 305.208 157.882 300.86 cv
157.739 298.056 159.412 298.856 161.21 298.487 cv
162.975 298.128 164.674 297.032 166.088 295.978 cv
168.617 294.093 170.078 291.739 169.25 288.567 cv
169.16 288.224 169.674 285.532 166.563 284.065 cv
cp
1 .415686 .219608 rgb
f
107.772 327.919 mo
108.848 329.429 110.393 322.573 110.594 320.142 cv
110.977 315.481 112.305 287.853 120.608 278.165 cv
123.727 274.526 127.727 277.405 130.196 280.464 cv
131.121 281.608 132.192 283.31 133.06 284.065 cv
135.125 285.858 140.217 283.622 144.154 281.323 cv
146.791 279.784 149.725 279.112 147.943 274.829 cv
146.978 272.509 136.378 259.843 127.314 259.849 cv
121.182 259.853 116.137 263.642 112.68 268.442 cv
108.82 273.802 107.119 279.741 106.274 286.226 cv
104.523 299.647 106.012 325.448 107.772 327.919 cv
cp
193.521 286.226 mo
192.676 279.741 190.976 273.802 187.116 268.442 cv
183.659 263.642 178.613 259.853 172.481 259.849 cv
163.418 259.843 152.818 272.509 151.852 274.829 cv
150.071 279.112 153.005 279.784 155.641 281.323 cv
159.579 283.622 164.671 285.858 166.736 284.065 cv
167.604 283.31 168.674 281.608 169.6 280.464 cv
172.068 277.405 176.068 274.526 179.188 278.165 cv
187.49 287.853 188.818 315.481 189.202 320.142 cv
189.402 322.573 190.948 329.429 192.023 327.919 cv
193.783 325.448 195.272 299.647 193.521 286.226 cv
cp
.992157 .866667 .521569 rgb
f
107.772 327.919 mo
108.848 329.429 110.393 322.573 110.594 320.142 cv
110.977 315.481 112.305 287.853 120.608 278.165 cv
123.727 274.526 127.727 277.405 130.196 280.464 cv
131.121 281.608 132.192 283.31 133.06 284.065 cv
135.125 285.858 140.217 283.622 144.154 281.323 cv
146.791 279.784 149.725 279.112 147.943 274.829 cv
146.978 272.509 136.378 259.843 127.314 259.849 cv
121.182 259.853 116.137 263.642 112.68 268.442 cv
108.82 273.802 107.119 279.741 106.274 286.226 cv
104.523 299.647 106.012 325.448 107.772 327.919 cv
cp
193.521 286.226 mo
192.676 279.741 190.976 273.802 187.116 268.442 cv
183.659 263.642 178.613 259.853 172.481 259.849 cv
163.418 259.843 152.818 272.509 151.852 274.829 cv
150.071 279.112 153.005 279.784 155.641 281.323 cv
159.579 283.622 164.671 285.858 166.736 284.065 cv
167.604 283.31 168.674 281.608 169.6 280.464 cv
172.068 277.405 176.068 274.526 179.188 278.165 cv
187.49 287.853 188.818 315.481 189.202 320.142 cv
189.402 322.573 190.948 329.429 192.023 327.919 cv
193.783 325.448 195.272 299.647 193.521 286.226 cv
cp
.992157 .756863 .109804 rgb
f
187.116 268.442 mo
183.659 263.642 178.613 259.853 172.481 259.849 cv
163.418 259.843 152.818 272.509 151.852 274.829 cv
151.824 274.899 151.807 274.958 151.781 275.026 cv
152.551 276.163 154.143 276.759 155.641 277.634 cv
159.579 279.933 164.671 282.169 166.736 280.376 cv
167.604 279.62 168.674 277.919 169.6 276.774 cv
172.068 273.718 175.15 271.896 179.188 274.474 cv
193.076 283.351 192.212 311.79 192.596 316.452 cv
192.679 317.456 192.991 319.214 193.404 320.827 cv
194.371 311.608 194.768 295.782 193.521 286.226 cv
192.676 279.741 190.976 273.802 187.116 268.442 cv
cp
.992157 .866667 .521569 rgb
f
120.608 274.474 mo
124.881 272.306 127.727 273.718 130.196 276.774 cv
131.121 277.919 132.192 279.62 133.06 280.376 cv
135.125 282.169 140.217 279.933 144.154 277.634 cv
145.652 276.759 147.245 276.163 148.015 275.026 cv
147.988 274.958 147.972 274.899 147.943 274.829 cv
146.978 272.509 136.378 259.843 127.314 259.849 cv
121.182 259.853 116.137 263.642 112.68 268.442 cv
108.82 273.802 107.119 279.741 106.274 286.226 cv
105.027 295.782 105.424 311.608 106.391 320.827 cv
106.805 319.214 107.117 317.456 107.199 316.452 cv
107.584 311.79 107.121 281.323 120.608 274.474 cv
cp
f
149.897 290.849 mo
154.174 290.849 155.467 275.88 149.897 275.853 cv
144.328 275.827 145.622 290.849 149.897 290.849 cv
cp
1 .537255 .380392 rgb
f
130.352 290.927 mo
130.572 292.954 131.85 294.593 133.707 295.978 cv
135.121 297.032 136.82 298.128 138.585 298.487 cv
139.727 298.722 140.816 298.487 141.425 299.001 cv
141.898 298.313 142.166 297.567 142.163 296.784 cv
142.152 293.491 137.513 290.837 131.8 290.856 cv
131.307 290.858 130.826 290.886 130.352 290.927 cv
cp
f
157.142 305.677 mo
157.142 298.735 153.898 291.556 149.897 291.556 cv
145.897 291.556 142.654 298.735 142.654 305.677 cv
142.654 312.616 145.897 324.452 149.897 324.452 cv
153.898 324.452 157.142 312.616 157.142 305.677 cv
cp
f
167.957 290.856 mo
162.244 290.874 157.622 293.56 157.633 296.853 cv
157.635 297.618 157.896 298.347 158.355 299.017 cv
158.96 298.483 160.059 298.724 161.21 298.487 cv
162.975 298.128 164.674 297.032 166.088 295.978 cv
167.947 294.591 169.226 292.95 169.444 290.921 cv
168.957 290.882 168.463 290.854 167.957 290.856 cv
cp
f
149.897 329.511 mo
150.599 330.364 152.49 331.22 153.535 331.108 cv
154.706 330.983 156.117 330.146 157.41 329.165 cv
157.531 328.899 157.641 328.63 157.727 328.354 cv
156.786 328.993 155.801 329.556 154.966 329.692 cv
153.078 330.001 151.262 329.687 150.324 328.058 cv
150.639 327.815 150.785 327.05 150.85 326.839 cv
151.156 325.839 153.246 323.567 153.471 323.405 cv
154.238 322.849 154.805 322.071 155.404 321.351 cv
155.584 321.136 155.346 320.749 155.084 320.935 cv
154.375 321.435 153.672 322.034 152.871 322.378 cv
152.063 322.728 151 322.597 150.141 322.714 cv
150.051 322.726 149.971 322.749 149.897 322.778 cv
149.824 322.749 149.744 322.726 149.654 322.714 cv
148.795 322.597 147.732 322.728 146.926 322.378 cv
146.124 322.034 145.42 321.435 144.712 320.935 cv
144.449 320.749 144.212 321.136 144.391 321.351 cv
144.992 322.071 145.558 322.849 146.324 323.405 cv
146.549 323.567 148.639 325.839 148.945 326.839 cv
149.01 327.05 149.156 327.815 149.471 328.058 cv
148.533 329.687 146.718 330.001 144.83 329.692 cv
143.994 329.556 143.01 328.993 142.069 328.354 cv
142.155 328.63 142.264 328.899 142.385 329.165 cv
143.679 330.146 145.09 330.983 146.26 331.108 cv
147.306 331.22 149.197 330.364 149.897 329.511 cv
cp
.658824 .164706 0 rgb
f
146.324 323.405 mo
146.379 323.444 146.543 323.61 146.765 323.849 cv
146.819 323.874 146.87 323.907 146.926 323.931 cv
147.732 324.278 152.063 324.278 152.871 323.931 cv
152.926 323.907 152.977 323.874 153.03 323.849 cv
153.252 323.61 153.416 323.444 153.471 323.405 cv
154.238 322.849 154.805 322.071 155.404 321.351 cv
155.584 321.136 155.346 320.749 155.084 320.935 cv
154.375 321.435 153.672 322.034 152.871 322.378 cv
152.063 322.728 147.732 322.728 146.926 322.378 cv
146.124 322.034 145.42 321.435 144.712 320.935 cv
144.449 320.749 144.212 321.136 144.391 321.351 cv
144.992 322.071 145.558 322.849 146.324 323.405 cv
cp
.278431 .0745098 .00784314 rgb
f
156.006 279.118 mo
155.793 279.118 155.576 279.065 155.377 278.952 cv
155.068 278.772 li
154.461 278.421 154.221 277.622 154.573 277.015 cv
154.926 276.405 155.672 276.181 156.279 276.532 cv
156.279 276.534 156.347 276.571 156.347 276.573 cv
156.639 276.741 li
157.248 277.089 157.461 277.866 157.113 278.478 cv
156.879 278.888 156.448 279.118 156.006 279.118 cv
cp
.992157 .756863 .109804 rgb
f
192.475 314.81 mo
191.791 314.81 191.227 314.269 191.203 313.581 cv
191.175 312.747 li
191.154 312.13 191.576 311.601 192.156 311.464 cv
191.567 311.376 191.104 310.884 191.074 310.267 cv
191.031 309.442 li
190.998 308.825 191.41 308.288 191.986 308.14 cv
191.396 308.067 190.922 307.585 190.877 306.97 cv
190.814 306.147 li
190.766 305.534 191.16 304.987 191.73 304.823 cv
191.141 304.765 190.652 304.3 190.59 303.687 cv
190.502 302.868 li
190.436 302.255 190.813 301.698 191.377 301.517 cv
190.786 301.479 190.283 301.03 190.199 300.421 cv
190.084 299.608 li
189.994 299.001 190.349 298.431 190.902 298.228 cv
190.313 298.21 189.795 297.782 189.688 297.181 cv
189.639 296.913 189.59 296.644 189.538 296.374 cv
189.424 295.774 189.752 295.19 190.295 294.962 cv
189.725 294.94 189.172 294.569 189.035 293.974 cv
188.975 293.708 188.912 293.442 188.848 293.177 cv
188.703 292.583 189.002 291.985 189.531 291.729 cv
188.941 291.763 188.389 291.401 188.219 290.813 cv
188.144 290.556 188.066 290.296 187.986 290.038 cv
187.809 289.46 188.063 288.851 188.566 288.56 cv
187.99 288.632 187.42 288.302 187.213 287.733 cv
187.12 287.481 187.025 287.229 186.928 286.979 cv
186.709 286.417 186.918 285.794 187.396 285.468 cv
186.832 285.591 186.235 285.308 185.98 284.761 cv
185.867 284.519 185.751 284.276 185.633 284.038 cv
185.365 283.501 185.514 282.864 185.955 282.495 cv
185.408 282.671 184.795 282.454 184.483 281.942 cv
184.346 281.716 184.205 281.491 184.063 281.269 cv
183.74 280.772 183.809 280.134 184.193 279.716 cv
183.676 279.948 183.051 279.815 182.68 279.354 cv
182.515 279.149 182.348 278.95 182.176 278.753 cv
181.791 278.312 181.766 277.679 182.075 277.214 cv
181.607 277.517 180.977 277.481 180.539 277.095 cv
180.346 276.923 180.148 276.755 179.948 276.593 cv
179.499 276.228 179.363 275.618 179.578 275.108 cv
179.184 275.483 178.578 275.573 178.079 275.292 cv
177.865 275.171 177.655 275.065 177.447 274.974 cv
176.972 274.765 176.688 274.298 176.688 273.81 cv
176.475 274.241 176.012 274.554 175.511 274.517 cv
175.268 274.517 175.081 274.53 174.898 274.556 cv
174.4 274.634 173.928 274.399 173.662 274.009 cv
173.725 274.487 173.51 274.981 173.072 275.253 cv
172.875 275.376 172.683 275.511 172.492 275.655 cv
172.046 275.999 171.443 276.001 171.002 275.698 cv
171.293 276.159 171.266 276.774 170.893 277.21 cv
170.789 277.329 170.688 277.452 170.588 277.575 cv
170.406 277.806 li
170.035 278.288 169.385 278.427 168.855 278.177 cv
169.26 278.622 169.303 279.304 168.927 279.8 cv
168.738 280.05 168.551 280.286 168.368 280.505 cv
167.916 281.042 167.113 281.112 166.575 280.659 cv
166.574 280.657 166.572 280.655 166.57 280.655 cv
166.582 280.696 166.59 280.741 166.598 280.784 cv
166.704 281.478 166.227 282.128 165.532 282.235 cv
165.25 282.278 164.95 282.3 164.641 282.3 cv
164.486 282.298 li
163.805 282.286 163.26 281.741 163.238 281.067 cv
162.996 281.669 162.33 281.997 161.697 281.812 cv
161.416 281.728 161.133 281.636 160.846 281.536 cv
160.24 281.323 159.896 280.702 160.017 280.091 cv
159.674 280.606 158.998 280.808 158.42 280.538 cv
158.16 280.417 157.901 280.292 157.643 280.165 cv
157.014 279.853 156.755 279.089 157.066 278.46 cv
157.379 277.829 158.144 277.573 158.771 277.882 cv
159.012 278.001 159.254 278.118 159.496 278.231 cv
160.036 278.483 160.316 279.067 160.207 279.628 cv
160.521 279.155 161.128 278.94 161.688 279.134 cv
161.934 279.22 162.179 279.298 162.419 279.37 cv
162.959 279.53 163.313 280.015 163.33 280.548 cv
163.521 280.073 163.987 279.741 164.534 279.753 cv
164.641 279.755 li
164.817 279.755 164.986 279.743 165.146 279.72 cv
165.523 279.661 165.893 279.776 166.164 280.007 cv
166.063 279.62 166.145 279.192 166.421 278.864 cv
166.577 278.679 166.736 278.476 166.898 278.263 cv
167.27 277.774 167.924 277.628 168.457 277.882 cv
168.05 277.433 168.011 276.743 168.395 276.247 cv
168.604 275.981 li
168.727 275.831 168.843 275.69 168.961 275.552 cv
169.387 275.056 170.115 274.968 170.644 275.329 cv
170.293 274.78 170.415 274.044 170.942 273.64 cv
171.199 273.442 171.461 273.259 171.729 273.093 cv
172.313 272.731 173.076 272.896 173.457 273.464 cv
173.365 272.772 173.848 272.136 174.537 272.038 cv
174.846 271.993 175.158 271.974 175.465 271.972 cv
175.584 271.974 li
176.275 271.993 176.822 272.562 176.82 273.249 cv
177.119 272.64 177.85 272.37 178.477 272.647 cv
178.756 272.771 179.041 272.913 179.33 273.075 cv
179.9 273.397 180.127 274.093 179.877 274.681 cv
180.335 274.247 181.053 274.212 181.555 274.616 cv
181.783 274.804 182.009 274.995 182.23 275.19 cv
182.711 275.618 182.791 276.327 182.444 276.849 cv
182.967 276.509 183.674 276.597 184.095 277.081 cv
184.287 277.302 184.477 277.528 184.66 277.757 cv
185.062 278.253 185.027 278.96 184.607 279.417 cv
185.171 279.159 185.852 279.351 186.198 279.886 cv
186.355 280.128 186.51 280.374 186.66 280.622 cv
186.99 281.167 186.863 281.862 186.389 282.259 cv
186.977 282.073 187.629 282.335 187.912 282.905 cv
188.039 283.163 188.164 283.423 188.286 283.683 cv
188.555 284.257 188.357 284.929 187.851 285.272 cv
188.45 285.14 189.07 285.468 189.3 286.058 cv
189.403 286.323 189.505 286.591 189.604 286.86 cv
189.818 287.45 189.57 288.097 189.044 288.399 cv
189.646 288.325 190.234 288.688 190.42 289.288 cv
190.503 289.56 190.584 289.833 190.664 290.106 cv
190.839 290.712 190.545 291.343 189.994 291.606 cv
190.617 291.556 191.172 291.964 191.32 292.575 cv
191.389 292.853 191.453 293.13 191.517 293.407 cv
191.656 294.019 191.33 294.628 190.77 294.862 cv
191.367 294.864 191.92 295.28 192.039 295.897 cv
192.092 296.175 192.143 296.454 192.193 296.731 cv
192.304 297.349 191.949 297.94 191.381 298.149 cv
191.986 298.167 192.51 298.616 192.602 299.237 cv
192.721 300.073 li
192.807 300.694 192.428 301.272 191.852 301.458 cv
192.456 301.497 192.965 301.966 193.033 302.589 cv
193.122 303.427 li
193.186 304.05 192.79 304.612 192.209 304.78 cv
192.811 304.839 193.302 305.321 193.352 305.946 cv
193.416 306.786 li
193.461 307.409 193.049 307.96 192.463 308.11 cv
193.062 308.187 193.539 308.681 193.574 309.304 cv
193.616 310.146 li
193.646 310.769 193.223 311.31 192.635 311.446 cv
193.23 311.534 193.697 312.036 193.719 312.659 cv
193.747 313.493 li
193.771 314.196 193.221 314.786 192.52 314.81 cv
192.504 314.81 192.489 314.81 192.475 314.81 cv
cp
f
192.595 317.726 mo
191.939 317.726 191.383 317.224 191.328 316.558 cv
191.316 316.425 191.307 316.272 191.297 316.103 cv
191.258 315.399 191.795 314.8 192.498 314.761 cv
193.189 314.739 193.799 315.259 193.838 315.962 cv
193.846 316.104 193.854 316.233 193.864 316.347 cv
193.923 317.046 193.402 317.663 192.703 317.722 cv
192.666 317.724 192.631 317.726 192.595 317.726 cv
cp
f
107.201 317.726 mo
107.166 317.726 107.131 317.724 107.097 317.722 cv
106.396 317.663 105.874 317.05 105.931 316.351 cv
105.939 316.235 105.949 316.106 105.957 315.96 cv
105.998 315.259 106.603 314.724 107.302 314.763 cv
108.003 314.804 108.539 315.405 108.498 316.106 cv
108.488 316.274 108.479 316.425 108.468 316.556 cv
108.414 317.22 107.857 317.726 107.201 317.726 cv
cp
f
107.335 314.815 mo
107.318 314.815 107.302 314.815 107.285 314.815 cv
106.582 314.788 106.035 314.196 106.063 313.493 cv
106.097 312.657 li
106.122 312.034 106.592 311.534 107.188 311.45 cv
106.602 311.31 106.18 310.769 106.213 310.144 cv
106.26 309.308 li
106.295 308.683 106.775 308.188 107.374 308.116 cv
106.79 307.964 106.38 307.411 106.428 306.788 cv
106.492 305.95 li
106.543 305.327 107.033 304.847 107.633 304.786 cv
107.055 304.62 106.659 304.058 106.723 303.437 cv
106.811 302.595 li
106.879 301.976 107.382 301.509 107.982 301.466 cv
107.408 301.28 107.031 300.706 107.113 300.087 cv
107.228 299.251 li
107.315 298.63 107.838 298.177 108.444 298.157 cv
107.873 297.952 107.513 297.362 107.618 296.743 cv
107.763 295.917 li
107.873 295.3 108.41 294.868 109.014 294.868 cv
109.016 294.868 109.017 294.868 109.018 294.868 cv
108.457 294.64 108.124 294.034 108.256 293.423 cv
108.315 293.146 108.377 292.868 108.439 292.591 cv
108.581 291.976 109.155 291.583 109.754 291.604 cv
109.197 291.351 108.891 290.724 109.057 290.114 cv
109.131 289.841 109.207 289.567 109.284 289.296 cv
109.458 288.688 110.048 288.317 110.648 288.38 cv
110.113 288.089 109.85 287.446 110.055 286.851 cv
110.147 286.579 110.243 286.31 110.341 286.042 cv
110.558 285.446 111.172 285.108 111.773 285.228 cv
111.258 284.892 111.047 284.226 111.303 283.646 cv
111.42 283.382 111.539 283.118 111.662 282.86 cv
111.934 282.282 112.579 282.005 113.174 282.183 cv
112.691 281.794 112.552 281.101 112.873 280.55 cv
113.021 280.298 113.172 280.048 113.325 279.802 cv
113.666 279.259 114.35 279.063 114.919 279.315 cv
114.492 278.86 114.455 278.147 114.859 277.647 cv
115.047 277.415 115.238 277.188 115.434 276.968 cv
115.861 276.483 116.575 276.403 117.097 276.755 cv
116.76 276.222 116.864 275.507 117.363 275.095 cv
117.6 274.901 117.839 274.714 118.084 274.536 cv
118.611 274.151 119.334 274.233 119.766 274.702 cv
119.563 274.099 119.842 273.423 120.434 273.146 cv
120.723 273.011 121.004 272.89 121.281 272.784 cv
121.912 272.544 122.613 272.833 122.893 273.437 cv
122.892 272.759 123.425 272.194 124.107 272.163 cv
124.215 272.159 124.322 272.157 124.428 272.155 cv
124.428 272.155 124.428 272.155 124.43 272.155 cv
124.67 272.155 124.896 272.167 125.117 272.188 cv
125.81 272.255 126.319 272.864 126.264 273.556 cv
126.621 272.968 127.381 272.767 127.981 273.108 cv
128.262 273.267 128.534 273.444 128.803 273.64 cv
129.34 274.032 129.479 274.769 129.139 275.327 cv
129.666 274.962 130.399 275.046 130.828 275.546 cv
130.947 275.685 131.067 275.827 131.186 275.974 cv
131.395 276.237 li
131.781 276.735 131.74 277.427 131.33 277.876 cv
131.863 277.622 132.52 277.767 132.892 278.257 cv
133.054 278.47 133.214 278.673 133.371 278.86 cv
133.646 279.19 133.728 279.618 133.626 280.005 cv
133.897 279.774 134.264 279.661 134.643 279.718 cv
134.805 279.745 134.976 279.755 135.154 279.755 cv
135.25 279.753 li
135.793 279.749 136.264 280.075 136.457 280.552 cv
136.475 280.019 136.828 279.532 137.367 279.372 cv
137.608 279.302 137.854 279.222 138.102 279.136 cv
138.66 278.937 139.266 279.159 139.58 279.63 cv
139.471 279.069 139.751 278.487 140.291 278.235 cv
140.532 278.122 140.773 278.007 141.015 277.886 cv
141.645 277.577 142.408 277.831 142.72 278.464 cv
143.031 279.093 142.773 279.856 142.145 280.169 cv
141.886 280.296 141.627 280.421 141.368 280.542 cv
140.788 280.81 140.113 280.608 139.771 280.095 cv
139.89 280.706 139.546 281.327 138.941 281.538 cv
138.653 281.638 138.369 281.729 138.09 281.813 cv
137.454 282.001 136.789 281.669 136.548 281.067 cv
136.526 281.739 135.982 282.284 135.301 282.298 cv
135.154 282.3 li
134.84 282.3 134.535 282.278 134.252 282.233 cv
133.557 282.126 133.082 281.476 133.189 280.78 cv
133.197 280.737 133.205 280.692 133.217 280.651 cv
133.216 280.653 133.215 280.653 133.213 280.653 cv
132.674 281.106 131.871 281.034 131.42 280.497 cv
131.238 280.28 131.052 280.042 130.864 279.796 cv
130.486 279.298 130.531 278.614 130.938 278.169 cv
130.408 278.421 129.759 278.28 129.385 277.8 cv
129.207 277.575 li
129.104 277.448 129.002 277.325 128.898 277.204 cv
128.529 276.776 128.496 276.171 128.775 275.714 cv
128.342 276.013 127.75 276.022 127.301 275.694 cv
127.112 275.556 126.92 275.431 126.725 275.321 cv
126.281 275.069 126.047 274.591 126.084 274.114 cv
125.839 274.519 125.377 274.771 124.875 274.72 cv
124.732 274.708 124.587 274.7 124.439 274.7 cv
124.223 274.704 li
123.688 274.755 123.223 274.425 123.012 273.974 cv
123.011 274.483 122.701 274.964 122.195 275.159 cv
121.973 275.245 121.744 275.341 121.512 275.45 cv
120.998 275.692 120.405 275.558 120.039 275.163 cv
120.211 275.675 120.041 276.263 119.58 276.597 cv
119.377 276.743 119.178 276.897 118.983 277.06 cv
118.539 277.427 117.92 277.44 117.464 277.134 cv
117.758 277.601 117.723 278.222 117.339 278.655 cv
117.169 278.847 117.002 279.044 116.84 279.247 cv
116.471 279.704 115.85 279.841 115.334 279.61 cv
115.719 280.022 115.795 280.657 115.481 281.155 cv
115.342 281.378 115.205 281.603 115.072 281.831 cv
114.771 282.349 114.162 282.575 113.612 282.413 cv
114.06 282.772 114.22 283.403 113.964 283.944 cv
113.851 284.185 113.74 284.429 113.631 284.673 cv
113.388 285.226 112.8 285.519 112.231 285.411 cv
112.717 285.728 112.939 286.345 112.732 286.913 cv
112.641 287.165 112.551 287.419 112.463 287.675 cv
112.266 288.251 111.699 288.587 111.119 288.528 cv
111.63 288.808 111.898 289.411 111.732 289.995 cv
111.657 290.257 111.584 290.519 111.513 290.782 cv
111.352 291.372 110.799 291.759 110.211 291.72 cv
110.749 291.966 111.059 292.562 110.921 293.159 cv
110.859 293.425 110.801 293.692 110.744 293.958 cv
110.615 294.554 110.088 294.962 109.501 294.962 cv
109.501 294.962 109.499 294.962 109.498 294.962 cv
110.042 295.185 110.376 295.765 110.269 296.366 cv
110.127 297.173 li
110.023 297.778 109.508 298.21 108.916 298.229 cv
109.474 298.429 109.834 298.997 109.748 299.606 cv
109.637 300.421 li
109.555 301.03 109.057 301.481 108.467 301.522 cv
109.03 301.704 109.408 302.263 109.341 302.874 cv
109.254 303.692 li
109.192 304.306 108.705 304.771 108.115 304.831 cv
108.686 304.995 109.079 305.542 109.029 306.155 cv
108.965 306.979 li
108.918 307.595 108.442 308.075 107.852 308.147 cv
108.428 308.296 108.836 308.835 108.801 309.45 cv
108.756 310.28 li
108.723 310.897 108.254 311.388 107.664 311.472 cv
108.244 311.61 108.665 312.144 108.639 312.763 cv
108.606 313.593 li
108.579 314.278 108.016 314.815 107.335 314.815 cv
cp
f
143.789 279.118 mo
143.347 279.118 142.917 278.888 142.683 278.478 cv
142.334 277.866 142.547 277.089 143.157 276.741 cv
143.449 276.573 li
144.154 277.634 li
144.793 278.735 li
144.418 278.952 li
144.219 279.065 144.003 279.118 143.789 279.118 cv
cp
f
320.993 289.806 mo
316.319 292.739 317.259 288.286 315.114 284.868 cv
312.969 281.45 308.551 280.36 313.224 277.427 cv
317.899 274.495 323.427 274.888 325.571 278.306 cv
327.718 281.724 325.669 286.872 320.993 289.806 cv
cp
.278431 .0745098 .00784314 rgb
f
318.21 285.368 mo
313.536 288.302 315.724 285.837 315.114 284.868 cv
314.507 283.901 311.335 284.798 316.009 281.864 cv
320.683 278.931 324.964 277.337 325.571 278.306 cv
326.179 279.272 322.884 282.437 318.21 285.368 cv
cp
.658824 .164706 0 rgb
f
325.571 278.306 mo
326.8 280.263 323.771 284.374 318.808 287.487 cv
317.765 288.142 317.028 288.507 316.495 288.663 cv
316.97 289.854 317.757 290.306 320.304 288.706 cv
324.978 285.772 327.337 281.116 325.571 278.306 cv
cp
f
313.915 278.528 mo
311.37 280.124 311.433 281.028 312.3 281.976 cv
312.671 281.563 313.319 281.058 314.362 280.405 cv
319.325 277.29 324.345 276.349 325.571 278.306 cv
323.808 275.495 318.589 275.595 313.915 278.528 cv
cp
f
362.028 294.413 mo
370.53 300.396 382.39 306.298 385.2 299.44 cv
388.009 292.583 385.487 276.358 372.204 269.581 cv
341.032 253.675 317.669 282.249 317.669 282.249 cv
317.669 282.249 340.81 279.478 362.028 294.413 cv
cp
1 .415686 .219608 rgb
f
362.028 294.413 mo
364.134 295.896 366.448 297.372 368.778 298.651 cv
366.96 292.583 362.952 286.384 355.948 282.81 cv
341.448 275.413 328.642 277.638 319.087 282.136 cv
324.405 281.817 343.913 281.661 362.028 294.413 cv
cp
1 .537255 .380392 rgb
f
349.483 273.304 mo
351.696 273.175 353.413 271.741 353.317 270.103 cv
353.222 268.462 351.351 267.237 349.14 267.366 cv
346.927 267.495 345.21 268.929 345.306 270.567 cv
345.401 272.206 347.271 273.433 349.483 273.304 cv
cp
.768627 .192157 0 rgb
f
350.417 272.763 mo
352.302 272.653 353.765 271.452 353.685 270.081 cv
353.604 268.708 352.013 267.687 350.13 267.796 cv
348.245 267.905 346.782 269.106 346.862 270.478 cv
346.94 271.849 348.534 272.872 350.417 272.763 cv
cp
1 .415686 .219608 rgb
f
350.603 269.716 mo
351.097 269.677 351.47 269.292 351.435 268.856 cv
351.399 268.423 350.968 268.103 350.476 268.144 cv
349.981 268.185 349.61 268.569 349.646 269.003 cv
349.681 269.437 350.11 269.757 350.603 269.716 cv
cp
.992157 .866667 .521569 rgb
f
348.753 270.06 mo
349.058 269.94 349.218 269.626 349.114 269.356 cv
349.011 269.089 348.677 268.97 348.374 269.089 cv
348.069 269.208 347.905 269.522 348.011 269.79 cv
348.116 270.058 348.448 270.177 348.753 270.06 cv
cp
f
341.257 273.843 mo
342.874 273.749 344.126 272.702 344.056 271.503 cv
343.987 270.306 342.622 269.411 341.005 269.505 cv
339.39 269.599 338.136 270.646 338.206 271.845 cv
338.274 273.042 339.642 273.937 341.257 273.843 cv
cp
.768627 .192157 0 rgb
f
341.94 273.446 mo
343.315 273.368 344.384 272.491 344.327 271.489 cv
344.267 270.485 343.104 269.739 341.729 269.819 cv
340.351 269.899 339.284 270.776 339.343 271.778 cv
339.399 272.78 340.562 273.526 341.94 273.446 cv
cp
1 .415686 .219608 rgb
f
342.075 271.222 mo
342.437 271.194 342.708 270.913 342.681 270.595 cv
342.657 270.276 342.343 270.044 341.981 270.073 cv
341.62 270.103 341.349 270.384 341.376 270.702 cv
341.399 271.019 341.714 271.251 342.075 271.222 cv
cp
.992157 .866667 .521569 rgb
f
340.722 271.472 mo
340.946 271.386 341.063 271.157 340.987 270.96 cv
340.911 270.765 340.667 270.677 340.446 270.765 cv
340.224 270.851 340.104 271.079 340.181 271.276 cv
340.259 271.472 340.503 271.56 340.722 271.472 cv
cp
f
356.528 274.11 mo
359.431 274.579 362.067 273.216 362.417 271.063 cv
362.767 268.911 360.694 266.786 357.79 266.315 cv
354.886 265.845 352.249 267.208 351.901 269.362 cv
351.552 271.515 353.624 273.64 356.528 274.11 cv
cp
.768627 .192157 0 rgb
f
357.894 273.677 mo
360.366 274.077 362.608 272.942 362.899 271.142 cv
363.192 269.341 361.421 267.558 358.95 267.157 cv
356.476 266.757 354.233 267.892 353.942 269.692 cv
353.651 271.493 355.419 273.276 357.894 273.677 cv
cp
1 .415686 .219608 rgb
f
359.011 269.782 mo
359.663 269.872 360.255 269.481 360.335 268.907 cv
360.415 268.335 359.948 267.798 359.298 267.706 cv
358.646 267.618 358.054 268.009 357.974 268.583 cv
357.896 269.155 358.36 269.692 359.011 269.782 cv
cp
.992157 .866667 .521569 rgb
f
356.513 269.694 mo
356.942 269.628 357.243 269.267 357.185 268.89 cv
357.126 268.513 356.729 268.261 356.3 268.327 cv
355.872 268.394 355.571 268.755 355.63 269.132 cv
355.69 269.511 356.085 269.761 356.513 269.694 cv
cp
f
354.571 279.368 mo
357.019 279.757 359.235 278.604 359.524 276.79 cv
359.813 274.976 358.063 273.19 355.616 272.802 cv
353.169 272.413 350.954 273.567 350.663 275.38 cv
350.374 277.192 352.124 278.979 354.571 279.368 cv
cp
.768627 .192157 0 rgb
f
355.722 279.001 mo
357.804 279.333 359.69 278.372 359.931 276.854 cv
360.173 275.337 358.679 273.839 356.595 273.507 cv
354.511 273.175 352.626 274.136 352.384 275.653 cv
352.144 277.171 353.636 278.669 355.722 279.001 cv
cp
1 .415686 .219608 rgb
f
356.653 275.718 mo
357.202 275.794 357.7 275.462 357.767 274.978 cv
357.831 274.497 357.438 274.046 356.89 273.97 cv
356.341 273.896 355.843 274.228 355.778 274.71 cv
355.712 275.192 356.104 275.644 356.653 275.718 cv
cp
.992157 .866667 .521569 rgb
f
354.55 275.649 mo
354.911 275.591 355.163 275.288 355.112 274.97 cv
355.062 274.651 354.729 274.442 354.368 274.499 cv
354.007 274.558 353.755 274.86 353.804 275.179 cv
353.854 275.497 354.188 275.708 354.55 275.649 cv
cp
f
372.813 292.747 mo
375.415 293.813 378.388 292.567 379.454 289.968 cv
380.519 287.364 379.274 284.392 376.673 283.325 cv
374.071 282.259 371.099 283.505 370.032 286.106 cv
368.966 288.708 370.212 291.681 372.813 292.747 cv
cp
.278431 .0745098 .00784314 rgb
f
373.077 292.104 mo
375.323 293.024 377.89 291.948 378.81 289.704 cv
379.731 287.456 378.655 284.89 376.409 283.97 cv
374.163 283.048 371.597 284.124 370.675 286.37 cv
369.755 288.616 370.831 291.183 373.077 292.104 cv
cp
1 .537255 .380392 rgb
f
373.938 289.999 mo
375.022 290.442 376.263 289.923 376.706 288.841 cv
377.149 287.757 376.632 286.517 375.548 286.073 cv
374.464 285.63 373.224 286.149 372.78 287.231 cv
372.337 288.315 372.854 289.556 373.938 289.999 cv
cp
.278431 .0745098 .00784314 rgb
f
377.19 287.659 mo
378.138 288.048 379.104 287.88 379.349 287.284 cv
379.595 286.688 379.022 285.888 378.075 285.501 cv
377.126 285.112 376.159 285.28 375.915 285.876 cv
375.669 286.474 376.241 287.272 377.19 287.659 cv
cp
.992157 .866667 .521569 rgb
f
374.177 287.243 mo
374.702 287.458 375.239 287.364 375.374 287.034 cv
375.511 286.704 375.194 286.261 374.667 286.044 cv
374.14 285.827 373.603 285.921 373.468 286.253 cv
373.333 286.583 373.649 287.026 374.177 287.243 cv
cp
f
363.89 274.81 mo
366.61 275.925 369.487 275.194 370.313 273.177 cv
371.142 271.159 369.604 268.62 366.882 267.505 cv
364.159 266.39 361.284 267.12 360.456 269.138 cv
359.63 271.155 361.167 273.694 363.89 274.81 cv
cp
.768627 .192157 0 rgb
f
365.317 274.698 mo
367.634 275.647 370.075 275.05 370.767 273.362 cv
371.458 271.675 370.138 269.536 367.821 268.587 cv
365.503 267.636 363.062 268.233 362.37 269.923 cv
361.679 271.61 362.999 273.747 365.317 274.698 cv
cp
1 .415686 .219608 rgb
f
367.288 271.157 mo
367.901 271.394 368.567 271.147 368.774 270.606 cv
368.981 270.065 368.649 269.437 368.036 269.202 cv
367.421 268.966 366.757 269.214 366.55 269.753 cv
366.343 270.294 366.673 270.923 367.288 271.157 cv
cp
.992157 .866667 .521569 rgb
f
364.876 270.507 mo
365.308 270.538 365.683 270.255 365.71 269.874 cv
365.739 269.493 365.409 269.159 364.976 269.126 cv
364.544 269.095 364.169 269.378 364.142 269.759 cv
364.114 270.14 364.442 270.476 364.876 270.507 cv
cp
f
360.169 279.466 mo
362.415 280.511 364.864 280.009 365.64 278.345 cv
366.413 276.679 365.22 274.483 362.974 273.438 cv
360.728 272.392 358.278 272.894 357.505 274.56 cv
356.729 276.224 357.923 278.421 360.169 279.466 cv
cp
.768627 .192157 0 rgb
f
361.374 279.429 mo
363.288 280.317 365.364 279.911 366.013 278.519 cv
366.659 277.126 365.634 275.274 363.722 274.384 cv
361.808 273.493 359.731 273.901 359.083 275.294 cv
358.435 276.687 359.462 278.538 361.374 279.429 cv
cp
1 .415686 .219608 rgb
f
363.171 276.526 mo
363.679 276.749 364.249 276.567 364.444 276.12 cv
364.64 275.675 364.384 275.134 363.878 274.911 cv
363.37 274.688 362.8 274.87 362.604 275.317 cv
362.411 275.763 362.663 276.306 363.171 276.526 cv
cp
.992157 .866667 .521569 rgb
f
361.169 275.886 mo
361.53 275.929 361.856 275.704 361.896 275.386 cv
361.935 275.065 361.669 274.772 361.308 274.728 cv
360.944 274.685 360.618 274.907 360.579 275.228 cv
360.54 275.546 360.804 275.841 361.169 275.886 cv
cp
f
378.864 278.491 mo
381.317 281.47 382.175 284.817 382.946 284.181 cv
383.718 283.546 382.356 280.614 379.903 277.636 cv
377.452 274.657 374.837 272.759 374.063 273.394 cv
373.292 274.03 376.413 275.513 378.864 278.491 cv
cp
f
383.124 286.192 mo
383.222 286.665 383.53 286.999 383.813 286.94 cv
384.099 286.882 384.247 286.452 384.149 285.979 cv
384.052 285.509 383.743 285.175 383.46 285.231 cv
383.177 285.292 383.028 285.722 383.124 286.192 cv
cp
f
383.95 288.821 mo
383.997 289.048 384.173 289.204 384.343 289.169 cv
384.513 289.134 384.612 288.921 384.565 288.694 cv
384.517 288.47 384.343 288.315 384.173 288.349 cv
384.003 288.384 383.903 288.597 383.95 288.821 cv
cp
f
348.778 286.042 mo
343.997 283.286 347.626 283.321 348.726 281.419 cv
349.821 279.517 347.97 276.394 352.751 279.149 cv
357.53 281.905 360.517 285.683 359.421 287.585 cv
358.323 289.487 353.56 288.798 348.778 286.042 cv
cp
.278431 .0745098 .00784314 rgb
f
350.202 283.571 mo
345.421 280.815 348.413 281.958 348.726 281.419 cv
349.034 280.88 346.546 278.864 351.327 281.62 cv
356.106 284.376 359.729 287.048 359.421 287.585 cv
359.108 288.124 354.981 286.327 350.202 283.571 cv
cp
.658824 .164706 0 rgb
f
359.421 287.585 mo
358.792 288.675 354.167 287.185 349.091 284.257 cv
348.026 283.644 347.337 283.194 346.917 282.856 cv
346.374 283.337 346.528 283.927 349.13 285.429 cv
353.911 288.185 358.519 289.149 359.421 287.585 cv
cp
f
352.397 279.763 mo
349.794 278.261 349.206 278.425 349.063 279.136 cv
349.567 279.329 350.3 279.7 351.362 280.313 cv
356.44 283.241 360.048 286.495 359.421 287.585 cv
360.321 286.021 357.179 282.519 352.397 279.763 cv
cp
f
358.228 289.653 mo
360.927 291.208 363.647 291.542 364.306 290.401 cv
364.964 289.259 363.31 287.073 360.612 285.517 cv
357.913 283.964 355.194 283.628 354.534 284.769 cv
353.876 285.909 355.53 288.097 358.228 289.653 cv
cp
.768627 .192157 0 rgb
f
359.345 290.296 mo
361.427 291.497 363.647 291.542 364.306 290.401 cv
364.964 289.259 363.81 287.362 361.728 286.161 cv
359.647 284.962 357.427 284.915 356.769 286.056 cv
356.11 287.198 357.263 289.097 359.345 290.296 cv
cp
1 .415686 .219608 rgb
f
364.073 295.804 mo
371.683 300.815 381.017 305.046 384.456 300.716 cv
380.11 301.685 374.21 299.667 369.39 295.118 cv
364.333 290.345 361.983 284.224 363.05 279.763 cv
362.813 279.954 362.585 280.153 362.372 280.376 cv
359.081 283.864 359.958 290.229 364.073 295.804 cv
cp
.768627 .192157 0 rgb
f
388.802 304.28 mo
393.476 301.349 392.536 305.802 394.681 309.22 cv
396.827 312.638 401.245 313.728 396.571 316.661 cv
391.897 319.593 386.37 319.2 384.224 315.782 cv
382.079 312.364 384.128 307.214 388.802 304.28 cv
cp
.278431 .0745098 .00784314 rgb
f
391.585 308.72 mo
396.261 305.786 394.073 308.253 394.681 309.22 cv
395.288 310.187 398.46 309.29 393.786 312.224 cv
389.112 315.157 384.831 316.749 384.224 315.782 cv
383.616 314.813 386.911 311.651 391.585 308.72 cv
cp
.658824 .164706 0 rgb
f
384.224 315.782 mo
382.997 313.825 386.024 309.716 390.989 306.599 cv
392.03 305.946 392.769 305.581 393.3 305.425 cv
392.827 304.233 392.038 303.784 389.491 305.382 cv
384.819 308.315 382.46 312.972 384.224 315.782 cv
cp
f
395.88 315.56 mo
398.427 313.964 398.362 313.06 397.497 312.112 cv
397.126 312.524 396.476 313.028 395.435 313.683 cv
390.47 316.798 385.452 317.739 384.224 315.782 cv
385.987 318.593 391.206 318.493 395.88 315.56 cv
cp
f
347.767 299.675 mo
339.267 293.692 327.407 287.79 324.597 294.647 cv
321.786 301.503 324.308 317.729 337.593 324.507 cv
368.765 340.411 392.128 311.839 392.128 311.839 cv
392.128 311.839 368.987 314.61 347.767 299.675 cv
cp
1 .415686 .219608 rgb
f
347.767 299.675 mo
345.661 298.192 343.347 296.716 341.017 295.435 cv
342.835 301.503 346.845 307.704 353.849 311.276 cv
368.347 318.675 381.153 316.448 390.71 311.952 cv
385.39 312.271 365.884 312.427 347.767 299.675 cv
cp
1 .537255 .380392 rgb
f
360.312 320.784 mo
358.099 320.913 356.384 322.347 356.479 323.985 cv
356.573 325.626 358.444 326.851 360.657 326.722 cv
362.87 326.593 364.585 325.159 364.489 323.521 cv
364.396 321.882 362.524 320.655 360.312 320.784 cv
cp
.768627 .192157 0 rgb
f
359.378 321.325 mo
357.495 321.435 356.03 322.636 356.11 324.007 cv
356.19 325.38 357.782 326.401 359.667 326.292 cv
361.552 326.183 363.015 324.981 362.935 323.61 cv
362.854 322.239 361.263 321.216 359.378 321.325 cv
cp
1 .415686 .219608 rgb
f
359.192 324.372 mo
358.698 324.411 358.327 324.796 358.36 325.231 cv
358.397 325.665 358.827 325.983 359.321 325.944 cv
359.813 325.905 360.187 325.519 360.151 325.085 cv
360.114 324.651 359.685 324.331 359.192 324.372 cv
cp
.992157 .866667 .521569 rgb
f
361.044 324.028 mo
360.737 324.147 360.577 324.462 360.681 324.731 cv
360.786 324.999 361.118 325.118 361.423 324.999 cv
361.728 324.88 361.89 324.565 361.784 324.298 cv
361.681 324.03 361.347 323.909 361.044 324.028 cv
cp
f
368.538 320.245 mo
366.923 320.341 365.669 321.386 365.739 322.585 cv
365.808 323.78 367.173 324.677 368.79 324.583 cv
370.407 324.487 371.659 323.442 371.591 322.243 cv
371.521 321.046 370.155 320.153 368.538 320.245 cv
cp
.768627 .192157 0 rgb
f
367.856 320.642 mo
366.481 320.72 365.413 321.599 365.47 322.599 cv
365.528 323.603 366.692 324.349 368.065 324.269 cv
369.444 324.188 370.511 323.312 370.454 322.31 cv
370.396 321.308 369.233 320.56 367.856 320.642 cv
cp
1 .415686 .219608 rgb
f
367.72 322.866 mo
367.358 322.894 367.089 323.177 367.114 323.493 cv
367.14 323.812 367.452 324.042 367.813 324.015 cv
368.175 323.983 368.446 323.704 368.421 323.386 cv
368.396 323.069 368.081 322.837 367.72 322.866 cv
cp
.992157 .866667 .521569 rgb
f
369.073 322.616 mo
368.849 322.702 368.731 322.933 368.808 323.128 cv
368.884 323.323 369.128 323.411 369.349 323.323 cv
369.573 323.237 369.69 323.009 369.614 322.812 cv
369.538 322.616 369.294 322.528 369.073 322.616 cv
cp
f
353.267 319.978 mo
350.364 319.507 347.728 320.872 347.38 323.024 cv
347.03 325.177 349.103 327.302 352.007 327.772 cv
354.911 328.241 357.546 326.88 357.896 324.726 cv
358.243 322.575 356.173 320.448 353.267 319.978 cv
cp
.768627 .192157 0 rgb
f
351.901 320.411 mo
349.429 320.011 347.187 321.146 346.896 322.946 cv
346.604 324.745 348.374 326.53 350.847 326.931 cv
353.319 327.331 355.562 326.196 355.853 324.396 cv
356.146 322.595 354.376 320.812 351.901 320.411 cv
cp
1 .415686 .219608 rgb
f
350.784 324.306 mo
350.132 324.216 349.54 324.606 349.462 325.181 cv
349.382 325.753 349.847 326.29 350.497 326.38 cv
351.149 326.47 351.741 326.079 351.821 325.507 cv
351.899 324.933 351.437 324.396 350.784 324.306 cv
cp
.992157 .866667 .521569 rgb
f
353.28 324.394 mo
352.853 324.462 352.552 324.821 352.61 325.198 cv
352.671 325.577 353.067 325.827 353.495 325.761 cv
353.925 325.694 354.226 325.333 354.165 324.956 cv
354.106 324.579 353.71 324.327 353.28 324.394 cv
cp
f
355.224 314.72 mo
352.776 314.331 350.56 315.483 350.271 317.298 cv
349.983 319.11 351.733 320.897 354.179 321.286 cv
356.626 321.677 358.843 320.521 359.132 318.708 cv
359.421 316.896 357.671 315.108 355.224 314.72 cv
cp
.768627 .192157 0 rgb
f
354.075 315.087 mo
351.991 314.755 350.104 315.716 349.864 317.233 cv
349.622 318.749 351.116 320.249 353.2 320.581 cv
355.286 320.913 357.171 319.952 357.411 318.435 cv
357.653 316.917 356.159 315.419 354.075 315.087 cv
cp
1 .415686 .219608 rgb
f
353.144 318.368 mo
352.593 318.294 352.095 318.626 352.028 319.108 cv
351.964 319.591 352.356 320.042 352.905 320.118 cv
353.454 320.192 353.952 319.86 354.019 319.378 cv
354.083 318.894 353.69 318.442 353.144 318.368 cv
cp
.992157 .866667 .521569 rgb
f
355.245 318.438 mo
354.884 318.495 354.632 318.8 354.683 319.116 cv
354.733 319.435 355.067 319.646 355.429 319.589 cv
355.79 319.532 356.042 319.228 355.991 318.909 cv
355.94 318.591 355.606 318.382 355.245 318.438 cv
cp
f
333.122 310.763 mo
335.724 311.827 338.698 310.583 339.765 307.981 cv
340.829 305.38 339.585 302.407 336.981 301.341 cv
334.382 300.274 331.407 301.521 330.343 304.12 cv
329.276 306.722 330.522 309.696 333.122 310.763 cv
cp
.278431 .0745098 .00784314 rgb
f
333.386 310.12 mo
335.634 311.04 338.2 309.964 339.122 307.718 cv
340.042 305.472 338.966 302.903 336.72 301.985 cv
334.474 301.063 331.907 302.14 330.987 304.386 cv
330.065 306.632 331.142 309.2 333.386 310.12 cv
cp
1 .537255 .380392 rgb
f
334.249 308.015 mo
335.333 308.46 336.571 307.938 337.015 306.856 cv
337.46 305.772 336.94 304.532 335.856 304.089 cv
334.772 303.646 333.534 304.163 333.089 305.247 cv
332.646 306.331 333.165 307.571 334.249 308.015 cv
cp
.278431 .0745098 .00784314 rgb
f
337.499 305.675 mo
338.448 306.063 339.415 305.896 339.659 305.298 cv
339.903 304.702 339.333 303.905 338.384 303.517 cv
337.437 303.128 336.468 303.296 336.226 303.892 cv
335.979 304.487 336.552 305.286 337.499 305.675 cv
cp
.992157 .866667 .521569 rgb
f
334.487 305.259 mo
335.013 305.474 335.55 305.382 335.685 305.05 cv
335.821 304.718 335.505 304.274 334.978 304.06 cv
334.45 303.843 333.913 303.937 333.776 304.269 cv
333.642 304.599 333.96 305.042 334.487 305.259 cv
cp
f
345.907 319.278 mo
343.185 318.161 340.308 318.894 339.481 320.911 cv
338.653 322.929 340.19 325.47 342.913 326.583 cv
345.636 327.7 348.513 326.968 349.339 324.95 cv
350.165 322.933 348.63 320.394 345.907 319.278 cv
cp
.768627 .192157 0 rgb
f
344.479 319.39 mo
342.161 318.438 339.72 319.036 339.028 320.726 cv
338.337 322.413 339.657 324.552 341.976 325.501 cv
344.294 326.452 346.733 325.854 347.425 324.165 cv
348.116 322.479 346.798 320.341 344.479 319.39 cv
cp
1 .415686 .219608 rgb
f
342.509 322.931 mo
341.896 322.692 341.229 322.94 341.022 323.483 cv
340.815 324.022 341.146 324.651 341.761 324.886 cv
342.374 325.12 343.04 324.874 343.247 324.333 cv
343.454 323.794 343.122 323.165 342.509 322.931 cv
cp
.992157 .866667 .521569 rgb
f
344.921 323.581 mo
344.487 323.55 344.112 323.831 344.087 324.212 cv
344.058 324.595 344.386 324.929 344.819 324.962 cv
345.253 324.993 345.626 324.71 345.653 324.329 cv
345.683 323.946 345.354 323.614 344.921 323.581 cv
cp
f
349.628 314.622 mo
347.38 313.577 344.931 314.079 344.155 315.743 cv
343.382 317.409 344.575 319.604 346.823 320.651 cv
349.069 321.696 351.517 321.192 352.292 319.528 cv
353.067 317.864 351.874 315.667 349.628 314.622 cv
cp
.768627 .192157 0 rgb
f
348.421 314.659 mo
346.509 313.771 344.431 314.177 343.784 315.569 cv
343.136 316.962 344.161 318.813 346.075 319.704 cv
347.987 320.595 350.065 320.187 350.712 318.794 cv
351.36 317.401 350.333 315.55 348.421 314.659 cv
cp
1 .415686 .219608 rgb
f
346.626 317.562 mo
346.116 317.339 345.548 317.521 345.353 317.968 cv
345.157 318.413 345.411 318.956 345.917 319.177 cv
346.425 319.399 346.995 319.218 347.19 318.772 cv
347.386 318.323 347.132 317.782 346.626 317.562 cv
cp
.992157 .866667 .521569 rgb
f
348.628 318.202 mo
348.267 318.159 347.938 318.384 347.899 318.704 cv
347.862 319.022 348.126 319.315 348.489 319.36 cv
348.851 319.403 349.177 319.181 349.218 318.86 cv
349.255 318.542 348.991 318.247 348.628 318.202 cv
cp
f
330.931 315.597 mo
328.479 312.618 327.62 309.271 326.849 309.907 cv
326.077 310.542 327.438 313.474 329.892 316.452 cv
332.345 319.429 334.958 321.331 335.731 320.694 cv
336.503 320.058 333.384 318.575 330.931 315.597 cv
cp
f
326.671 307.896 mo
326.573 307.423 326.265 307.089 325.981 307.147 cv
325.696 307.204 325.548 307.636 325.646 308.108 cv
325.743 308.579 326.052 308.913 326.335 308.854 cv
326.618 308.796 326.769 308.366 326.671 307.896 cv
cp
f
325.845 305.265 mo
325.798 305.038 325.622 304.884 325.452 304.919 cv
325.282 304.954 325.183 305.167 325.231 305.392 cv
325.278 305.618 325.454 305.774 325.622 305.739 cv
325.792 305.702 325.892 305.491 325.845 305.265 cv
cp
f
361.017 308.046 mo
365.798 310.804 362.169 310.767 361.071 312.669 cv
359.976 314.571 361.825 317.694 357.046 314.938 cv
352.265 312.183 349.278 308.405 350.376 306.501 cv
351.474 304.599 356.237 305.29 361.017 308.046 cv
cp
.278431 .0745098 .00784314 rgb
f
359.593 310.517 mo
364.374 313.272 361.382 312.13 361.071 312.669 cv
360.761 313.208 363.249 315.224 358.468 312.468 cv
353.688 309.712 350.065 307.04 350.376 306.501 cv
350.687 305.964 354.813 307.761 359.593 310.517 cv
cp
.658824 .164706 0 rgb
f
350.376 306.501 mo
351.003 305.413 355.628 306.903 360.704 309.831 cv
361.771 310.444 362.458 310.894 362.88 311.231 cv
363.423 310.751 363.269 310.161 360.665 308.659 cv
355.884 305.903 351.278 304.937 350.376 306.501 cv
cp
f
357.397 314.325 mo
360.001 315.825 360.591 315.663 360.733 314.954 cv
360.229 314.759 359.497 314.388 358.433 313.772 cv
353.354 310.847 349.747 307.591 350.376 306.501 cv
349.474 308.067 352.618 311.569 357.397 314.325 cv
cp
f
351.569 304.435 mo
348.87 302.88 346.149 302.544 345.491 303.687 cv
344.833 304.827 346.485 307.015 349.185 308.569 cv
351.882 310.124 354.603 310.462 355.261 309.319 cv
355.919 308.177 354.265 305.989 351.569 304.435 cv
cp
.768627 .192157 0 rgb
f
350.452 303.792 mo
348.37 302.591 346.149 302.544 345.491 303.687 cv
344.833 304.827 345.985 306.726 348.067 307.927 cv
350.149 309.126 352.368 309.173 353.028 308.032 cv
353.685 306.89 352.532 304.991 350.452 303.792 cv
cp
1 .415686 .219608 rgb
f
345.722 298.284 mo
338.112 293.272 328.778 289.04 325.341 293.372 cv
329.685 292.403 335.585 294.421 340.405 298.97 cv
345.462 303.743 347.812 309.864 346.747 314.325 cv
346.981 314.134 347.212 313.935 347.423 313.712 cv
350.714 310.226 349.839 303.856 345.722 298.284 cv
cp
.768627 .192157 0 rgb
f
252.055 281.386 mo
250.286 275.833 253.63 269.812 259.522 267.935 cv
265.416 266.058 271.627 269.036 273.394 274.587 cv
275.163 280.14 271.82 286.163 265.927 288.04 cv
260.033 289.917 253.823 286.938 252.055 281.386 cv
cp
267.132 291.827 mo
275.246 289.241 279.85 280.95 277.415 273.308 cv
274.98 265.665 266.43 261.563 258.316 264.147 cv
250.203 266.733 245.601 275.022 248.034 282.665 cv
250.47 290.308 259.021 294.409 267.132 291.827 cv
cp
f
260.606 300.21 mo
263.232 305.81 261.082 312.354 255.807 314.827 cv
250.529 317.3 244.127 314.765 241.503 309.165 cv
238.876 303.563 241.026 297.019 246.302 294.546 cv
251.578 292.073 257.981 294.61 260.606 300.21 cv
cp
244.513 290.726 mo
237.247 294.13 234.289 303.142 237.902 310.851 cv
241.518 318.562 250.335 322.052 257.597 318.647 cv
264.862 315.241 267.82 306.233 264.206 298.524 cv
260.593 290.813 251.774 287.321 244.513 290.726 cv
cp
1 .415686 .219608 rgb
f
255.333 304.202 mo
268.657 310.024 li
278.598 287.28 li
265.273 281.456 li
266.057 274.481 263.781 268.61 256.079 265.243 cv
244.236 260.067 223.417 262.491 218.2 274.425 cv
212.984 286.362 225.344 303.288 237.187 308.464 cv
244.891 311.831 250.744 309.515 255.333 304.202 cv
cp
.768627 .192157 0 rgb
f
219.861 271.296 mo
219.112 280.128 231.196 292.431 241.947 297.128 cv
249.649 300.495 255.039 299.245 258.926 295.534 cv
272.25 301.358 li
278.436 287.208 li
265.111 281.386 li
265.896 274.409 263.618 268.538 255.916 265.173 cv
245.165 260.474 227.02 262.04 219.861 271.296 cv
cp
1 .415686 .219608 rgb
f
275.008 285.712 mo
273.232 288.14 271.059 292.065 269.053 296.653 cv
267.047 301.243 265.644 305.503 265.067 308.456 cv
268.657 310.024 li
278.598 287.28 li
275.008 285.712 li
cp
.768627 .192157 0 rgb
f
267.051 313.255 mo
268.526 313.899 272.595 307.853 276.137 299.749 cv
279.679 291.646 281.353 284.554 279.877 283.909 cv
279.722 283.841 279.121 283.577 278.967 283.509 cv
277.489 282.864 273.421 288.911 269.879 297.015 cv
266.338 305.118 264.663 312.212 266.14 312.856 cv
266.294 312.923 266.896 313.185 267.051 313.255 cv
cp
1 .537255 .380392 rgb
f
268.756 310.067 mo
269.406 310.353 272.155 305.491 274.901 299.208 cv
277.646 292.929 279.345 287.606 278.696 287.323 cv
278.048 287.04 275.297 291.901 272.553 298.183 cv
269.808 304.464 268.107 309.784 268.756 310.067 cv
cp
.278431 .0745098 .00784314 rgb
f
231.269 269.606 mo
233.407 262.108 249.281 263.257 258.95 269.001 cv
263.002 271.409 265.42 277.427 263.282 284.921 cv
261.14 292.421 255.729 297.452 251.199 296.159 cv
246.671 294.864 229.127 277.104 231.269 269.606 cv
cp
1 .537255 .380392 rgb
f
268.292 286.474 mo
266.369 285.624 264.998 284.505 265.232 283.978 cv
265.465 283.448 267.214 283.71 269.138 284.56 cv
271.061 285.411 272.43 286.528 272.196 287.056 cv
271.962 287.585 270.215 287.323 268.292 286.474 cv
cp
1 1 1 rgb
f
275.355 274.308 mo
274.942 273.149 274.972 272.081 275.416 271.925 cv
275.86 271.767 276.557 272.577 276.968 273.735 cv
277.378 274.894 277.351 275.962 276.905 276.118 cv
276.46 276.276 275.767 275.466 275.355 274.308 cv
cp
f
278.222 286.851 mo
277.581 287.565 276.828 287.94 276.545 287.685 cv
276.261 287.429 276.552 286.644 277.192 285.927 cv
277.834 285.212 278.583 284.839 278.867 285.093 cv
279.151 285.349 278.861 286.136 278.222 286.851 cv
cp
f
258.742 275.39 mo
257.938 273.423 257.848 271.599 258.538 271.317 cv
259.227 271.036 260.439 272.403 261.24 274.372 cv
262.043 276.339 262.135 278.161 261.446 278.442 cv
260.758 278.726 259.545 277.358 258.742 275.39 cv
cp
f
266.625 321.69 mo
263.147 325.866 261.098 331.253 262.956 333.925 cv
265.167 337.104 273.408 337.669 277.506 331.036 cv
287.121 315.476 271.628 302.036 271.628 302.036 cv
271.628 302.036 275.313 311.272 266.625 321.69 cv
cp
1 .537255 .380392 rgb
f
268.825 321.897 mo
265.903 325.56 264.084 330.198 265.471 332.403 cv
267.123 335.024 273.678 335.214 277.177 329.446 cv
285.387 315.909 273.498 305.05 273.498 305.05 cv
273.498 305.05 276.113 312.757 268.825 321.897 cv
cp
1 .415686 .219608 rgb
f
271.408 322.548 mo
268.522 327.112 269.351 329.626 269.7 330.233 cv
271.153 332.757 274.458 333.456 277.835 328.376 cv
286.294 315.655 273.322 305.288 273.322 305.288 cv
273.322 305.288 275.396 316.245 271.408 322.548 cv
cp
1 .537255 .380392 rgb
f
274.831 325.896 mo
275.322 324.786 276.264 324.124 276.935 324.421 cv
277.605 324.718 277.752 325.86 277.261 326.97 cv
276.77 328.081 275.828 328.739 275.157 328.442 cv
274.485 328.147 274.341 327.005 274.831 325.896 cv
cp
1 1 1 rgb
f
277.145 321.37 mo
277.249 320.745 277.642 320.288 278.019 320.351 cv
278.396 320.415 278.618 320.974 278.512 321.601 cv
278.407 322.226 278.018 322.681 277.639 322.618 cv
277.259 322.554 277.038 321.995 277.145 321.37 cv
cp
f
280.191 308.175 mo
280.852 311.114 282.527 313.835 284.332 313.923 cv
286.476 314.026 289.509 310.593 287.979 306.548 cv
284.386 297.06 273.24 299.331 273.24 299.331 cv
273.24 299.331 278.545 300.833 280.191 308.175 cv
cp
1 .537255 .380392 rgb
f
281.024 307.278 mo
281.648 309.8 283.073 312.169 284.511 312.304 cv
286.222 312.464 288.521 309.646 287.168 306.157 cv
283.989 297.972 275.195 299.526 275.195 299.526 cv
275.195 299.526 279.47 300.983 281.024 307.278 cv
cp
1 .415686 .219608 rgb
f
282.184 306.362 mo
283.216 309.171 284.603 309.659 284.987 309.71 cv
286.589 309.925 288.011 308.708 286.92 305.505 cv
284.186 297.485 275.243 299.687 275.243 299.687 cv
275.243 299.687 280.761 302.478 282.184 306.362 cv
cp
1 .537255 .380392 rgb
f
284.813 305.989 mo
284.491 305.397 284.519 304.759 284.878 304.565 cv
285.232 304.37 285.786 304.692 286.107 305.28 cv
286.429 305.872 286.401 306.509 286.043 306.704 cv
285.687 306.899 285.136 306.579 284.813 305.989 cv
cp
1 1 1 rgb
f
283.605 303.442 mo
283.365 303.185 283.296 302.856 283.454 302.712 cv
283.609 302.567 283.93 302.659 284.169 302.917 cv
284.407 303.173 284.476 303.501 284.32 303.646 cv
284.165 303.79 283.845 303.698 283.605 303.442 cv
cp
f
281.894 324.423 mo
280.95 326.366 280.671 328.64 281.645 329.493 cv
282.8 330.511 286.034 329.942 286.983 326.993 cv
289.213 320.071 281.953 316.36 281.953 316.36 cv
281.953 316.36 284.255 319.575 281.894 324.423 cv
cp
1 .537255 .380392 rgb
f
282.763 324.294 mo
281.985 325.985 281.723 327.95 282.47 328.665 cv
283.356 329.522 285.904 328.97 286.705 326.411 cv
288.583 320.405 282.961 317.347 282.961 317.347 cv
282.961 317.347 284.704 320.069 282.763 324.294 cv
cp
1 .415686 .219608 rgb
f
283.82 324.298 mo
283.144 326.335 283.7 327.226 283.895 327.427 cv
284.695 328.263 286.037 328.218 286.857 325.937 cv
288.91 320.22 282.916 317.454 282.916 317.454 cv
282.916 317.454 284.76 321.487 283.82 324.298 cv
cp
1 .537255 .380392 rgb
f
285.463 325.265 mo
285.545 324.788 285.845 324.446 286.132 324.495 cv
286.419 324.546 286.586 324.974 286.502 325.448 cv
286.418 325.923 286.118 326.267 285.83 326.216 cv
285.543 326.165 285.378 325.739 285.463 325.265 cv
cp
1 1 1 rgb
f
285.924 323.298 mo
285.904 323.046 286.011 322.833 286.164 322.819 cv
286.315 322.81 286.455 323.005 286.473 323.255 cv
286.492 323.509 286.384 323.72 286.231 323.731 cv
286.079 323.743 285.942 323.55 285.924 323.298 cv
cp
f
76.1338 327.606 mo
76.2402 326.923 li
17.3408 327.099 li
17.5166 268.2 li
16.835 268.306 li
16.6572 327.774 li
16.668 327.772 li
16.666 327.782 li
76.1338 327.606 li
cp
.658824 .164706 0 rgb
f
82.1816 322.657 mo
81.8555 322.271 81.1709 322.042 80.5752 322.425 cv
80.6143 322.423 80.6523 322.423 80.6914 322.421 cv
80.1025 322.55 79.5195 322.991 79.3994 323.661 cv
79.3154 324.132 79.2695 324.427 79.2588 324.696 cv
78.4512 324.687 76.541 323.79 76.3975 323.585 cv
75.8232 322.757 75.4355 321.903 75.2588 320.843 cv
74.917 318.804 74.5986 316.726 74.9014 314.538 cv
75.7119 308.669 77.9463 302.687 77.0713 298.554 cv
74.7764 287.696 65.6182 278.983 65.5381 278.903 cv
65.458 278.823 56.7451 269.663 45.8867 267.368 cv
41.7539 266.495 35.7705 268.729 29.9033 269.54 cv
27.7158 269.841 25.6357 269.522 23.5967 269.183 cv
22.5361 269.005 21.6826 268.618 20.8564 268.042 cv
20.6514 267.899 19.7539 265.989 19.7441 265.181 cv
20.0137 265.171 20.3096 265.126 20.7803 265.042 cv
21.4473 264.921 21.8916 264.339 22.0195 263.749 cv
22.0186 263.788 22.0166 263.825 22.0166 263.864 cv
22.3994 263.271 22.1709 262.585 21.7822 262.259 cv
19.2354 260.11 16.1084 263.358 15.874 266.532 cv
15.4482 272.325 21.0791 273.585 25.8271 273.851 cv
32.2627 274.21 41.9561 269.976 48.6543 274.599 cv
58.0625 281.089 63.3506 286.378 69.8428 295.786 cv
74.4639 302.485 70.2314 312.179 70.5898 318.614 cv
70.8564 323.362 72.1143 328.993 77.9092 328.565 cv
81.0811 328.333 84.3291 325.204 82.1816 322.657 cv
cp
f
75.3555 324.95 mo
73.9473 323.542 73.1592 321.007 72.9463 317.196 cv
72.8359 315.218 73.2012 312.831 73.5869 310.304 cv
74.4199 304.854 75.3633 298.677 72.0244 293.837 cv
68.624 288.911 65.6631 285.267 62.418 282.022 cv
59.1738 278.778 55.5303 275.815 50.6025 272.417 cv
45.7637 269.077 39.5859 270.021 34.1357 270.854 cv
31.6084 271.239 29.2217 271.604 27.2432 271.495 cv
23.4336 271.28 20.8975 270.493 19.4893 269.085 cv
18.5244 268.12 19.4424 262.882 19.4424 262.882 cv
19.4619 264.47 li
19.4736 265.546 20.4229 267.612 20.8369 268.026 cv
20.8936 268.083 li
20.9795 268.147 li
21.9854 268.845 22.9854 269.259 24.1299 269.45 cv
26.4287 269.833 28.5186 270.126 30.8096 269.81 cv
32.8662 269.526 34.9102 269.077 36.8867 268.644 cv
40.4941 267.853 43.9033 267.104 46.373 267.626 cv
55.8984 269.64 63.8018 277.163 65.29 278.651 cv
65.5605 278.925 li
65.79 279.151 li
67.2773 280.64 74.8008 288.542 76.8135 298.067 cv
77.3359 300.538 76.5889 303.946 75.7959 307.554 cv
75.3633 309.53 74.915 311.575 74.6309 313.632 cv
74.3145 315.923 74.6064 318.013 74.9912 320.31 cv
75.1826 321.454 75.5967 322.456 76.2939 323.46 cv
76.3408 323.528 li
76.415 323.604 li
76.8291 324.017 81.5576 324.999 81.5576 324.999 cv
81.5576 324.999 76.3213 325.917 75.3564 324.95 cv
75.3555 324.95 li
cp
.768627 .192157 0 rgb
f
18.251 332.521 mo
17.1445 328.396 li
18.3525 327.187 li
19.459 331.312 li
18.251 332.521 li
cp
1 .415686 .219608 rgb
f
19.3027 331.466 mo
18.1963 327.343 li
19.4053 326.134 li
20.5117 330.259 li
19.3027 331.466 li
cp
.992157 .756863 .109804 rgb
f
20.3545 330.415 mo
19.249 326.29 li
20.458 325.081 li
21.5635 329.206 li
20.3545 330.415 li
cp
1 .415686 .219608 rgb
f
21.4072 329.362 mo
20.3018 325.239 li
21.5107 324.03 li
22.6162 328.153 li
21.4072 329.362 li
cp
.992157 .756863 .109804 rgb
f
22.46 328.31 mo
21.3545 324.185 li
22.5635 322.978 li
23.6689 327.101 li
22.46 328.31 li
cp
1 .415686 .219608 rgb
f
23.5127 327.257 mo
22.4072 323.134 li
23.6152 321.925 li
24.7207 326.05 li
23.5127 327.257 li
cp
.992157 .756863 .109804 rgb
f
24.5654 326.204 mo
23.46 322.081 li
24.668 320.872 li
25.7734 324.997 li
24.5654 326.204 li
cp
1 .415686 .219608 rgb
f
25.6172 325.153 mo
24.5117 321.028 li
25.7197 319.819 li
26.8252 323.944 li
25.6172 325.153 li
cp
.992157 .756863 .109804 rgb
f
26.6689 324.101 mo
25.5635 319.976 li
26.7725 318.767 li
27.8779 322.892 li
26.6689 324.101 li
cp
1 .415686 .219608 rgb
f
27.7217 323.048 mo
26.6162 318.923 li
27.8252 317.716 li
28.9307 321.839 li
27.7217 323.048 li
cp
.992157 .756863 .109804 rgb
f
11.9209 326.19 mo
16.0459 327.296 li
17.2539 326.087 li
13.1299 324.981 li
11.9209 326.19 li
cp
1 .415686 .219608 rgb
f
12.9736 325.138 mo
17.0977 326.243 li
18.3057 325.034 li
14.1816 323.929 li
12.9736 325.138 li
cp
.992157 .756863 .109804 rgb
f
14.0254 324.085 mo
18.1494 325.19 li
19.3584 323.983 li
15.2334 322.878 li
14.0254 324.085 li
cp
1 .415686 .219608 rgb
f
15.0781 323.034 mo
19.2021 324.14 li
20.4111 322.931 li
16.2861 321.825 li
15.0781 323.034 li
cp
.992157 .756863 .109804 rgb
f
16.1299 321.981 mo
20.2549 323.085 li
21.4639 321.878 li
17.3389 320.772 li
16.1299 321.981 li
cp
1 .415686 .219608 rgb
f
17.1826 320.929 mo
21.3076 322.034 li
22.5166 320.825 li
18.3916 319.72 li
17.1826 320.929 li
cp
.992157 .756863 .109804 rgb
f
18.2354 319.876 mo
22.3604 320.981 li
23.5693 319.772 li
19.4443 318.667 li
18.2354 319.876 li
cp
1 .415686 .219608 rgb
f
19.2881 318.823 mo
23.4131 319.929 li
24.6221 318.72 li
20.4971 317.616 li
19.2881 318.823 li
cp
.992157 .756863 .109804 rgb
f
20.3408 317.771 mo
24.4648 318.876 li
25.6738 317.667 li
21.5488 316.562 li
20.3408 317.771 li
cp
1 .415686 .219608 rgb
f
21.3936 316.718 mo
25.5176 317.823 li
26.7266 316.616 li
22.6016 315.511 li
21.3936 316.718 li
cp
.992157 .756863 .109804 rgb
f
72.0967 273.444 mo
70.9971 272.345 li
16.0459 327.296 li
17.1445 328.396 li
72.0967 273.444 li
cp
.278431 .0745098 .00784314 rgb
f
71.5469 272.894 mo
71.2549 272.603 li
16.3037 327.554 li
16.5947 327.847 li
71.5469 272.894 li
cp
.658824 .164706 0 rgb
f
77.3643 267.077 mo
71.5469 272.894 li
74.5947 275.942 li
77.3643 267.077 li
cp
.992157 .756863 .109804 rgb
f
77.3643 267.077 mo
71.5469 272.894 li
68.499 269.847 li
77.3643 267.077 li
cp
f
69.874 270.185 mo
77.3643 267.077 li
71.9189 272.229 li
69.874 270.185 li
cp
.992157 .866667 .521569 rgb
f
283.752 17.8647 mo
283.752 17.8647 285.342 25.8647 285.15 27.6841 cv
284.986 29.2373 284.172 31.041 283.752 31.7246 cv
283.428 32.2549 287.979 37.9399 288.725 38.9351 cv
289.471 39.9292 289.244 40.8218 287.912 42.1626 cv
286.58 43.5034 285.74 43.2861 285.367 44.2183 cv
284.996 45.1504 285.754 45.4629 285.943 45.6787 cv
286.27 46.0513 286.143 46.5967 285.367 46.9531 cv
286.113 47.3267 286.256 47.9531 285.896 48.7554 cv
285.535 49.5581 284.686 49.8125 284.313 50.8687 cv
283.939 51.9253 285.68 53.7285 284.686 55.9033 cv
283.689 58.0786 280.146 58.2651 276.045 56.5869 cv
274.74 56.2144 273.621 58.2651 273.186 58.9492 cv
272.75 59.6328 270.762 65.8486 269.395 69.6406 cv
268.027 70.3862 252.857 72.7378 247.141 65.1284 cv
248.354 60.6211 250.654 49.8115 250.297 46.7046 cv
249.938 43.5967 249.127 41.3022 247.793 39.4653 cv
246.459 37.6294 237.574 18.3901 252.957 9.92188 cv
268.338 1.4541 282.551 12.3105 283.752 17.8647 cv
cp
.992157 .756863 .109804 rgb
f
283.752 17.8647 mo
283.752 17.8647 285.342 25.8647 285.15 27.6841 cv
284.986 29.2373 284.172 31.041 283.752 31.7246 cv
283.428 32.2549 287.979 37.9399 288.725 38.9351 cv
289.471 39.9292 289.244 40.8218 287.912 42.1626 cv
286.58 43.5034 285.74 43.2861 285.367 44.2183 cv
284.996 45.1504 285.754 45.4629 285.943 45.6787 cv
286.27 46.0513 286.143 46.5967 285.367 46.9531 cv
286.113 47.3267 286.256 47.9531 285.896 48.7554 cv
285.535 49.5581 284.686 49.8125 284.313 50.8687 cv
283.939 51.9253 285.68 53.7285 284.686 55.9033 cv
283.689 58.0786 280.146 58.2651 276.045 56.5869 cv
274.74 56.2144 265.1 51.8472 264.111 48.8804 cv
262.867 45.1504 249.127 41.3022 247.793 39.4653 cv
246.459 37.6294 237.574 18.3901 252.957 9.92188 cv
268.338 1.4541 282.551 12.3105 283.752 17.8647 cv
cp
.992157 .866667 .521569 rgb
f
283.42 26.8032 mo
281.699 25.2627 279.258 25.3027 277.244 26.3379 cv
275.211 27.3838 272.984 28.4126 271.572 30.2905 cv
271.512 30.3735 271.631 30.4858 271.713 30.4307 cv
274.088 28.832 279.26 25.5532 281.709 28.5151 cv
282.695 29.7114 284.598 27.8579 283.42 26.8032 cv
cp
1 .415686 .219608 rgb
f
275.247 32.7559 mo
276.279 32 279.294 31.4458 279.855 31.4458 cv
280.416 31.4458 280.886 32.0015 281.034 32.7559 cv
281.065 32.5957 281.088 32.4302 281.088 32.2554 cv
281.088 31.2563 280.535 30.4458 279.855 30.4458 cv
279.176 30.4458 274.895 31.2563 274.895 32.2554 cv
274.895 32.4292 275.029 32.5967 275.247 32.7559 cv
cp
f
287.08 14.9321 mo
287.08 14.9316 287.08 14.9302 287.08 14.9297 cv
287.281 11.77 284.547 8.69287 281.873 7.18359 cv
279.395 5.78369 275.672 5.76025 272.74 6.46387 cv
267.639 3.93799 261.385 2.96973 255.672 3.80762 cv
252.768 4.23389 250.004 5.33789 247.633 7.0083 cv
245.408 8.5752 242.922 11.2637 242.578 13.9531 cv
242.564 14.0654 242.656 14.1328 242.752 14.1323 cv
242.748 14.146 242.742 14.1582 242.738 14.1719 cv
242.684 14.3765 242.957 14.4771 243.059 14.2856 cv
243.922 12.666 245.779 11.9834 247.467 11.3062 cv
246.387 12.0298 245.498 13.2217 244.803 14.1279 cv
243.486 15.8364 241.684 17.8398 240.785 19.7705 cv
238.775 24.0933 238.727 30.6074 241.643 34.4897 cv
241.824 34.7324 242.207 34.4966 242.164 34.2378 cv
242.064 33.6646 241.932 33.1025 241.783 32.5454 cv
241.715 31.1787 241.322 29.8369 241.572 28.4438 cv
241.895 26.6528 242.678 24.9946 243.523 23.3721 cv
242.457 25.5977 242.445 26.5371 242.355 29.208 cv
242.266 31.853 243.711 36.5986 244.484 39.1064 cv
245.207 41.4487 246.988 43.6914 248.361 45.7427 cv
249.389 47.2813 251.002 49.4253 252.951 49.9326 cv
253.211 50.0015 253.396 49.7246 253.238 49.5259 cv
253.113 49.3716 252.979 49.228 252.838 49.0879 cv
250.957 46.3848 249.945 43.4951 249.545 40.479 cv
250.857 46.0039 254.457 51.4268 258.678 54.7275 cv
258.766 54.7974 258.855 54.7144 258.859 54.6279 cv
258.941 54.7163 259.029 54.8018 259.121 54.8818 cv
259.176 54.9282 259.301 54.8955 259.271 54.8101 cv
258.035 51.2925 257.996 47.6426 258.326 43.9238 cv
258.516 41.7759 259.01 39.8452 259.697 37.9678 cv
259.852 38.6875 260.037 39.4097 260.248 40.1362 cv
261.316 43.7896 262.693 47.6743 264.359 51.1011 cv
264.377 51.1348 264.398 51.1631 264.424 51.1846 cv
264.438 51.2246 264.449 51.2666 264.463 51.3062 cv
264.6 51.6855 265.305 51.5396 265.287 51.1396 cv
265.188 48.7671 264.609 46.4277 264.496 44.0415 cv
264.389 41.8018 264.541 39.5562 264.797 37.3232 cv
265.072 34.9399 265.643 32.603 266.404 30.3115 cv
266.967 28.6226 267.783 27.0122 268.494 25.375 cv
268.141 26.895 267.971 28.4502 267.908 30.0205 cv
267.809 32.4067 267.76 35.8853 269.002 37.9707 cv
269.105 38.1455 269.402 38.1025 269.42 37.8857 cv
269.445 37.5776 269.43 37.272 269.396 36.9663 cv
270.289 34.7656 270.984 32.5547 272.109 30.4243 cv
273.158 28.4326 274.361 26.5146 275.404 24.5205 cv
277.266 20.9673 279.309 15.9639 277.711 12.022 cv
279.682 12.4624 281.125 14.375 282.275 15.8213 cv
284.117 18.1387 285.191 20.4375 285.988 23.2632 cv
286.057 23.5078 286.439 23.4351 286.398 23.1807 cv
286.396 23.167 286.393 23.1533 286.391 23.1396 cv
286.453 23.1011 286.502 23.0366 286.516 22.9443 cv
286.932 20.1846 285.861 17.2817 284.584 14.8843 cv
284.008 13.8037 283.168 12.479 282.127 11.4028 cv
282.197 11.439 282.271 11.4717 282.342 11.5078 cv
284.379 12.5557 285.664 14.1768 287.199 15.7456 cv
287.264 15.8115 287.414 15.7573 287.381 15.6587 cv
287.295 15.4058 287.191 15.165 287.08 14.9321 cv
cp
f
281.088 32.6309 mo
281.088 33.4805 280.623 34.1694 280.049 34.1694 cv
279.475 34.1694 279.01 33.4805 279.01 32.6309 cv
279.01 31.7808 279.475 31.0918 280.049 31.0918 cv
280.623 31.0918 281.088 31.7808 281.088 32.6309 cv
cp
f
267.965 15.8555 mo
267.965 15.8555 269.721 24.6934 269.51 26.7036 cv
269.328 28.4194 268.428 30.4121 267.965 31.1675 cv
267.605 31.7534 272.635 38.0337 273.459 39.1333 cv
274.283 40.2314 274.031 41.2178 272.559 42.6987 cv
271.088 44.1802 270.162 43.9404 269.75 44.9702 cv
269.338 46 270.176 46.3452 270.385 46.5835 cv
270.746 46.9951 270.605 47.5977 269.75 47.9912 cv
270.574 48.4038 270.73 49.0962 270.334 49.9824 cv
269.936 50.8691 268.994 51.1504 268.582 52.3174 cv
268.17 53.4844 270.094 55.4766 268.994 57.8794 cv
267.896 60.2827 263.982 60.4888 259.449 58.6348 cv
258.008 58.2231 256.771 60.4888 256.291 61.2441 cv
255.811 61.9995 253.613 68.8667 252.102 73.0557 cv
250.592 73.8799 233.832 76.4775 227.516 68.0708 cv
228.857 63.0913 231.398 51.1494 231.004 47.7168 cv
230.607 44.2832 229.711 41.7485 228.236 39.7192 cv
226.764 37.6909 216.949 16.4355 233.941 7.08057 cv
250.936 -2.27441 266.637 9.71924 267.965 15.8555 cv
cp
.658824 .164706 0 rgb
f
267.965 15.8555 mo
267.965 15.8555 269.721 24.6934 269.51 26.7036 cv
269.328 28.4194 268.428 30.4121 267.965 31.1675 cv
267.605 31.7534 272.635 38.0337 273.459 39.1333 cv
274.283 40.2314 274.031 41.2178 272.559 42.6987 cv
271.088 44.1802 270.162 43.9404 269.75 44.9702 cv
269.338 46 270.176 46.3452 270.385 46.5835 cv
270.746 46.9951 270.605 47.5977 269.75 47.9912 cv
270.574 48.4038 270.73 49.0962 270.334 49.9824 cv
269.936 50.8691 268.994 51.1504 268.582 52.3174 cv
268.17 53.4844 270.094 55.4766 268.994 57.8794 cv
267.896 60.2827 263.982 60.4888 259.449 58.6348 cv
258.008 58.2231 247.357 53.3984 246.266 50.1206 cv
244.891 46 229.711 41.7485 228.236 39.7192 cv
226.764 37.6909 216.949 16.4355 233.941 7.08057 cv
250.936 -2.27441 266.637 9.71924 267.965 15.8555 cv
cp
.768627 .192157 0 rgb
f
267.598 25.7305 mo
265.697 24.0283 262.998 24.0728 260.775 25.2163 cv
258.527 26.3716 256.068 27.5083 254.51 29.583 cv
254.441 29.6748 254.574 29.7988 254.664 29.7378 cv
257.287 27.9717 263 24.3496 265.707 27.6216 cv
266.799 28.9434 268.898 26.8955 267.598 25.7305 cv
cp
.278431 .0745098 .00784314 rgb
f
258.502 32.2539 mo
259.572 31.3921 263.026 30.7544 263.66 30.7544 cv
264.292 30.7544 264.819 31.3931 264.972 32.2539 cv
265 32.0933 265.02 31.9277 265.02 31.7539 cv
265.02 30.6499 264.41 29.7544 263.66 29.7544 cv
262.908 29.7544 258.178 30.6499 258.178 31.7539 cv
258.178 31.9268 258.304 32.0938 258.502 32.2539 cv
cp
f
271.619 12.6152 mo
271.619 12.6152 271.621 12.6133 271.619 12.6128 cv
271.857 9.12207 268.648 5.72266 265.514 4.05518 cv
262.607 2.5083 258.242 2.48242 254.803 3.25977 cv
248.818 .469238 241.486 -.600098 234.785 .325684 cv
231.381 .796387 228.139 2.01611 225.359 3.86133 cv
222.75 5.59229 219.832 8.5625 219.432 11.5337 cv
219.414 11.6582 219.521 11.7324 219.633 11.7319 cv
219.629 11.7471 219.623 11.7607 219.617 11.7754 cv
219.555 12.0015 219.873 12.1128 219.994 11.9014 cv
221.006 10.1118 223.182 9.35791 225.162 8.60938 cv
223.896 9.40918 222.855 10.7261 222.037 11.7271 cv
220.496 13.6147 218.381 15.8276 217.328 17.9609 cv
214.971 22.7363 214.912 29.9331 218.332 34.2222 cv
218.545 34.4902 218.996 34.2295 218.943 33.9438 cv
218.828 33.3105 218.672 32.6895 218.496 32.0742 cv
218.418 30.5645 217.957 29.082 218.252 27.543 cv
218.627 25.564 219.549 23.7324 220.537 21.9395 cv
219.287 24.3984 219.275 25.4365 219.168 28.3872 cv
219.064 31.3091 220.758 36.5522 221.666 39.3228 cv
222.514 41.9102 224.604 44.3882 226.211 46.6543 cv
227.418 48.354 229.311 50.7227 231.596 51.2832 cv
231.9 51.3589 232.117 51.0532 231.932 50.8335 cv
231.785 50.6631 231.627 50.5044 231.463 50.3496 cv
229.256 47.3633 228.068 44.1709 227.6 40.8389 cv
229.139 46.9429 233.361 52.9336 238.311 56.5806 cv
238.414 56.6577 238.52 56.5659 238.523 56.4702 cv
238.621 56.5679 238.725 56.6621 238.832 56.751 cv
238.896 56.8022 239.043 56.7661 239.008 56.6714 cv
237.559 52.7852 237.512 48.7529 237.898 44.6445 cv
238.121 42.2715 238.701 40.1387 239.51 38.0645 cv
239.688 38.8599 239.904 39.6577 240.154 40.4604 cv
241.406 44.4961 243.021 48.7881 244.975 52.5737 cv
244.994 52.6113 245.021 52.6426 245.049 52.666 cv
245.066 52.7104 245.08 52.7568 245.096 52.8003 cv
245.256 53.2197 246.084 53.0581 246.064 52.6167 cv
245.945 49.9956 245.268 47.4111 245.135 44.7749 cv
245.008 42.3003 245.188 39.8193 245.488 37.3525 cv
245.811 34.7197 246.479 32.1377 247.371 29.606 cv
248.031 27.7402 248.988 25.9614 249.822 24.1523 cv
249.408 25.8315 249.211 27.5498 249.135 29.2847 cv
249.02 31.9209 248.963 35.7642 250.418 38.0679 cv
250.541 38.2612 250.889 38.2134 250.908 37.9741 cv
250.938 37.6338 250.92 37.2959 250.883 36.958 cv
251.93 34.5269 252.744 32.0845 254.063 29.731 cv
255.295 27.5303 256.703 25.4116 257.928 23.2085 cv
260.109 19.2827 262.508 13.7554 260.631 9.40039 cv
262.943 9.88721 264.637 12 265.984 13.5977 cv
268.145 16.1582 269.406 18.6978 270.34 21.8193 cv
270.422 22.0898 270.869 22.0093 270.82 21.728 cv
270.818 21.7129 270.814 21.6982 270.813 21.6831 cv
270.885 21.6401 270.941 21.5693 270.957 21.4673 cv
271.445 18.4185 270.189 15.2114 268.691 12.5625 cv
268.018 11.3687 267.031 9.90527 265.813 8.71631 cv
265.895 8.75635 265.98 8.79248 266.064 8.83252 cv
268.453 9.99023 269.959 11.7808 271.76 13.5142 cv
271.836 13.5869 272.012 13.5273 271.973 13.418 cv
271.873 13.1387 271.75 12.873 271.619 12.6152 cv
cp
.992157 .866667 .521569 rgb
f
231.463 50.3496 mo
231.258 50.0718 231.07 49.791 230.881 49.5098 cv
231.182 50.0894 231.502 50.6714 231.844 51.2456 cv
231.99 51.1636 232.057 50.9829 231.932 50.8335 cv
231.785 50.6631 231.627 50.5044 231.463 50.3496 cv
cp
.992157 .756863 .109804 rgb
f
252.063 27.708 mo
252.189 23.8242 252.189 20.1606 252.928 16.3071 cv
253.543 13.1021 254.645 9.89111 254.318 6.62158 cv
254.283 6.27197 253.791 6.19385 253.666 6.53857 cv
251.236 13.2339 249.408 20.0386 248.451 27.0356 cv
248.902 26.0718 249.379 25.1157 249.822 24.1523 cv
249.408 25.8315 249.211 27.5498 249.135 29.2847 cv
249.02 31.9209 248.963 35.7642 250.418 38.0679 cv
250.541 38.2612 250.889 38.2134 250.908 37.9741 cv
250.938 37.6338 250.92 37.2959 250.883 36.958 cv
251.395 35.7695 251.852 34.5786 252.338 33.396 cv
252.084 31.5684 251.996 29.6982 252.063 27.708 cv
cp
f
241.797 35.2256 mo
241.15 27.8447 240.043 18.8438 244.719 12.4458 cv
244.941 12.1396 244.465 11.8413 244.197 12.0669 cv
237.934 17.3462 238.568 27.9966 238.709 35.2256 cv
238.732 36.4697 238.795 37.999 238.939 39.6675 cv
239.113 39.1274 239.303 38.5938 239.51 38.0645 cv
239.688 38.8599 239.904 39.6577 240.154 40.4604 cv
241.406 44.4961 243.021 48.7881 244.975 52.5737 cv
244.994 52.6113 245.021 52.6426 245.049 52.666 cv
245.066 52.7104 245.08 52.7568 245.096 52.8003 cv
245.256 53.2197 246.084 53.0581 246.064 52.6167 cv
246.033 51.9199 245.959 51.2256 245.869 50.5322 cv
245.271 49.4253 244.693 48.3164 244.264 47.1865 cv
242.809 43.3628 242.15 39.2544 241.797 35.2256 cv
cp
f
223.512 10.0146 mo
224.031 9.69092 224.557 9.38477 225.098 9.11133 cv
231.045 6.09863 236.902 6.17871 243.252 4.81738 cv
243.455 4.77393 243.461 4.46631 243.252 4.42578 cv
237.887 3.38428 229.287 4.05127 222.117 6.62402 cv
220.748 8.10303 219.662 9.81396 219.432 11.5337 cv
219.414 11.6582 219.521 11.7324 219.633 11.7319 cv
219.629 11.7471 219.623 11.7607 219.617 11.7754 cv
219.555 12.0015 219.873 12.1128 219.994 11.9014 cv
221.006 10.1118 223.182 9.35791 225.162 8.60938 cv
224.561 8.98975 224.014 9.48975 223.512 10.0146 cv
cp
f
238.311 56.5806 mo
238.414 56.6577 238.52 56.5659 238.523 56.4702 cv
238.621 56.5679 238.725 56.6621 238.832 56.751 cv
238.896 56.8022 239.043 56.7661 239.008 56.6714 cv
238.533 55.3979 238.221 54.1074 238.014 52.8052 cv
237.896 52.7061 237.779 52.6104 237.662 52.5063 cv
234.93 50.0894 232.811 46.7324 231.477 43.4614 cv
228.682 36.6089 229.951 29.5166 230.693 22.4551 cv
230.734 22.0659 230.104 21.9248 229.92 22.2578 cv
226.422 28.6426 226.15 35.6987 228.096 42.5107 cv
229.926 48.02 233.814 53.2676 238.311 56.5806 cv
cp
f
230.152 50.6665 mo
229.92 50.4629 229.684 50.2554 229.443 50.0391 cv
228.328 49.0361 227.354 48.0435 226.482 47.0249 cv
227.406 48.2905 228.662 49.7891 230.152 50.6665 cv
cp
f
221.918 38.104 mo
220.09 30.71 220.338 22.0864 224.502 15.5166 cv
224.746 15.1313 224.256 14.6548 223.844 14.897 cv
217.91 18.3799 217.51 26.9502 217.68 33.2944 cv
217.881 33.6152 218.096 33.9268 218.332 34.2222 cv
218.545 34.4902 218.996 34.2295 218.943 33.9438 cv
218.828 33.3105 218.672 32.6895 218.496 32.0742 cv
218.418 30.5645 217.957 29.082 218.252 27.543 cv
218.627 25.564 219.549 23.7324 220.537 21.9395 cv
219.287 24.3984 219.275 25.4365 219.168 28.3872 cv
219.064 31.3091 220.758 36.5522 221.666 39.3228 cv
222.215 41.0024 223.291 42.6348 224.416 44.1943 cv
223.322 42.4004 222.496 40.4375 221.918 38.104 cv
cp
f
265.02 31.9844 mo
265.02 32.834 264.555 33.5229 263.98 33.5229 cv
263.406 33.5229 262.941 32.834 262.941 31.9844 cv
262.941 31.1343 263.406 30.4453 263.98 30.4453 cv
264.555 30.4453 265.02 31.1343 265.02 31.9844 cv
cp
.278431 .0745098 .00784314 rgb
f
91.4834 151.183 mo
90.2529 148.082 88.2334 145.361 86.208 142.669 cv
86.8838 143.146 87.5479 143.644 88.1807 144.21 cv
88.9443 144.894 90.5361 144.245 90.0762 143.107 cv
86.2383 133.619 75.2646 122.157 64.0615 122.767 cv
64.2578 122.104 63.7949 121.288 62.9824 121.268 cv
59.1699 121.172 55.9805 122.527 53.0215 124.533 cv
53.6729 123.433 54.4014 122.378 55.1631 121.306 cv
55.6094 120.677 54.8994 120.055 54.2842 120.17 cv
54.2715 120.09 54.2646 120.007 54.2637 119.909 cv
54.2637 119.869 54.2012 119.868 54.2012 119.909 cv
54.2021 120.013 54.2217 120.096 54.2383 120.184 cv
54.1865 120.197 54.1338 120.204 54.085 120.229 cv
51.4355 121.54 49.207 123.408 47.3975 125.625 cv
45.5879 123.408 43.3594 121.54 40.71 120.229 cv
40.6611 120.204 40.6084 120.197 40.5566 120.184 cv
40.5732 120.096 40.5928 120.013 40.5938 119.909 cv
40.5938 119.868 40.5313 119.869 40.5313 119.909 cv
40.5303 120.007 40.5234 120.09 40.5107 120.17 cv
39.8955 120.055 39.1855 120.677 39.6318 121.306 cv
40.3936 122.378 41.1221 123.433 41.7734 124.533 cv
38.8145 122.527 35.625 121.172 31.8125 121.268 cv
31 121.288 30.5371 122.104 30.7334 122.767 cv
19.5303 122.157 8.55664 133.619 4.71875 143.107 cv
4.25879 144.245 5.85059 144.894 6.61426 144.21 cv
7.24707 143.644 7.91113 143.146 8.58691 142.669 cv
6.56152 145.361 4.54199 148.082 3.31152 151.183 cv
.870117 157.336 .0888672 164.08 0 170.659 cv
-.0136719 171.647 1.55176 172.204 1.97949 171.195 cv
3.4248 167.791 5.24121 163.552 8.2041 160.972 cv
3.7041 171.413 6.05762 182.587 12.3555 192.218 cv
12.8994 193.049 14.5674 192.838 14.4199 191.659 cv
14.2646 190.418 14.2188 189.195 14.2266 187.978 cv
14.958 190.578 15.9307 193.093 17.6484 195.18 cv
21.9219 200.37 26.8613 203.667 29.873 209.958 cv
30.3594 210.974 31.8867 210.431 31.8994 209.409 cv
31.9453 205.869 32.0576 202.355 31.8818 198.838 cv
33.792 201.645 36.7773 205.923 36.8857 206.097 cv
37.334 206.813 38.335 206.89 38.9375 206.456 cv
40.0215 208.817 40.9219 211.268 42.2402 213.536 cv
43.0029 214.848 44.6924 213.892 44.5098 212.579 cv
44.3096 211.144 43.0342 206.911 43.5215 204.576 cv
44.1855 208.804 44.9902 212.993 46.0537 217.14 cv
46.041 217.479 46.0361 217.819 46.0195 218.159 cv
45.9795 218.994 46.7217 219.403 47.3975 219.32 cv
48.0732 219.403 48.8154 218.994 48.7754 218.159 cv
48.7588 217.819 48.7539 217.479 48.7412 217.14 cv
49.8047 212.993 50.6094 208.804 51.2734 204.576 cv
51.7607 206.911 50.4854 211.144 50.2852 212.579 cv
50.1025 213.892 51.792 214.848 52.5547 213.536 cv
53.873 211.268 54.7734 208.817 55.8574 206.456 cv
56.46 206.89 57.4609 206.813 57.9092 206.097 cv
58.0176 205.923 61.0029 201.645 62.9131 198.838 cv
62.7373 202.355 62.8496 205.869 62.8955 209.409 cv
62.9082 210.431 64.4355 210.974 64.9219 209.958 cv
67.9336 203.667 72.873 200.37 77.1465 195.18 cv
78.8643 193.093 79.8369 190.578 80.5684 187.978 cv
80.5762 189.195 80.5303 190.418 80.375 191.659 cv
80.2275 192.838 81.8955 193.049 82.4395 192.218 cv
88.7373 182.587 91.0908 171.413 86.5908 160.972 cv
89.5537 163.552 91.3701 167.791 92.8154 171.195 cv
93.2432 172.204 94.8086 171.647 94.7949 170.659 cv
94.7061 164.08 93.9248 157.336 91.4834 151.183 cv
cp
.992157 .756863 .109804 rgb
f
77.1133 145.107 mo
75.5034 143.836 73.4741 141.814 70.3623 140.842 cv
72.271 140.521 74.2314 140.478 76.4595 141.226 cv
77.5557 141.594 78.375 140.322 77.8818 139.448 cv
75.7358 135.658 71.1763 133.882 66.8096 134.072 cv
64.522 134.172 61.4834 134.439 59.4902 135.818 cv
59.5273 135.573 59.5708 135.33 59.6304 135.099 cv
60.1479 133.118 61.2656 131.194 63.2583 130.33 cv
64.3101 129.875 63.793 128.164 62.6719 128.246 cv
59.687 128.462 57.2329 129.592 55.0259 131.514 cv
53.8335 132.553 52.6079 134.053 51.7769 135.652 cv
52.0078 133.364 52.3921 131.144 53.2466 128.892 cv
53.5503 128.086 52.5083 127.444 51.811 127.831 cv
49.8569 128.91 48.8809 130.964 48.0723 132.888 cv
47.8994 133.302 47.6431 133.862 47.3975 134.474 cv
47.1519 133.862 46.895 133.302 46.7227 132.888 cv
45.9141 130.964 44.938 128.91 42.9839 127.831 cv
42.2866 127.444 41.2441 128.086 41.5498 128.892 cv
42.4028 131.144 42.7871 133.364 43.0181 135.652 cv
42.187 134.053 40.9614 132.553 39.7686 131.514 cv
37.562 129.592 35.1079 128.462 32.123 128.246 cv
31.002 128.164 30.4844 129.875 31.5366 130.33 cv
33.5293 131.194 34.647 133.118 35.1646 135.099 cv
35.2241 135.33 35.2671 135.573 35.3047 135.818 cv
33.3115 134.439 30.271 134.172 27.9854 134.072 cv
23.6187 133.882 19.0591 135.658 16.9126 139.448 cv
16.4194 140.322 17.2388 141.594 18.3354 141.226 cv
20.5635 140.478 22.5239 140.521 24.4326 140.842 cv
21.3203 141.814 19.2915 143.836 17.6816 145.107 cv
12.2085 149.43 10.9453 157.865 12.4565 164.363 cv
12.7183 165.498 14.5562 165.49 14.8242 164.363 cv
15.7388 160.525 16.7832 156.977 20.4146 155.208 cv
20.6572 155.09 20.8872 155.009 21.1196 154.917 cv
13.3071 163.315 14.5898 174.454 14.8433 185.295 cv
14.8691 186.376 16.543 186.965 17.085 185.88 cv
18.3994 183.251 20.8237 180.732 23.1279 178.459 cv
21.7666 183.26 21.8247 189.135 21.7256 192.664 cv
21.7065 193.336 22.3008 193.815 22.959 193.851 cv
25.3252 193.978 28.1279 188.891 29.6582 187.412 cv
29.7295 187.344 li
27.5146 192.1 27.1421 195.791 27.7549 200.614 cv
27.8711 201.532 29.0391 202.283 29.8281 201.439 cv
32.3442 198.759 34.5679 198.1 37.1592 195.479 cv
35.6719 199.663 36.6885 201.349 37.7441 205.396 cv
38.0117 206.432 39.8398 206.542 40.0273 205.396 cv
40.6294 201.694 41.5835 201.432 42.9165 197.906 cv
42.9614 197.792 43.0161 197.68 43.061 197.567 cv
43.3779 198.443 43.687 199.307 43.9458 200.15 cv
45.3052 204.58 45.6221 203.413 46.9717 207.783 cv
47.0317 207.968 47.231 208.031 47.3975 207.988 cv
47.5645 208.031 47.7632 207.968 47.8232 207.783 cv
49.1729 203.413 49.4897 204.58 50.8491 200.15 cv
51.1079 199.307 51.417 198.443 51.7339 197.567 cv
51.7788 197.68 51.8354 197.792 51.8765 197.906 cv
53.2129 201.432 54.1655 201.694 54.7676 205.396 cv
54.9551 206.542 56.7832 206.432 57.0508 205.396 cv
58.1064 201.349 59.123 199.663 57.6357 195.479 cv
60.2271 198.1 62.4507 198.759 64.9663 201.439 cv
65.7559 202.283 66.9258 201.532 67.04 200.614 cv
67.6528 195.791 67.2803 192.1 65.0654 187.344 cv
65.1367 187.412 li
66.667 188.891 69.4697 193.978 71.8354 193.851 cv
72.4941 193.815 73.0884 193.336 73.0693 192.664 cv
72.9717 189.135 73.0283 183.26 71.667 178.459 cv
73.9712 180.732 76.3955 183.251 77.71 185.88 cv
78.252 186.965 79.9258 186.376 79.9517 185.295 cv
80.2031 174.454 81.4878 163.315 73.6729 154.917 cv
73.9077 155.009 74.1377 155.09 74.3799 155.208 cv
78.0117 156.977 79.0557 160.525 79.9707 164.363 cv
80.2388 165.49 82.0767 165.498 82.3384 164.363 cv
83.8496 157.865 82.5864 149.43 77.1133 145.107 cv
cp
.992157 .866667 .521569 rgb
f
47.3975 202.868 mo
47.041 202.177 46.6851 201.431 46.104 199.537 cv
45.8359 198.661 45.5151 197.766 45.1851 196.855 cv
44.8755 195.997 44.0415 195.416 43.0942 195.401 cv
43.0835 195.401 43.0718 195.401 43.061 195.401 cv
42.1294 195.401 41.293 195.953 40.9595 196.792 cv
40.8809 196.97 40.8433 197.06 40.8096 197.149 cv
40.3389 198.391 39.9355 199.167 39.5439 199.916 cv
39.3281 200.329 39.1182 200.735 38.9155 201.183 cv
38.5352 199.558 38.5254 198.325 39.2891 196.181 cv
39.6299 195.217 39.2285 194.154 38.3252 193.628 cv
37.9629 193.418 37.5605 193.314 37.1606 193.314 cv
36.5591 193.314 35.9648 193.546 35.5278 193.986 cv
34.4199 195.109 33.3721 195.834 32.2642 196.601 cv
31.4653 197.153 30.6494 197.719 29.8003 198.434 cv
29.5527 194.676 30.1416 191.753 31.7817 188.23 cv
32.2261 187.276 31.8999 186.153 31.0054 185.563 cv
30.6196 185.305 30.1733 185.182 29.731 185.182 cv
29.1479 185.182 28.5723 185.395 28.1372 185.813 cv
27.4907 186.439 26.8965 187.23 26.208 188.146 cv
25.7227 188.792 24.811 190.005 24.0181 190.838 cv
24.0913 187.376 24.228 182.807 25.3008 179.03 cv
25.5688 178.078 25.1357 177.07 24.2471 176.581 cv
23.8965 176.389 23.5122 176.296 23.1294 176.296 cv
22.5366 176.296 21.9521 176.519 21.5171 176.948 cv
19.9985 178.445 18.3618 180.111 16.9932 181.9 cv
16.6777 172.312 16.3843 163.257 22.7979 156.36 cv
23.4971 155.608 23.5645 154.492 22.959 153.667 cv
22.5259 153.079 21.834 152.752 21.1196 152.752 cv
20.833 152.752 20.5439 152.805 20.2646 152.915 cv
20.1172 152.972 li
19.8809 153.063 19.644 153.156 19.397 153.276 cv
16.6406 154.621 15.0903 156.771 14.1157 159.019 cv
14.1265 154.452 15.5444 149.596 19.1099 146.781 cv
19.397 146.552 19.6987 146.303 20.0156 146.04 cv
21.4048 144.883 22.978 143.573 25.1279 142.901 cv
26.1104 142.595 26.75 141.684 26.6787 140.692 cv
26.606 139.7 25.8408 138.882 24.8228 138.71 cv
23.814 138.54 22.8916 138.458 22.0005 138.458 cv
21.4932 138.458 20.9922 138.484 20.4971 138.538 cv
22.4453 136.865 25.1377 136.224 27.3521 136.224 cv
27.5283 136.224 27.7061 136.228 27.8843 136.235 cv
29.1006 136.288 32.333 136.429 33.9888 137.576 cv
34.3804 137.847 34.8418 137.984 35.3047 137.984 cv
35.708 137.984 36.1128 137.879 36.4731 137.669 cv
37.2451 137.217 37.6616 136.365 37.5303 135.505 cv
37.4834 135.189 37.4253 134.877 37.3481 134.58 cv
37.0596 133.472 36.6396 132.472 36.1035 131.598 cv
36.8379 132 37.5527 132.505 38.2578 133.119 cv
39.3188 134.046 40.3481 135.354 41.0063 136.62 cv
41.3945 137.367 42.1831 137.817 43.0181 137.817 cv
43.2261 137.817 43.4341 137.789 43.6401 137.731 cv
44.6826 137.443 45.3633 136.48 45.2578 135.442 cv
45.2471 135.314 45.2319 135.186 45.2188 135.061 cv
45.2451 135.124 45.2695 135.188 45.2979 135.253 cv
45.6313 136.087 46.4658 136.639 47.396 136.64 cv
47.3975 136.64 li
48.3271 136.64 49.1597 136.089 49.4951 135.256 cv
49.5215 135.189 49.5498 135.123 49.5762 135.058 cv
49.563 135.185 49.5479 135.313 49.5371 135.442 cv
49.4316 136.48 50.1123 137.443 51.1548 137.731 cv
51.3608 137.789 51.5688 137.817 51.7769 137.817 cv
52.6113 137.817 53.4004 137.367 53.7886 136.62 cv
54.4468 135.354 55.4761 134.046 56.5371 133.119 cv
57.2402 132.507 57.9507 132.004 58.6875 131.603 cv
58.1553 132.473 57.7354 133.469 57.4482 134.572 cv
57.3696 134.877 57.3115 135.189 57.2646 135.505 cv
57.1333 136.365 57.5498 137.217 58.3223 137.669 cv
58.6821 137.879 59.0869 137.984 59.4902 137.984 cv
59.9531 137.984 60.4146 137.847 60.8062 137.576 cv
62.4619 136.429 65.6938 136.288 66.9102 136.235 cv
67.0889 136.228 67.2651 136.224 67.4429 136.224 cv
69.6553 136.224 72.3481 136.865 74.2974 138.538 cv
73.8022 138.484 73.3018 138.458 72.7939 138.458 cv
71.9028 138.458 70.981 138.54 69.9722 138.71 cv
68.9541 138.882 68.1895 139.7 68.1162 140.692 cv
68.0449 141.684 68.6846 142.595 69.667 142.901 cv
71.8169 143.573 73.3901 144.883 74.7793 146.04 cv
75.0962 146.303 75.3979 146.552 75.6851 146.781 cv
79.2505 149.596 80.6685 154.452 80.6792 159.019 cv
79.7046 156.771 78.1543 154.621 75.396 153.276 cv
75.1509 153.156 74.9146 153.063 74.6782 152.972 cv
74.5298 152.915 li
74.251 152.805 73.9604 152.752 73.6753 152.752 cv
72.9604 152.752 72.269 153.079 71.8354 153.667 cv
71.2305 154.492 71.2979 155.608 71.9966 156.36 cv
78.4131 163.257 78.1167 172.312 77.8018 181.9 cv
76.4331 180.111 74.7964 178.445 73.2778 176.948 cv
72.8428 176.519 72.2578 176.296 71.6655 176.296 cv
71.2827 176.296 70.8984 176.389 70.5479 176.581 cv
69.6592 177.07 69.2261 178.078 69.4941 179.03 cv
70.5669 182.807 70.7056 187.372 70.7769 190.838 cv
69.9834 190.007 69.0723 188.792 68.5869 188.146 cv
67.8984 187.23 67.3042 186.439 66.7324 185.886 cv
66.2866 185.455 65.6807 185.227 65.0752 185.227 cv
64.6401 185.227 64.2017 185.347 63.8267 185.596 cv
62.9307 186.188 62.5688 187.275 63.0132 188.23 cv
64.6533 191.753 65.2422 194.676 64.9946 198.434 cv
64.145 197.719 63.3296 197.153 62.5308 196.601 cv
61.4229 195.834 60.375 195.109 59.2671 193.986 cv
58.8301 193.546 58.2358 193.314 57.6338 193.314 cv
57.2344 193.314 56.8315 193.418 56.4697 193.628 cv
55.5659 194.154 55.165 195.217 55.5059 196.181 cv
56.269 198.325 56.2598 199.556 55.8794 201.181 cv
55.6768 200.735 55.4648 200.328 55.2495 199.913 cv
54.8599 199.165 54.4561 198.389 53.9912 197.163 cv
53.9556 197.065 53.9141 196.97 53.8716 196.872 cv
53.5356 196.032 52.6826 195.442 51.749 195.442 cv
51.7397 195.442 51.728 195.442 51.7173 195.442 cv
50.772 195.456 49.9189 195.997 49.6099 196.855 cv
49.2798 197.766 48.959 198.661 48.6909 199.537 cv
48.1099 201.431 47.7539 202.177 47.3975 202.868 cv
cp
.992157 .756863 .109804 rgb
f
69.9795 148.327 mo
69.874 147.924 54.8232 139.931 47.46 140.424 cv
47.4385 140.43 47.417 140.434 47.3975 140.436 cv
47.376 140.434 47.3545 140.43 47.333 140.424 cv
39.9717 139.931 24.9189 147.924 24.8154 148.327 cv
23.8428 152.045 25.5537 154.804 28.5186 157.014 cv
30.1787 158.25 32.1709 159.535 34.2393 159.958 cv
36.3467 160.389 38.3076 159.452 38.1416 162.739 cv
37.8818 167.836 33.7607 173.574 33.6826 178.816 cv
33.6104 183.691 34.3447 191.903 45.6514 189.863 cv
46.2959 189.758 46.8994 189.485 47.3975 189.088 cv
47.8936 189.485 48.4971 189.758 49.1436 189.863 cv
60.4482 191.903 61.1826 183.691 61.1104 178.816 cv
61.0342 173.574 56.9111 167.836 56.6533 162.739 cv
56.4854 159.452 58.4463 160.389 60.5537 159.958 cv
62.624 159.535 64.6162 158.25 66.2744 157.014 cv
69.2393 154.804 70.9502 152.045 69.9795 148.327 cv
cp
1 .415686 .219608 rgb
f
59.7764 151.265 mo
55.6338 149.724 53.708 144.758 55.4834 140.17 cv
57.2549 135.585 62.0537 133.12 66.1982 134.661 cv
70.3447 136.202 72.2646 141.168 70.4951 145.755 cv
68.7217 150.34 63.9229 152.807 59.7764 151.265 cv
cp
.768627 .192157 0 rgb
f
54.1279 145.243 mo
54.585 142.987 57.0889 140.659 58.7197 139.206 cv
60.6787 137.467 63.3154 136.375 65.9346 136.709 cv
66.8486 136.827 67.208 137.825 67.1084 138.602 cv
67.083 138.784 67.0615 138.963 67.0361 139.144 cv
66.8213 140.833 64.5088 140.604 64.0029 139.288 cv
62.2471 138.87 60.292 140.235 58.8896 141.159 cv
57.0654 142.357 56.0693 143.964 54.6514 145.526 cv
54.4385 145.762 54.0674 145.532 54.1279 145.243 cv
cp
.658824 .164706 0 rgb
f
35.0166 151.265 mo
39.1592 149.724 41.085 144.758 39.3096 140.17 cv
37.5381 135.585 32.7393 133.12 28.5947 134.661 cv
24.4502 136.202 22.5283 141.168 24.2979 145.755 cv
26.0732 150.34 30.8701 152.807 35.0166 151.265 cv
cp
.768627 .192157 0 rgb
f
40.667 145.243 mo
40.21 142.987 37.7061 140.659 36.0752 139.206 cv
34.1162 137.467 31.4775 136.375 28.8584 136.709 cv
27.9443 136.827 27.5869 137.825 27.6865 138.602 cv
27.71 138.784 27.7314 138.963 27.7588 139.144 cv
27.9717 140.833 30.2861 140.604 30.79 139.288 cv
32.5479 138.87 34.501 140.235 35.9053 141.159 cv
37.7275 142.357 38.7236 143.964 40.1436 145.526 cv
40.3564 145.762 40.7256 145.532 40.667 145.243 cv
cp
.658824 .164706 0 rgb
f
66.1982 148.963 mo
61.8193 145.33 48.1514 141.005 47.501 141.005 cv
46.8506 141.005 33.1807 145.33 28.8037 148.963 cv
24.9033 152.2 26.9189 157.125 27.3174 161.284 cv
27.5479 163.714 27.4072 166.526 28.6025 168.74 cv
30.1338 171.576 31.7803 176.17 32.8838 179.228 cv
33.8506 181.9 35.126 183.953 36.8818 186.189 cv
37.3643 186.802 37.7529 187.521 38.3096 187.969 cv
39.3779 191.425 39.5498 194.435 43.249 194.799 cv
43.3271 194.807 51.6729 194.807 51.751 194.799 cv
55.4541 194.435 55.624 191.425 56.6924 187.969 cv
57.249 187.521 57.6377 186.802 58.1201 186.189 cv
59.876 183.953 61.1514 181.9 62.1162 179.228 cv
63.2197 176.17 64.8682 171.576 66.3994 168.74 cv
67.5947 166.526 67.4541 163.714 67.6846 161.284 cv
68.083 157.125 70.0986 152.2 66.1982 148.963 cv
cp
.768627 .192157 0 rgb
f
37.5518 159.03 mo
36.5811 156.334 34.3564 154.667 32.585 155.305 cv
30.8135 155.942 30.167 158.647 31.1396 161.343 cv
32.1104 164.041 34.335 165.708 36.1045 165.069 cv
37.876 164.429 38.5244 161.727 37.5518 159.03 cv
cp
.278431 .0745098 .00784314 rgb
f
33.0635 161.265 mo
32.7744 160.774 32.3369 160.496 32.0889 160.641 cv
31.8408 160.788 31.876 161.304 32.1689 161.795 cv
32.458 162.287 32.8936 162.566 33.1416 162.419 cv
33.3877 162.273 33.3545 161.755 33.0635 161.265 cv
cp
.992157 .866667 .521569 rgb
f
34.1104 163.028 mo
34.0127 162.868 33.8037 162.817 33.6338 162.917 cv
33.4678 163.016 33.4072 163.227 33.5029 163.387 cv
33.5986 163.547 33.8115 163.598 33.9795 163.499 cv
34.1455 163.399 34.2061 163.19 34.1104 163.028 cv
cp
f
63.8564 161.362 mo
64.8447 158.672 64.2139 155.964 62.4463 155.315 cv
60.6787 154.666 58.4463 156.321 57.4561 159.011 cv
56.4678 161.702 57.0986 164.409 58.8662 165.058 cv
60.6357 165.706 62.8682 164.053 63.8564 161.362 cv
cp
.278431 .0745098 .00784314 rgb
f
58.5791 161.752 mo
58.417 161.207 58.0615 160.831 57.7861 160.912 cv
57.5088 160.995 57.4209 161.504 57.583 162.051 cv
57.7432 162.597 58.1006 162.974 58.3779 162.893 cv
58.6514 162.809 58.7432 162.3 58.5791 161.752 cv
cp
.992157 .866667 .521569 rgb
f
59.1689 163.717 mo
59.1162 163.54 58.9209 163.439 58.7334 163.494 cv
58.5459 163.55 58.4404 163.741 58.4932 163.918 cv
58.5459 164.098 58.7412 164.198 58.9287 164.143 cv
59.1143 164.086 59.2236 163.897 59.1689 163.717 cv
cp
f
69.9795 148.327 mo
69.874 147.924 54.8232 139.931 47.46 140.424 cv
47.4385 140.43 47.417 140.434 47.3975 140.436 cv
47.376 140.434 47.3545 140.43 47.333 140.424 cv
39.9717 139.931 24.9189 147.924 24.8154 148.327 cv
23.8428 152.045 25.5537 154.804 28.5186 157.014 cv
30.1787 158.25 32.1709 159.535 34.2393 159.958 cv
36.3467 160.389 38.3076 159.452 38.1416 162.739 cv
37.8818 167.836 33.7607 173.574 33.6826 178.816 cv
33.6104 183.691 34.3447 191.903 45.6514 189.863 cv
46.2959 189.758 46.8994 189.485 47.3975 189.088 cv
47.8936 189.485 48.4971 189.758 49.1436 189.863 cv
60.4482 191.903 61.1826 183.691 61.1104 178.816 cv
61.0342 173.574 56.9111 167.836 56.6533 162.739 cv
56.4854 159.452 58.4463 160.389 60.5537 159.958 cv
62.624 159.535 64.6162 158.25 66.2744 157.014 cv
69.2393 154.804 70.9502 152.045 69.9795 148.327 cv
cp
1 .415686 .219608 rgb
f
38.9678 173.285 mo
38.9678 181.217 38.9678 180.281 47.501 180.279 cv
56.042 180.277 56.0342 181.217 56.0342 173.285 cv
56.0342 165.355 52.2139 151.831 47.501 151.831 cv
42.7881 151.831 38.9678 165.355 38.9678 173.285 cv
cp
1 .537255 .380392 rgb
f
47.501 189.291 mo
48.3232 190.293 50.54 191.296 51.7666 191.164 cv
53.1377 191.018 54.792 190.037 56.3076 188.887 cv
56.4502 188.574 56.5771 188.259 56.6787 187.938 cv
55.5771 188.686 54.4209 189.346 53.4424 189.504 cv
51.2295 189.867 49.0986 189.498 48.001 187.589 cv
48.3682 187.305 48.542 186.408 48.6182 186.16 cv
48.9756 184.986 51.4268 182.325 51.6885 182.135 cv
52.5889 181.481 53.2529 180.571 53.9561 179.727 cv
54.167 179.473 53.8877 179.02 53.5811 179.237 cv
52.751 179.824 51.9248 180.526 50.9854 180.931 cv
50.04 181.34 48.792 181.188 47.7842 181.323 cv
47.6787 181.338 47.5869 181.364 47.501 181.4 cv
47.4131 181.364 47.3213 181.338 47.2158 181.323 cv
46.208 181.188 44.9619 181.34 44.0166 180.931 cv
43.0771 180.526 42.251 179.824 41.4209 179.237 cv
41.1123 179.02 40.835 179.473 41.0459 179.727 cv
41.749 180.571 42.4131 181.481 43.3115 182.135 cv
43.5732 182.325 46.0244 184.986 46.3838 186.16 cv
46.46 186.408 46.6318 187.305 47.001 187.589 cv
45.9014 189.498 43.7725 189.867 41.5596 189.504 cv
40.5811 189.346 39.4248 188.686 38.3232 187.938 cv
38.4248 188.259 38.5498 188.574 38.6943 188.887 cv
40.21 190.037 41.8643 191.018 43.2354 191.164 cv
44.4619 191.296 46.6787 190.293 47.501 189.291 cv
cp
.658824 .164706 0 rgb
f
41.9053 182.135 mo
41.9893 182.181 43.9346 182.723 44.0186 182.751 cv
45.2822 183.158 49.7178 183.158 50.9834 182.751 cv
51.0693 182.723 53.0107 182.181 53.0947 182.135 cv
54.2979 181.481 55.1826 179.398 56.1221 178.554 cv
56.4033 178.301 56.0322 177.848 55.6201 178.064 cv
54.5127 178.651 40.4893 178.651 39.3818 178.064 cv
38.9678 177.848 38.5986 178.301 38.8779 178.554 cv
39.8193 179.398 40.7061 181.481 41.9053 182.135 cv
cp
.278431 .0745098 .00784314 rgb
f
69.9795 148.327 mo
69.9502 148.213 68.7236 147.491 66.8135 146.526 cv
66.0732 146.649 65.3193 146.801 64.5576 146.997 cv
57.4775 148.815 52.4736 153.157 53.3838 156.694 cv
53.8232 158.411 55.583 159.616 58.0791 160.2 cv
58.7725 160.077 59.6494 160.143 60.5537 159.958 cv
62.624 159.535 64.6162 158.25 66.2744 157.014 cv
69.2393 154.804 70.9502 152.045 69.9795 148.327 cv
cp
1 .537255 .380392 rgb
f
24.8154 148.327 mo
23.8428 152.045 25.5537 154.804 28.5186 157.014 cv
30.1787 158.25 32.1709 159.535 34.2393 159.958 cv
35.1436 160.143 36.0205 160.077 36.7139 160.2 cv
39.2119 159.616 40.9717 158.411 41.4111 156.694 cv
42.3213 153.157 37.3174 148.815 30.2373 146.997 cv
29.4736 146.801 28.7217 146.649 27.9795 146.526 cv
26.0713 147.491 24.8447 148.213 24.8154 148.327 cv
cp
f
168.876 144.575 mo
168.876 144.575 170.513 152.81 170.318 154.684 cv
170.148 156.283 169.308 158.139 168.876 158.844 cv
168.542 159.39 173.23 165.242 173.998 166.267 cv
174.765 167.291 174.531 168.209 173.158 169.589 cv
171.787 170.97 170.925 170.746 170.541 171.706 cv
170.158 172.665 170.937 172.987 171.132 173.209 cv
171.468 173.593 171.337 174.153 170.541 174.521 cv
171.308 174.905 171.455 175.551 171.085 176.376 cv
170.714 177.202 169.837 177.464 169.453 178.553 cv
169.068 179.639 170.861 181.495 169.837 183.735 cv
168.814 185.975 165.166 186.167 160.943 184.438 cv
159.598 184.056 158.447 186.167 157.999 186.87 cv
157.55 187.574 155.503 193.974 154.095 197.878 cv
152.687 198.646 137.071 201.067 131.185 193.232 cv
132.434 188.592 134.802 177.464 134.435 174.265 cv
134.066 171.064 133.23 168.704 131.857 166.813 cv
130.483 164.922 121.338 145.115 137.172 136.398 cv
153.007 127.681 167.64 138.857 168.876 144.575 cv
cp
1 .415686 .219608 rgb
f
168.876 144.575 mo
168.876 144.575 170.513 152.81 170.318 154.684 cv
170.148 156.283 169.308 158.139 168.876 158.844 cv
168.542 159.39 173.23 165.242 173.998 166.267 cv
174.765 167.291 174.531 168.209 173.158 169.589 cv
171.787 170.97 170.925 170.746 170.541 171.706 cv
170.158 172.665 170.937 172.987 171.132 173.209 cv
171.468 173.593 171.337 174.153 170.541 174.521 cv
171.308 174.905 171.455 175.551 171.085 176.376 cv
170.714 177.202 169.837 177.464 169.453 178.553 cv
169.068 179.639 170.861 181.495 169.837 183.735 cv
168.814 185.975 165.166 186.167 160.943 184.438 cv
159.598 184.056 149.674 179.559 148.656 176.505 cv
147.376 172.665 133.23 168.704 131.857 166.813 cv
130.483 164.922 121.338 145.115 137.172 136.398 cv
153.007 127.681 167.64 138.857 168.876 144.575 cv
cp
1 .537255 .380392 rgb
f
167.884 154.179 mo
166.933 153.309 164.497 152.393 162.336 153.265 cv
160.154 154.147 157.775 154.994 156.152 156.788 cv
156.082 156.867 156.194 156.992 156.283 156.944 cv
158.867 155.527 163.57 153.319 167.068 155.169 cv
168.3 155.821 169.085 155.278 167.884 154.179 cv
cp
.768627 .192157 0 rgb
f
166.056 158.777 mo
165.98 159.581 165.419 160.208 164.732 160.208 cv
164.144 160.208 159.244 159.755 158 159.125 cv
157.938 159.211 157.894 159.299 157.894 159.39 cv
157.894 160.419 164.166 161.254 164.866 161.254 cv
165.565 161.254 166.132 160.419 166.132 159.39 cv
166.132 159.173 166.103 158.969 166.056 158.777 cv
cp
.278431 .0745098 .00784314 rgb
f
164.333 168.002 mo
164.648 166.341 162.82 164.601 160.249 164.114 cv
157.679 163.626 155.339 164.579 155.025 166.239 cv
154.71 167.9 156.54 169.639 159.109 170.126 cv
161.68 170.612 164.019 169.662 164.333 168.002 cv
cp
1 .415686 .219608 rgb
f
166.38 175.418 mo
166.38 175.418 169.283 176.343 170.746 176.888 cv
170.878 176.736 170.998 176.572 171.085 176.376 cv
171.455 175.551 171.308 174.905 170.541 174.521 cv
171.337 174.153 171.468 173.593 171.132 173.209 cv
171.117 173.189 171.091 173.169 171.066 173.147 cv
169.365 173.944 166.38 175.418 166.38 175.418 cv
cp
f
121.986 186.145 mo
121.964 186.097 121.942 186.048 121.919 185.999 cv
121.787 185.707 121.369 186.126 121.661 186.259 cv
121.806 186.324 li
121.929 186.381 122.042 186.268 121.986 186.145 cv
cp
.658824 .164706 0 rgb
f
184.765 172.354 mo
184.208 173.49 183.708 174.646 183.23 175.812 cv
181.421 178.039 180.07 180.703 178.314 182.969 cv
176.019 185.928 173.283 188.481 170.105 190.461 cv
164.843 193.737 158.183 195.043 152.409 192.408 cv
145.675 189.336 143.497 181.32 142.939 174.617 cv
142.744 172.273 142.804 169.911 142.98 167.559 cv
144.144 171.304 145.642 175.281 147.455 178.791 cv
147.472 178.825 147.497 178.854 147.523 178.877 cv
147.539 178.918 147.551 178.962 147.567 179.002 cv
147.715 179.394 148.487 179.242 148.468 178.831 cv
148.359 176.389 147.727 173.98 147.603 171.523 cv
147.485 169.218 147.652 166.907 147.933 164.608 cv
148.233 162.155 148.855 159.749 149.687 157.388 cv
150.301 155.65 151.195 153.993 151.971 152.306 cv
151.584 153.872 151.402 155.473 151.331 157.089 cv
151.223 159.546 151.17 163.127 152.527 165.274 cv
152.64 165.455 152.965 165.41 152.984 165.187 cv
153.011 164.87 152.994 164.555 152.958 164.24 cv
153.934 161.974 154.695 159.699 155.923 157.505 cv
157.07 155.455 158.383 153.48 159.523 151.427 cv
161.556 147.769 163.792 142.618 162.043 138.559 cv
164.198 139.013 165.776 140.982 167.033 142.47 cv
167.177 142.644 167.308 142.817 167.445 142.989 cv
167.787 143.721 168.142 144.444 168.414 145.162 cv
169.148 147.095 169.634 149.1 170.054 151.122 cv
170.029 152.911 169.857 154.687 169.796 156.547 cv
169.785 156.854 170.222 156.892 170.31 156.618 cv
170.345 156.514 170.367 156.408 170.398 156.303 cv
170.369 156.432 170.343 156.558 170.312 156.687 cv
170.298 156.75 170.386 156.792 170.419 156.732 cv
172.935 152.196 175.148 142.204 171.298 137.914 cv
171.292 137.907 171.285 137.904 171.279 137.899 cv
170.193 136.087 168.38 134.53 166.593 133.579 cv
163.884 132.137 159.817 132.113 156.611 132.837 cv
151.036 130.237 144.204 129.241 137.958 130.103 cv
134.786 130.542 131.765 131.679 129.174 133.398 cv
128.385 133.921 127.568 134.567 126.808 135.295 cv
126.735 135.357 126.667 135.429 126.595 135.493 cv
118.892 140.39 114.986 152.031 113.986 160.121 cv
112.554 171.707 117.779 184.807 125.831 192.983 cv
135.599 202.905 150.369 206.88 163.587 202.55 cv
176.242 198.407 184.546 185.561 186.041 172.699 cv
186.119 172.023 185.054 171.763 184.765 172.354 cv
cp
.768627 .192157 0 rgb
f
167.589 196.916 mo
166.636 196.049 163.228 193.895 162.233 195.776 cv
162.185 195.867 162.203 196.008 162.306 196.055 cv
162.949 196.354 163.639 196.121 164.337 196.31 cv
164.357 196.315 164.374 196.325 164.392 196.33 cv
163.469 197.702 162.94 199.397 162.09 200.835 cv
161.758 201.397 161.416 201.95 161.072 202.503 cv
161.101 200.817 159.947 199.38 158.777 198.239 cv
157.558 197.05 155.451 195.568 153.673 195.632 cv
153.306 195.645 153.183 196.113 153.489 196.31 cv
154.062 196.679 154.722 196.858 155.332 197.164 cv
155.63 197.314 155.912 197.49 156.187 197.676 cv
154.535 198.92 153.416 201.409 152.021 202.851 cv
151.514 203.374 150.989 203.81 150.447 204.208 cv
151.191 204.253 151.937 204.269 152.683 204.269 cv
154.24 202.976 156.556 200.665 157.367 198.605 cv
157.445 198.675 157.525 198.743 157.601 198.814 cv
158.914 200.042 159.507 201.706 160.552 203.118 cv
160.576 203.147 160.61 203.171 160.645 203.19 cv
160.605 203.253 160.567 203.319 160.527 203.384 cv
161.013 203.271 161.496 203.144 161.978 203.011 cv
162.358 202.487 162.743 201.966 163.105 201.429 cv
164.016 200.075 165.206 198.423 165.377 196.734 cv
166.135 197.134 166.808 197.69 167.425 198.286 cv
167.998 198.839 168.48 199.474 168.933 200.126 cv
169.289 199.921 169.648 199.72 169.994 199.499 cv
169.218 198.455 168.246 197.513 167.589 196.916 cv
cp
.658824 .164706 0 rgb
f
140.519 202.226 mo
141.189 202.458 141.867 202.663 142.548 202.856 cv
145.623 202.177 148.654 201.222 149.625 198.547 cv
149.748 198.211 149.329 197.939 149.048 198.103 cv
148.296 198.538 147.679 199.13 146.988 199.646 cv
147.251 198.41 146.831 196.641 146.694 195.733 cv
146.449 194.116 145.503 190.989 143.882 190.216 cv
143.681 190.12 143.485 190.313 143.583 190.515 cv
144.313 192.019 144.8 193.271 145.121 194.743 cv
142.779 195.141 140.751 196.483 138.648 197.652 cv
139.859 195.724 140.222 192.721 140.515 190.874 cv
140.955 188.101 141.111 184.668 139.6 182.17 cv
139.501 182.007 139.277 182.12 139.308 182.294 cv
139.847 185.425 139.689 188.325 139.028 191.443 cv
138.541 193.738 136.925 196.261 136.843 198.577 cv
136.433 198.761 136.017 198.928 135.59 199.068 cv
135.124 199.222 134.657 199.317 134.191 199.378 cv
134.75 199.694 135.318 199.993 135.89 200.278 cv
139.152 199.595 142.745 197.248 145.266 195.502 cv
145.317 195.8 145.363 196.105 145.403 196.427 cv
145.54 197.533 145.096 199.407 145.652 200.444 cv
144.724 200.882 143.722 201.181 142.751 201.474 cv
141.972 201.708 141.238 201.96 140.519 202.226 cv
cp
f
151.349 202.745 mo
151.51 202.892 151.732 202.854 151.853 202.681 cv
152.718 201.435 151.443 199 150.937 197.787 cv
150.39 196.478 149.675 194.721 148.221 194.28 cv
148.152 194.261 148.103 194.326 148.114 194.389 cv
148.367 195.851 149.422 197.177 149.962 198.577 cv
150.426 199.776 150.395 201.876 151.349 202.745 cv
cp
f
138.109 193.477 mo
138.421 193.33 138.236 192.901 137.947 192.88 cv
135.986 192.74 134.115 192.727 132.257 192.654 cv
134.742 189.501 135.023 185.197 135.769 181.36 cv
136.964 175.217 140.947 169.726 142.864 163.77 cv
142.916 163.607 142.684 163.522 142.597 163.657 cv
139.697 168.179 137.329 172.897 135.238 177.856 cv
135.017 178.382 134.834 178.92 134.671 179.465 cv
134.623 179.378 134.545 179.311 134.414 179.327 cv
131.056 179.758 128.224 179.813 124.977 178.904 cv
124.765 179.001 124.527 178.915 124.414 178.742 cv
120.724 177.589 117.693 175.286 114.83 172.784 cv
114.954 173.305 115.089 173.823 115.234 174.34 cv
119.609 179.181 129.008 183.84 134.529 179.959 cv
134.027 181.822 133.781 183.769 133.475 185.656 cv
133.073 188.144 131.652 190.146 131.432 192.621 cv
129.312 192.514 127.195 192.29 124.964 191.663 cv
124.79 191.614 124.621 191.549 124.449 191.495 cv
124.9 192.007 125.359 192.505 125.831 192.983 cv
126.042 193.198 126.269 193.396 126.486 193.604 cv
130.294 194.948 134.275 195.271 138.109 193.477 cv
cp
f
124.977 178.904 mo
125.017 178.885 125.057 178.864 125.093 178.832 cv
130.636 173.896 133.547 164 134.336 156.858 cv
134.361 156.633 133.993 156.532 133.902 156.741 cv
132.592 159.781 131.878 163.067 130.782 166.194 cv
129.206 170.691 126.733 174.237 124.408 178.304 cv
124.314 178.466 124.334 178.624 124.414 178.742 cv
124.449 178.754 124.482 178.769 124.517 178.779 cv
124.673 178.826 124.824 178.86 124.977 178.904 cv
cp
f
137.076 148.922 mo
137.076 146.597 136.165 145.916 135.042 145.916 cv
133.917 145.916 133.007 146.597 133.007 148.922 cv
133.007 151.248 135.042 154.335 135.042 154.335 cv
135.042 154.335 137.076 151.248 137.076 148.922 cv
cp
.992157 .866667 .521569 rgb
f
131.38 150.104 mo
129.167 149.386 128.238 150.042 127.89 151.11 cv
127.543 152.179 127.911 153.255 130.123 153.974 cv
132.333 154.693 135.899 153.712 135.899 153.712 cv
135.899 153.712 133.591 150.823 131.38 150.104 cv
cp
f
130.743 155.887 mo
129.376 157.768 129.712 158.856 130.622 159.516 cv
131.531 160.177 132.668 160.161 134.035 158.279 cv
135.402 156.398 135.572 152.704 135.572 152.704 cv
135.572 152.704 132.111 154.005 130.743 155.887 cv
cp
f
136.046 158.28 mo
137.414 160.161 138.552 160.177 139.46 159.516 cv
140.37 158.856 140.705 157.769 139.337 155.888 cv
137.971 154.006 134.511 152.704 134.511 152.704 cv
134.511 152.704 134.679 156.398 136.046 158.28 cv
cp
f
139.96 153.976 mo
142.171 153.256 142.54 152.179 142.192 151.11 cv
141.845 150.042 140.915 149.387 138.703 150.106 cv
136.492 150.824 134.183 153.712 134.183 153.712 cv
134.183 153.712 137.749 154.693 139.96 153.976 cv
cp
f
136.592 153.572 mo
136.592 152.714 135.898 152.021 135.042 152.021 cv
134.185 152.021 133.49 152.714 133.49 153.572 cv
133.49 154.428 134.185 155.123 135.042 155.123 cv
135.898 155.123 136.592 154.428 136.592 153.572 cv
cp
.992157 .756863 .109804 rgb
f
285.518 144.344 mo
285.518 144.344 270.766 140.771 252.57 140.771 cv
234.375 140.771 219.623 144.344 219.623 144.344 cv
219.623 144.344 234.375 147.918 252.57 147.918 cv
270.766 147.918 285.518 144.344 285.518 144.344 cv
cp
f
240.001 174.323 mo
240.001 171.035 234.139 168.37 226.908 168.37 cv
219.678 168.37 213.816 171.035 213.816 174.323 cv
213.816 177.611 219.678 182.949 226.908 182.949 cv
234.139 182.949 240.001 177.611 240.001 174.323 cv
cp
f
217.824 178.68 mo
220.607 181.01 224.232 181.658 225.926 180.127 cv
227.617 178.594 226.733 175.465 223.95 173.135 cv
221.168 170.806 217.537 170.162 215.848 171.691 cv
214.158 173.222 215.042 176.352 217.824 178.68 cv
cp
.992157 .866667 .521569 rgb
f
238.592 173.774 mo
238.592 171.845 233.421 169.191 226.904 169.191 cv
220.387 169.191 214.99 171.845 214.99 173.774 cv
214.99 175.703 220.273 177.267 226.791 177.267 cv
233.308 177.267 238.592 175.703 238.592 173.774 cv
cp
1 .415686 .219608 rgb
f
238.592 173.774 mo
238.592 172.853 237.4 171.766 235.454 170.882 cv
235.184 170.872 234.914 170.861 234.639 170.861 cv
228.121 170.861 222.725 173.515 222.725 175.444 cv
222.725 176.08 223.309 176.674 224.313 177.188 cv
225.111 177.238 225.939 177.267 226.791 177.267 cv
233.308 177.267 238.592 175.703 238.592 173.774 cv
cp
1 .537255 .380392 rgb
f
290.979 174.323 mo
290.979 171.035 285.117 168.37 277.887 168.37 cv
270.656 168.37 264.795 171.035 264.795 174.323 cv
264.795 177.611 270.656 182.949 277.887 182.949 cv
285.117 182.949 290.979 177.611 290.979 174.323 cv
cp
.992157 .756863 .109804 rgb
f
268.803 178.68 mo
271.586 181.01 275.211 181.658 276.904 180.127 cv
278.596 178.594 277.712 175.465 274.929 173.135 cv
272.146 170.806 268.516 170.162 266.826 171.691 cv
265.137 173.222 266.021 176.352 268.803 178.68 cv
cp
.992157 .866667 .521569 rgb
f
289.57 173.774 mo
289.57 171.845 284.399 169.191 277.883 169.191 cv
271.365 169.191 265.969 171.845 265.969 173.774 cv
265.969 175.703 271.252 177.267 277.77 177.267 cv
284.286 177.267 289.57 175.703 289.57 173.774 cv
cp
1 .415686 .219608 rgb
f
289.57 173.774 mo
289.57 172.853 288.379 171.766 286.434 170.882 cv
286.163 170.872 285.894 170.861 285.617 170.861 cv
279.1 170.861 273.703 173.515 273.703 175.444 cv
273.703 176.08 274.287 176.674 275.291 177.188 cv
276.091 177.238 276.918 177.267 277.77 177.267 cv
284.286 177.267 289.57 175.703 289.57 173.774 cv
cp
1 .537255 .380392 rgb
f
273.751 195.526 mo
273.751 191.536 264.19 188.303 252.397 188.303 cv
240.604 188.303 231.044 191.536 231.044 195.526 cv
231.044 199.517 240.604 202.749 252.397 202.749 cv
264.19 202.749 273.751 199.517 273.751 195.526 cv
cp
.768627 .192157 0 rgb
f
231.049 195.497 mo
234.185 197.99 241.102 199.728 249.149 199.728 cv
260.142 199.728 269.053 196.494 269.053 192.506 cv
269.053 191.908 268.831 191.33 268.454 190.775 cv
264.54 189.263 258.807 188.303 252.397 188.303 cv
240.635 188.303 231.098 191.521 231.049 195.497 cv
cp
1 .415686 .219608 rgb
f
257.512 188.867 mo
257.512 186.226 255.3 184.085 252.57 184.085 cv
249.841 184.085 247.629 186.226 247.629 188.867 cv
247.629 191.508 249.841 193.648 252.57 193.648 cv
255.3 193.648 257.512 191.508 257.512 188.867 cv
cp
.768627 .192157 0 rgb
f
247.629 188.867 mo
247.629 189.502 247.762 190.104 247.994 190.658 cv
248.69 191.05 249.488 191.29 250.352 191.29 cv
252.96 191.29 255.074 189.243 255.074 186.72 cv
255.074 185.885 254.826 185.112 254.422 184.439 cv
253.85 184.215 253.227 184.085 252.57 184.085 cv
249.841 184.085 247.629 186.226 247.629 188.867 cv
cp
1 .415686 .219608 rgb
f
255.934 166.399 mo
255.934 145.053 254.428 146.833 252.57 146.833 cv
250.713 146.833 249.207 145.053 249.207 166.399 cv
249.207 187.736 250.713 185.957 252.57 185.957 cv
254.428 185.957 255.934 187.736 255.934 166.399 cv
cp
.768627 .192157 0 rgb
f
254.715 163.73 mo
254.715 154.411 254.428 149.5 253.949 146.924 cv
253.528 146.711 253.063 146.833 252.57 146.833 cv
250.713 146.833 249.207 145.053 249.207 166.399 cv
249.207 175.713 249.494 180.621 249.973 183.196 cv
250.393 183.409 250.859 183.288 251.352 183.288 cv
253.209 183.288 254.715 185.067 254.715 163.73 cv
cp
1 .415686 .219608 rgb
f
256.18 144.263 mo
256.18 142.333 254.563 140.771 252.57 140.771 cv
250.577 140.771 248.961 142.333 248.961 144.263 cv
248.961 146.191 250.577 147.754 252.57 147.754 cv
254.563 147.754 256.18 146.191 256.18 144.263 cv
cp
.768627 .192157 0 rgb
f
248.961 144.263 mo
248.961 144.727 249.059 145.167 249.229 145.571 cv
249.736 145.857 250.32 146.033 250.95 146.033 cv
252.855 146.033 254.398 144.538 254.398 142.695 cv
254.398 142.085 254.217 141.521 253.922 141.03 cv
253.504 140.866 253.049 140.771 252.57 140.771 cv
250.577 140.771 248.961 142.333 248.961 144.263 cv
cp
1 .415686 .219608 rgb
f
241.557 194.153 mo
243.281 193.714 244.578 192.457 244.455 191.345 cv
244.33 190.232 242.832 189.687 241.106 190.126 cv
239.383 190.565 238.086 191.825 238.209 192.937 cv
238.334 194.047 239.833 194.593 241.557 194.153 cv
cp
.992157 .866667 .521569 rgb
f
251.081 187.53 mo
250.787 188.435 250.088 189.018 249.518 188.832 cv
248.949 188.647 248.727 187.765 249.021 186.86 cv
249.314 185.956 250.015 185.373 250.584 185.558 cv
251.152 185.743 251.375 186.626 251.081 187.53 cv
cp
f
252.241 143.157 mo
251.947 144.061 251.248 144.644 250.678 144.458 cv
250.109 144.274 249.887 143.391 250.182 142.487 cv
250.475 141.583 251.175 141 251.744 141.184 cv
252.313 141.37 252.535 142.252 252.241 143.157 cv
cp
f
250.051 157.967 mo
250.051 162.841 250.479 166.792 251.006 166.792 cv
251.533 166.792 251.961 162.841 251.961 157.967 cv
251.961 153.093 251.533 149.142 251.006 149.142 cv
250.479 149.142 250.051 153.093 250.051 157.967 cv
cp
f
254.77 138.147 mo
254.77 135.271 252.396 131.337 252.396 131.337 cv
252.396 131.337 250.025 135.271 250.025 138.147 cv
250.025 141.022 251.088 141.751 252.396 141.751 cv
253.707 141.751 254.77 141.022 254.77 138.147 cv
cp
.992157 .756863 .109804 rgb
f
252.328 132.34 mo
251.983 132.936 250.428 135.75 250.428 137.875 cv
250.428 140.211 251.272 140.839 252.328 140.865 cv
252.328 132.34 li
cp
.992157 .866667 .521569 rgb
f
214.408 173.873 mo
214.328 173.873 214.246 173.854 214.171 173.813 cv
213.928 173.683 213.837 173.379 213.968 173.136 cv
226.908 144.107 li
239.849 173.136 li
239.979 173.379 239.889 173.683 239.645 173.813 cv
239.403 173.942 239.1 173.854 238.968 173.61 cv
226.908 146.216 li
214.849 173.61 li
214.758 173.778 214.586 173.873 214.408 173.873 cv
cp
.768627 .192157 0 rgb
f
265.387 173.873 mo
265.307 173.873 265.225 173.854 265.149 173.813 cv
264.906 173.683 264.815 173.379 264.946 173.136 cv
277.887 144.107 li
290.827 173.136 li
290.958 173.379 290.867 173.683 290.623 173.813 cv
290.381 173.942 290.077 173.854 289.946 173.61 cv
277.887 146.216 li
265.827 173.61 li
265.736 173.778 265.564 173.873 265.387 173.873 cv
cp
f
337.437 158.993 mo
337.985 159.72 338.255 160.229 338.144 160.95 cv
338.103 161.2 338.233 161.478 338.462 161.438 cv
341.093 160.993 343.3 160.666 343.765 160.416 cv
343.96 160.314 344.288 160.098 344.146 159.725 cv
343.952 159.212 343.745 159.234 342.917 159.071 cv
341.206 158.732 339.513 158.357 337.763 158.331 cv
337.401 158.326 337.224 158.709 337.437 158.993 cv
cp
f
336.933 158.479 mo
335.255 159.915 334.849 162.094 334.858 164.224 cv
334.864 165.896 334.495 168.237 335.485 169.707 cv
335.651 169.961 335.993 170.092 336.243 169.854 cv
337.544 168.629 337.995 166.691 338.261 164.988 cv
338.55 163.16 338.448 161.183 338.077 159.289 cv
338.034 159.089 337.485 158.006 336.933 158.479 cv
cp
1 .415686 .219608 rgb
f
345.19 161.271 mo
345.603 162.083 345.778 162.633 345.544 163.324 cv
345.464 163.562 345.542 163.861 345.776 163.861 cv
348.444 163.879 350.673 163.941 351.175 163.774 cv
351.384 163.706 351.741 163.552 351.671 163.16 cv
351.565 162.621 351.36 162.608 350.571 162.303 cv
348.948 161.675 347.345 161.007 345.624 160.68 cv
345.271 160.611 345.028 160.959 345.19 161.271 cv
cp
.768627 .192157 0 rgb
f
344.784 160.682 mo
342.882 161.806 342.103 163.878 341.741 165.978 cv
341.456 167.626 340.688 169.867 341.405 171.486 cv
341.526 171.764 341.839 171.955 342.128 171.766 cv
343.622 170.783 344.403 168.952 344.96 167.321 cv
345.563 165.571 345.808 163.604 345.767 161.679 cv
345.761 161.471 345.407 160.313 344.784 160.682 cv
cp
1 .415686 .219608 rgb
f
352.655 164.89 mo
352.919 165.762 353.001 166.333 352.649 166.973 cv
352.528 167.19 352.552 167.498 352.782 167.543 cv
355.409 168.021 357.595 168.471 358.116 168.393 cv
358.333 168.364 358.716 168.27 358.708 167.874 cv
358.702 167.323 358.503 167.276 357.78 166.839 cv
356.286 165.938 354.825 165.005 353.187 164.381 cv
352.851 164.255 352.55 164.553 352.655 164.89 cv
cp
.768627 .192157 0 rgb
f
352.358 164.236 mo
350.29 165.013 349.165 166.921 348.442 168.926 cv
347.876 170.5 346.729 172.572 347.155 174.293 cv
347.228 174.586 347.501 174.826 347.817 174.691 cv
349.462 173.982 350.546 172.316 351.38 170.809 cv
352.28 169.191 352.858 167.295 353.153 165.391 cv
353.185 165.186 353.036 163.983 352.358 164.236 cv
cp
1 .415686 .219608 rgb
f
373.339 194.699 mo
373.72 194.059 374.159 193.525 374.646 193.057 cv
375.585 193.488 376.942 193.074 376.999 191.73 cv
376.999 191.664 376.979 191.613 376.968 191.559 cv
377.815 192.143 379.231 191.854 379.437 190.615 cv
380.052 191.246 381.302 191.129 381.644 190.217 cv
383.134 190.049 384.636 189.969 385.979 189.449 cv
386.315 189.316 386.241 188.859 386.007 188.686 cv
383.995 187.148 379.978 187.174 377.558 187.182 cv
374.255 187.193 370.464 187.766 368.169 190.383 cv
364.821 194.207 370.913 198.795 373.339 194.699 cv
cp
.658824 .164706 0 rgb
f
355.657 201.97 mo
359.388 201.854 362.985 200.991 366.626 200.216 cv
368.39 199.843 368.827 199.884 369.226 198.783 cv
369.517 197.986 368.808 197.537 368.392 197.322 cv
367.396 196.801 362.675 196.182 357.046 195.314 cv
356.548 195.236 356.286 195.838 356.376 196.367 cv
356.64 197.9 356.079 198.996 354.935 200.569 cv
354.491 201.181 354.882 201.991 355.657 201.97 cv
cp
f
375.817 203.649 mo
380.226 202.806 388.134 196.436 387.897 191.514 cv
387.888 191.324 387.636 191.256 387.513 191.391 cv
387.274 191.662 387.011 191.945 386.739 192.234 cv
386.21 191.928 385.39 192.074 385.243 192.857 cv
385.216 193 385.226 193.129 385.249 193.25 cv
384.782 193.174 384.272 193.391 384.159 193.988 cv
384.134 194.123 384.146 194.242 384.163 194.355 cv
383.536 194.09 382.692 194.297 382.53 195.166 cv
382.47 195.492 382.546 195.758 382.685 195.975 cv
382.61 196.033 382.54 196.096 382.466 196.152 cv
381.878 195.307 380.261 195.309 380.015 196.621 cv
379.97 196.859 379.991 197.064 380.046 197.252 cv
379.774 196.963 379.419 196.75 379.003 196.672 cv
377.96 196.477 376.925 197.186 376.728 198.229 cv
376.696 198.391 376.696 198.555 376.706 198.715 cv
376.669 198.719 376.63 198.727 376.591 198.729 cv
376.761 197.631 376.013 196.557 374.911 196.35 cv
373.954 196.17 373.011 196.701 372.62 197.557 cv
372.356 197.15 372.132 196.633 371.899 195.945 cv
371.384 194.41 371.333 192.76 370.011 191.652 cv
368.356 190.27 366.163 190.898 365.122 192.648 cv
363.845 194.795 365.528 198.561 366.677 200.481 cv
368.704 203.876 372.134 204.356 375.817 203.649 cv
cp
.768627 .192157 0 rgb
f
356.112 199.897 mo
356.876 195.85 357.052 191.623 356.399 187.734 cv
355.788 184.105 354.79 179.975 351.987 177.387 cv
351.442 176.887 350.722 177.18 350.368 177.717 cv
348.292 180.875 349.124 185.863 349.147 189.432 cv
349.173 193.977 350.087 198.615 353.696 201.647 cv
354.884 202.638 356.032 200.325 356.112 199.897 cv
cp
f
380.53 173.943 mo
380.573 174.686 380.722 175.363 380.938 176.002 cv
381.972 176.047 382.991 177.037 382.423 178.256 cv
382.396 178.318 382.353 178.352 382.315 178.396 cv
383.339 178.268 384.464 179.172 384.079 180.367 cv
384.915 180.086 385.972 180.764 385.858 181.732 cv
387.106 182.561 388.405 183.322 389.36 184.398 cv
389.601 184.672 389.323 185.043 389.036 185.092 cv
386.542 185.535 382.985 183.672 380.835 182.557 cv
377.907 181.035 374.798 178.789 373.956 175.41 cv
372.733 170.479 380.249 169.189 380.53 173.943 cv
cp
f
366.856 160.295 mo
367.157 162.217 367.151 163.449 366.216 164.691 cv
365.894 165.118 365.851 165.774 366.327 165.934 cv
371.729 167.74 376.21 169.352 377.333 169.344 cv
377.802 169.344 378.638 169.27 378.745 168.426 cv
378.894 167.268 378.485 167.104 377.089 165.965 cv
374.21 163.607 371.405 161.192 368.142 159.382 cv
367.462 159.009 366.743 159.549 366.856 160.295 cv
cp
f
386.833 167.122 mo
390.364 169.893 394.476 179.176 392.013 183.441 cv
391.915 183.607 391.661 183.553 391.614 183.377 cv
391.526 183.025 391.423 182.652 391.313 182.271 cv
390.702 182.303 390.038 181.797 390.269 181.033 cv
390.31 180.895 390.378 180.783 390.454 180.686 cv
390.005 180.541 389.649 180.115 389.823 179.533 cv
389.862 179.398 389.927 179.299 389.993 179.205 cv
389.315 179.154 388.659 178.586 388.915 177.738 cv
389.009 177.42 389.198 177.219 389.421 177.088 cv
389.384 177.004 389.349 176.916 389.31 176.832 cv
388.397 177.314 386.962 176.572 387.345 175.291 cv
387.413 175.061 387.528 174.887 387.661 174.744 cv
387.288 174.881 386.874 174.904 386.468 174.783 cv
385.452 174.479 384.856 173.375 385.159 172.359 cv
385.204 172.199 385.28 172.053 385.362 171.916 cv
385.331 171.895 385.298 171.871 385.267 171.85 cv
384.913 172.904 383.759 173.518 382.685 173.197 cv
381.753 172.918 381.155 172.014 381.2 171.074 cv
380.78 171.314 380.345 171.672 379.821 172.176 cv
378.659 173.303 377.86 174.746 376.175 175.127 cv
374.071 175.6 372.407 174.033 372.288 172.002 cv
372.136 169.51 375.354 166.933 377.255 165.751 cv
380.612 163.665 383.88 164.81 386.833 167.122 cv
cp
1 .415686 .219608 rgb
f
366.251 158.772 mo
361.653 159.813 358.718 163.516 356.61 167.544 cv
354.956 170.705 351.935 174.758 352.333 178.516 cv
352.399 179.156 352.907 179.748 353.62 179.551 cv
357.296 178.535 360.077 175.32 362.28 172.373 cv
364.642 169.217 366.423 165.378 367.599 161.433 cv
367.722 161.016 367.761 158.433 366.251 158.772 cv
cp
f
323.933 177.951 mo
324.665 179.543 325.692 180.939 326.69 182.369 cv
327.171 183.061 327.237 183.258 327.786 183.229 cv
328.183 183.209 328.247 182.82 328.265 182.602 cv
328.306 182.076 327.712 179.926 327.06 177.338 cv
327.003 177.111 326.696 177.105 326.483 177.242 cv
325.87 177.635 325.292 177.592 324.405 177.385 cv
324.062 177.305 323.782 177.621 323.933 177.951 cv
cp
.768627 .192157 0 rgb
f
324.938 177.85 mo
326.819 177.43 328.673 176.723 330.226 175.721 cv
331.677 174.791 333.269 173.598 333.864 171.912 cv
333.981 171.584 333.722 171.326 333.425 171.275 cv
331.681 170.965 329.685 172.244 328.153 172.914 cv
326.2 173.766 324.372 175.018 323.735 177.131 cv
323.526 177.828 324.735 177.895 324.938 177.85 cv
cp
1 .415686 .219608 rgb
f
330.036 185.27 mo
331.034 186.711 332.288 187.906 333.519 189.141 cv
334.116 189.74 334.21 189.924 334.747 189.801 cv
335.134 189.709 335.132 189.318 335.108 189.1 cv
335.058 188.574 334.103 186.559 333.011 184.125 cv
332.915 183.91 332.61 183.957 332.423 184.129 cv
331.888 184.623 331.313 184.684 330.403 184.633 cv
330.052 184.613 329.831 184.973 330.036 185.27 cv
cp
.768627 .192157 0 rgb
f
331.009 184.994 mo
332.788 184.258 334.489 183.238 335.847 181.982 cv
337.112 180.813 338.474 179.359 338.771 177.598 cv
338.827 177.256 338.526 177.047 338.226 177.049 cv
336.452 177.047 334.712 178.65 333.319 179.578 cv
331.542 180.756 329.96 182.307 329.702 184.498 cv
329.612 185.219 330.815 185.074 331.009 184.994 cv
cp
1 .415686 .219608 rgb
f
338.329 190.984 mo
339.562 192.23 341.005 193.191 342.433 194.193 cv
343.124 194.68 343.247 194.844 343.753 194.629 cv
344.12 194.473 344.05 194.086 343.987 193.875 cv
343.851 193.367 342.558 191.551 341.06 189.338 cv
340.927 189.145 340.636 189.246 340.483 189.447 cv
340.04 190.027 339.485 190.182 338.581 190.293 cv
338.229 190.332 338.077 190.729 338.329 190.984 cv
cp
.768627 .192157 0 rgb
f
339.237 190.547 mo
340.864 189.508 342.364 188.213 343.481 186.738 cv
344.524 185.369 345.614 183.701 345.599 181.912 cv
345.595 181.566 345.263 181.412 344.966 181.467 cv
343.222 181.771 341.786 183.656 340.575 184.809 cv
339.03 186.277 337.739 188.078 337.864 190.283 cv
337.907 191.006 339.065 190.658 339.237 190.547 cv
cp
1 .415686 .219608 rgb
f
319.38 146.202 mo
316.667 148.387 316.247 152.357 318.435 155.065 cv
320.618 157.772 324.595 158.196 327.298 156.012 cv
330.005 153.821 330.433 149.854 328.247 147.15 cv
326.058 144.434 322.087 144.014 319.38 146.202 cv
cp
.658824 .164706 0 rgb
f
321.601 154.639 mo
320.78 154.322 320.05 153.791 319.495 153.102 cv
318.647 152.052 318.257 150.732 318.401 149.39 cv
318.542 148.052 319.202 146.846 320.249 146.003 cv
321.651 144.869 323.565 144.568 325.245 145.215 cv
326.067 145.533 326.796 146.067 327.354 146.758 cv
328.202 147.806 328.587 149.123 328.444 150.462 cv
328.302 151.803 327.644 153.013 326.595 153.861 cv
325.196 154.987 323.282 155.287 321.601 154.639 cv
321.601 154.639 li
cp
.768627 .192157 0 rgb
f
330.888 163.979 mo
332.183 160.624 330.513 156.857 327.155 155.563 cv
323.802 154.269 320.032 155.938 318.737 159.295 cv
317.446 162.648 319.116 166.418 322.472 167.712 cv
325.827 169.006 329.595 167.333 330.888 163.979 cv
cp
.658824 .164706 0 rgb
f
322.972 165.513 mo
320.228 164.455 318.854 161.36 319.915 158.614 cv
320.972 155.87 324.067 154.498 326.812 155.555 cv
329.556 156.615 330.931 159.708 329.872 162.454 cv
328.812 165.2 325.718 166.572 322.972 165.513 cv
cp
.768627 .192157 0 rgb
f
325.413 136.707 mo
322.622 137.94 321.366 141.206 322.604 143.995 cv
323.839 146.778 327.103 148.041 329.89 146.804 cv
332.677 145.564 333.938 142.304 332.698 139.52 cv
331.464 136.729 328.202 135.47 325.413 136.707 cv
cp
.658824 .164706 0 rgb
f
326.247 145.311 mo
325.097 144.867 324.188 144.005 323.688 142.878 cv
323.19 141.749 323.159 140.495 323.603 139.343 cv
324.046 138.196 324.909 137.289 326.036 136.793 cv
327.163 136.29 328.415 136.26 329.563 136.702 cv
330.714 137.147 331.622 138.013 332.12 139.14 cv
332.622 140.266 332.651 141.518 332.208 142.664 cv
331.765 143.814 330.899 144.726 329.772 145.226 cv
328.649 145.723 327.397 145.754 326.247 145.311 cv
326.247 145.311 li
cp
.768627 .192157 0 rgb
f
361.013 180.092 mo
359.401 184.32 353.183 185.881 340.687 181.115 cv
328.188 176.352 324.587 171.051 326.198 166.822 cv
327.81 162.593 334.026 161.035 346.526 165.797 cv
359.024 170.563 362.624 175.861 361.013 180.092 cv
cp
.658824 .164706 0 rgb
f
345.86 178.848 mo
344.003 178.439 341.921 177.801 339.675 176.941 cv
330.772 173.551 326.452 169.539 327.823 165.939 cv
328.823 163.314 332.37 162.523 337.806 163.713 cv
339.663 164.12 341.743 164.761 343.991 165.618 cv
352.894 169.01 357.214 173.02 355.841 176.619 cv
354.841 179.246 351.296 180.037 345.86 178.848 cv
cp
.768627 .192157 0 rgb
f
333.942 131.558 mo
331.126 131.996 329.202 134.643 329.646 137.458 cv
330.085 140.271 332.729 142.2 335.544 141.757 cv
338.36 141.313 340.29 138.674 339.843 135.859 cv
339.405 133.039 336.763 131.114 333.942 131.558 cv
cp
.658824 .164706 0 rgb
f
333.458 138.992 mo
332.183 138.499 331.257 137.355 331.044 136.006 cv
330.886 134.991 331.132 133.978 331.735 133.147 cv
332.339 132.321 333.228 131.78 334.237 131.622 cv
334.905 131.517 335.589 131.588 336.21 131.828 cv
337.487 132.32 338.409 133.465 338.622 134.816 cv
338.782 135.826 338.538 136.837 337.938 137.662 cv
337.333 138.494 336.44 139.039 335.425 139.199 cv
334.763 139.305 334.083 139.232 333.458 138.992 cv
333.458 138.992 li
cp
.768627 .192157 0 rgb
f
343.38 130.185 mo
340.8 129.907 338.483 131.779 338.208 134.361 cv
337.933 136.939 339.804 139.259 342.384 139.53 cv
344.966 139.806 347.282 137.938 347.554 135.355 cv
347.831 132.773 345.962 130.461 343.38 130.185 cv
cp
.658824 .164706 0 rgb
f
341.753 136.756 mo
340.333 136.21 339.456 134.769 339.616 133.255 cv
339.714 132.358 340.153 131.553 340.853 130.986 cv
341.554 130.42 342.431 130.161 343.327 130.258 cv
343.624 130.289 343.915 130.358 344.19 130.466 cv
345.608 131.014 346.485 132.452 346.323 133.968 cv
346.229 134.866 345.792 135.669 345.093 136.232 cv
344.392 136.8 343.511 137.059 342.614 136.964 cv
342.315 136.932 342.026 136.861 341.753 136.756 cv
341.753 136.756 li
cp
.768627 .192157 0 rgb
f
352.183 132.321 mo
349.054 131.732 346.042 133.796 345.452 136.923 cv
344.866 140.05 345.81 144.087 349.884 145.757 cv
353.04 147.053 360.833 148.315 359.995 147.657 cv
354.825 143.603 355.276 140.842 355.651 138.838 cv
356.243 135.711 355.313 132.911 352.183 132.321 cv
cp
f
355.981 144.791 mo
353.628 144.349 351.433 143.772 350.251 143.287 cv
346.815 141.877 346.147 138.44 346.62 135.926 cv
347.071 133.521 349.396 131.933 351.794 132.384 cv
352.856 132.584 353.569 133.096 353.974 133.952 cv
354.378 134.81 354.46 136.015 354.208 137.351 cv
353.817 139.438 353.687 141.854 356.239 144.84 cv
356.155 144.823 356.069 144.809 355.981 144.791 cv
cp
1 .415686 .219608 rgb
f
333.665 166.023 mo
334.644 165.86 335.36 165.268 335.263 164.701 cv
335.169 164.132 334.3 163.803 333.321 163.969 cv
332.343 164.133 331.628 164.726 331.722 165.293 cv
331.817 165.861 332.687 166.187 333.665 166.023 cv
cp
.992157 .866667 .521569 rgb
f
323.884 158.246 mo
324.929 158.233 325.767 157.731 325.757 157.128 cv
325.749 156.523 324.897 156.045 323.856 156.059 cv
322.817 156.075 321.978 156.575 321.983 157.182 cv
321.993 157.786 322.847 158.263 323.884 158.246 cv
cp
f
321.909 148.222 mo
322.831 148.209 323.573 147.766 323.565 147.229 cv
323.556 146.693 322.804 146.271 321.878 146.282 cv
320.958 146.295 320.22 146.74 320.226 147.276 cv
320.233 147.811 320.985 148.233 321.909 148.222 cv
cp
f
327.384 139.235 mo
328.269 139.222 328.981 138.796 328.974 138.281 cv
328.968 137.77 328.243 137.362 327.36 137.374 cv
326.476 137.386 325.763 137.813 325.771 138.327 cv
325.778 138.841 326.501 139.245 327.384 139.235 cv
cp
f
335.153 134.068 mo
336.038 134.057 336.751 133.629 336.743 133.116 cv
336.735 132.603 336.013 132.197 335.128 132.208 cv
334.243 132.22 333.532 132.646 333.538 133.16 cv
333.546 133.674 334.269 134.078 335.153 134.068 cv
cp
f
343.126 132.733 mo
344.013 132.72 344.724 132.294 344.718 131.782 cv
344.71 131.267 343.987 130.861 343.103 130.872 cv
342.218 130.885 341.507 131.312 341.513 131.826 cv
341.521 132.34 342.243 132.744 343.126 132.733 cv
cp
f
350.616 135.403 mo
351.737 135.18 352.544 134.471 352.415 133.821 cv
352.282 133.171 351.271 132.822 350.147 133.045 cv
349.026 133.266 348.224 133.973 348.351 134.629 cv
348.481 135.276 349.495 135.623 350.616 135.403 cv
cp
f
337.224 165.352 mo
337.722 165.555 338.249 165.414 338.401 165.038 cv
338.556 164.66 338.278 164.188 337.78 163.988 cv
337.284 163.785 336.757 163.927 336.603 164.305 cv
336.45 164.681 336.729 165.149 337.224 165.352 cv
cp
f
364.192 180.336 mo
365.511 180.941 367.071 180.361 367.675 179.041 cv
368.282 177.721 367.702 176.162 366.382 175.559 cv
365.062 174.951 359.028 173.482 358.423 174.803 cv
357.819 176.123 362.872 179.73 364.192 180.336 cv
cp
.278431 .0745098 .00784314 rgb
f
361.255 186.896 mo
362.577 187.504 364.138 186.924 364.741 185.604 cv
365.345 184.283 364.769 182.723 363.446 182.119 cv
362.128 181.514 356.095 180.045 355.489 181.365 cv
354.884 182.684 359.937 186.293 361.255 186.896 cv
cp
f
363.187 184.484 mo
363.464 185.031 363.929 185.355 364.22 185.209 cv
364.511 185.059 364.521 184.496 364.241 183.949 cv
363.962 183.4 363.499 183.078 363.208 183.227 cv
362.917 183.375 362.909 183.939 363.187 184.484 cv
cp
.992157 .866667 .521569 rgb
f
366.151 177.857 mo
366.431 178.404 366.894 178.729 367.187 178.58 cv
367.476 178.432 367.487 177.869 367.208 177.318 cv
366.929 176.773 366.468 176.449 366.175 176.598 cv
365.882 176.744 365.874 177.311 366.151 177.857 cv
cp
f
339.213 36.5562 mo
338.952 36.4263 338.695 36.3296 338.438 36.25 cv
338.42 36.2363 338.405 36.2173 338.386 36.2051 cv
337.896 35.9067 337.345 35.9316 336.813 36.1245 cv
336.754 36.1333 336.698 36.1313 336.638 36.1431 cv
336.277 36.2124 335.987 36.4316 335.78 36.7178 cv
335.362 37.042 334.999 37.4224 334.757 37.7617 cv
334.056 38.7422 333.994 40.3794 335.132 41.0605 cv
337.018 42.1885 339.409 40.0869 339.948 38.3613 cv
340.15 37.7144 339.833 36.8657 339.213 36.5562 cv
cp
325.701 32.3286 mo
325.38 31.146 324.215 30.4355 323.045 30.3853 cv
321.467 30.3169 320.444 31.7358 319.924 33.0278 cv
319.714 33.5483 319.914 34.0786 320.282 34.4561 cv
320.534 35.0205 321.202 35.3887 321.786 35.501 cv
322.506 35.6396 323.267 35.5757 323.952 35.3135 cv
325.194 34.8379 326.075 33.7046 325.701 32.3286 cv
cp
326.071 28.1563 mo
325.646 28.6465 324.953 28.9648 324.354 29.1758 cv
323.687 29.4097 322.963 29.4678 322.324 29.103 cv
321.739 28.769 321.363 28.1538 321.417 27.4707 cv
321.464 26.8643 321.763 26.1104 322.229 25.6978 cv
322.495 25.4629 322.786 25.2046 323.127 25.0884 cv
323.31 25.0254 323.53 24.9951 323.721 25.0474 cv
323.729 25.0493 323.729 25.0503 323.737 25.0522 cv
323.741 25.0522 323.74 25.0513 323.745 25.0513 cv
323.87 25.0469 323.977 25.0869 324.067 25.1489 cv
324.754 24.9302 325.478 25 326.012 25.5679 cv
326.722 26.3213 326.749 27.3745 326.071 28.1563 cv
cp
1 .415686 .219608 rgb
f
369.899 38.3613 mo
370.438 40.0869 372.83 42.1885 374.716 41.0605 cv
375.854 40.3794 375.792 38.7422 375.091 37.7617 cv
374.849 37.4224 374.485 37.042 374.067 36.7178 cv
373.86 36.4316 373.57 36.2124 373.21 36.1431 cv
373.149 36.1313 373.094 36.1333 373.034 36.1245 cv
372.503 35.9316 371.952 35.9067 371.462 36.2051 cv
371.442 36.2173 371.428 36.2363 371.409 36.25 cv
371.152 36.3296 370.896 36.4263 370.635 36.5562 cv
370.015 36.8657 369.697 37.7144 369.899 38.3613 cv
cp
385.896 35.3135 mo
386.581 35.5757 387.342 35.6396 388.062 35.501 cv
388.646 35.3887 389.313 35.0205 389.565 34.4561 cv
389.934 34.0786 390.134 33.5483 389.924 33.0278 cv
389.403 31.7358 388.381 30.3169 386.803 30.3853 cv
385.633 30.4355 384.468 31.146 384.146 32.3286 cv
383.772 33.7046 384.653 34.8379 385.896 35.3135 cv
cp
383.836 25.5679 mo
384.37 25 385.094 24.9302 385.78 25.1489 cv
385.871 25.0869 385.978 25.0469 386.103 25.0513 cv
386.107 25.0513 386.106 25.0522 386.11 25.0522 cv
386.118 25.0503 386.119 25.0493 386.127 25.0474 cv
386.317 24.9951 386.538 25.0254 386.721 25.0884 cv
387.062 25.2046 387.353 25.4629 387.618 25.6978 cv
388.085 26.1104 388.384 26.8643 388.431 27.4707 cv
388.484 28.1538 388.108 28.769 387.523 29.103 cv
386.885 29.4678 386.161 29.4097 385.494 29.1758 cv
384.895 28.9648 384.201 28.6465 383.776 28.1563 cv
383.099 27.3745 383.126 26.3213 383.836 25.5679 cv
cp
f
359.645 54.6802 mo
361.855 55.5879 363.877 56.915 366.133 57.6938 cv
368.133 58.3848 370.529 58.8599 372.355 59.9409 cv
376.955 62.6626 375.346 68.5005 377.096 72.7344 cv
377.314 73.2612 377.99 73.165 378.063 72.6035 cv
378.613 68.3604 377.773 61.8442 374.25 58.9907 cv
372.617 57.668 370.463 57.0283 368.479 56.4629 cv
365.459 55.6021 363.299 53.8784 360.637 52.3237 cv
359.051 51.397 357.885 53.958 359.645 54.6802 cv
cp
367.461 52.9922 mo
371.564 55.8696 376.705 53.6235 380.865 56.1567 cv
384.934 58.6338 388.727 61.0938 391.441 65.1104 cv
391.662 65.4385 392.146 65.2314 392.068 64.8457 cv
391.264 60.7778 387.078 58.4063 383.855 56.3066 cv
378.84 53.0386 373.664 53.0361 367.883 51.9927 cv
367.266 51.8813 366.945 52.6294 367.461 52.9922 cv
cp
372.66 50.6514 mo
377.1 51.5845 381.582 51.5273 385.936 50.1807 cv
388.867 49.2744 391.729 48.0737 394.816 47.8247 cv
396.83 47.6626 398.834 47.7236 400.832 47.4424 cv
401.188 47.3921 401.146 46.8462 400.832 46.7646 cv
397.498 45.9014 393.705 46.4663 390.383 47.2554 cv
384.285 48.7041 379.457 49.8462 373.146 48.8887 cv
372.01 48.7158 371.488 50.4048 372.66 50.6514 cv
cp
375.477 46.4375 mo
382.92 44.3911 391.58 42.6372 397.604 37.4697 cv
397.754 37.3413 397.563 37.1343 397.404 37.2119 cv
393.34 39.2104 389.471 41.1074 385.051 42.2651 cv
381.674 43.1499 378.229 43.3491 374.832 44.1025 cv
373.314 44.439 373.963 46.854 375.477 46.4375 cv
cp
349.209 52.3237 mo
346.549 53.8784 344.389 55.6021 341.367 56.4629 cv
339.383 57.0283 337.229 57.668 335.596 58.9907 cv
332.074 61.8442 331.234 68.3604 331.783 72.6035 cv
331.857 73.165 332.533 73.2612 332.75 72.7344 cv
334.502 68.5005 332.893 62.6626 337.49 59.9409 cv
339.316 58.8599 341.713 58.3848 343.715 57.6938 cv
345.971 56.915 347.99 55.5879 350.203 54.6802 cv
351.961 53.958 350.797 51.397 349.209 52.3237 cv
cp
341.963 51.9927 mo
336.182 53.0361 331.006 53.0386 325.99 56.3066 cv
322.77 58.4063 318.584 60.7778 317.777 64.8457 cv
317.701 65.2314 318.184 65.4385 318.406 65.1104 cv
321.121 61.0938 324.912 58.6338 328.98 56.1567 cv
333.143 53.6235 338.283 55.8696 342.385 52.9922 cv
342.902 52.6294 342.58 51.8813 341.963 51.9927 cv
cp
336.699 48.8887 mo
330.389 49.8462 325.563 48.7041 319.465 47.2554 cv
316.143 46.4663 312.348 45.9014 309.016 46.7646 cv
308.701 46.8462 308.658 47.3921 309.016 47.4424 cv
311.014 47.7236 313.016 47.6626 315.029 47.8247 cv
318.117 48.0737 320.98 49.2744 323.91 50.1807 cv
328.264 51.5273 332.746 51.5845 337.186 50.6514 cv
338.359 50.4048 337.838 48.7158 336.699 48.8887 cv
cp
334.371 46.4375 mo
326.928 44.3911 318.266 42.6372 312.242 37.4697 cv
312.094 37.3413 312.283 37.1343 312.441 37.2119 cv
316.508 39.2104 320.377 41.1074 324.795 42.2651 cv
328.174 43.1499 331.619 43.3491 335.016 44.1025 cv
336.533 44.439 335.885 46.854 334.371 46.4375 cv
cp
f
362.132 34.5537 mo
362.132 32.1328 358.904 30.1704 354.923 30.1704 cv
350.942 30.1704 347.715 32.1328 347.715 34.5537 cv
347.715 36.9746 350.942 38.937 354.923 38.937 cv
358.904 38.937 362.132 36.9746 362.132 34.5537 cv
cp
f
377.569 49.2017 mo
377.569 43.9673 367.43 39.7241 354.921 39.7241 cv
342.417 39.7241 332.277 43.9673 332.277 49.2017 cv
332.277 54.4355 342.417 58.6787 354.921 58.6787 cv
367.43 58.6787 377.569 54.4355 377.569 49.2017 cv
cp
f
371.811 21.1797 mo
370.133 19.2012 369.611 18.7695 367.337 17.7476 cv
366.402 17.3281 362.539 17.0923 361.531 16.998 cv
359.581 16.8154 358.816 15.8921 357.291 14.9575 cv
357.136 14.8623 356.925 15.019 356.98 15.1958 cv
357.67 17.377 359.904 18.5107 362.027 18.8472 cv
363.67 19.1074 365.146 20.2036 366.78 20.5928 cv
368.345 20.9653 369.945 21.3979 371.521 21.6758 cv
371.819 21.7285 372.01 21.4136 371.811 21.1797 cv
cp
.45098 .113725 0 rgb
f
386.572 23.6831 mo
386.164 22.4126 378.676 18.5918 377.914 18.1597 cv
372.693 15.2031 366.944 14.688 361.101 14.2827 cv
360.795 14.2617 360.723 14.77 361.027 14.8198 cv
361.858 14.9561 362.684 15.1221 363.509 15.2905 cv
363.533 15.3037 363.557 15.3193 363.586 15.3267 cv
367.365 16.2358 370.465 19.5845 373.605 22.4585 cv
374.736 23.9365 375.963 25.3525 377.424 26.3921 cv
378.598 27.229 380.298 28.1304 381.887 28.1323 cv
382.899 28.4966 383.932 28.2466 384.898 27.4375 cv
385.855 26.6367 387.004 25.0254 386.572 23.6831 cv
cp
.768627 .192157 0 rgb
f
388.221 34.791 mo
387.734 32.8237 381.655 31.8306 381.488 32.0137 cv
378.074 33.1294 374.515 33.0859 371.217 34.6973 cv
370.718 34.9414 370.496 35.7324 370.825 36.1904 cv
372.262 38.1885 373.735 39.9712 376.077 40.8765 cv
378.92 41.9756 382.422 39.2314 384.943 38.3975 cv
386.822 37.7769 388.797 37.1206 388.221 34.791 cv
cp
f
390.632 30.0078 mo
390.318 28.2739 389.178 27.0479 388.526 25.4531 cv
388.297 24.8911 387.307 24.688 387.175 25.4531 cv
386.844 27.3701 385.791 28.3359 384.671 29.6948 cv
384.62 29.7354 384.58 29.7881 384.548 29.8457 cv
384.499 29.9063 384.451 29.9624 384.402 30.0244 cv
384.242 30.2271 384.365 30.4775 384.604 30.4868 cv
385.032 31.1558 386.02 31.1846 386.67 31.582 cv
387.03 31.8022 387.253 32.2036 387.521 32.5171 cv
388.068 33.1577 388.426 33.9785 388.914 34.666 cv
388.962 34.9243 389.139 35.1079 389.367 35.2075 cv
389.816 35.605 390.456 35.2964 390.565 34.7803 cv
390.579 34.7529 390.6 34.7354 390.611 34.7056 cv
391.177 33.2349 390.906 31.5244 390.632 30.0078 cv
cp
.45098 .113725 0 rgb
f
367.037 54.4839 mo
366.635 54.2349 366.131 54.2695 365.693 54.3765 cv
365.051 54.5337 364.591 54.7646 364.029 55.2256 cv
363.502 55.6592 362.979 56.2485 362.746 56.8994 cv
362.719 56.9741 362.709 57.0493 362.695 57.1245 cv
362.692 57.127 362.689 57.1294 362.687 57.1318 cv
362.289 57.4966 362.115 58.1855 362.428 58.6587 cv
362.734 59.1226 363.133 59.3174 363.668 59.375 cv
364.373 59.4512 365.09 58.9829 365.633 58.5869 cv
366.289 58.1074 366.862 57.4883 367.322 56.8193 cv
367.839 56.0664 367.897 55.0186 367.037 54.4839 cv
cp
f
369.4 56.0732 mo
368.843 55.3633 367.757 55.7949 367.305 56.3701 cv
367.16 56.5527 367.077 56.7612 367.043 56.9717 cv
366.646 57.7007 367.309 58.5869 368.107 58.7656 cv
368.879 58.9385 369.437 58.4307 369.699 57.7578 cv
369.926 57.1807 369.766 56.5405 369.4 56.0732 cv
cp
f
373.211 57.5322 mo
372.985 56.0933 371.188 56.1782 370.395 57.0991 cv
370.174 57.354 370.09 57.6763 370.139 57.9829 cv
369.962 58.7808 370.099 59.7944 370.641 60.3813 cv
371.343 61.1436 372.342 60.7612 372.814 59.9834 cv
373.244 59.2759 373.336 58.333 373.211 57.5322 cv
cp
f
377.439 59.8647 mo
377.204 59.2886 376.766 58.772 376.26 58.4438 cv
376.115 58.3496 375.959 58.3169 375.803 58.3081 cv
375.705 58.2842 375.604 58.2749 375.502 58.29 cv
374.484 58.4409 373.84 59.7505 373.461 60.585 cv
373.148 61.2759 373.527 61.9468 374.285 62.0205 cv
374.635 62.0542 375.104 62.3843 375.469 62.5088 cv
375.773 62.6128 376.102 62.5811 376.404 62.4692 cv
377.016 62.7012 377.814 62.3706 377.906 61.481 cv
377.969 60.8779 377.752 60.3506 377.439 59.8647 cv
cp
f
378.758 65.9683 mo
378.304 64.2266 376.67 63.4468 375.019 63.2192 cv
374.506 63.1489 374.041 63.4146 373.936 63.8706 cv
373.903 63.8965 373.878 63.9312 373.879 63.9834 cv
373.91 65.606 375.451 72.0508 378.203 69.6323 cv
379.161 68.791 379.044 67.0693 378.758 65.9683 cv
cp
f
379.098 71.4956 mo
378.143 70.8174 377.297 70.8037 376.65 71.1958 cv
376.505 71.1846 376.356 71.1816 376.201 71.2002 cv
375.607 71.2715 374.985 71.7612 375.08 72.4102 cv
374.73 73.3184 374.65 74.4185 374.695 75.3198 cv
374.768 76.814 375.925 78.1455 376.674 79.354 cv
376.953 79.8042 377.711 80.0054 378.088 79.5361 cv
379.713 77.5122 381.924 73.5005 379.098 71.4956 cv
cp
.768627 .192157 0 rgb
f
372.474 52.8755 mo
371.837 52.9854 370.622 53.2744 369.756 53.7754 cv
369.42 53.7837 369.181 54.0112 369.095 54.3003 cv
368.957 54.4565 368.846 54.6221 368.799 54.8066 cv
368.749 55.0083 368.895 55.1948 369.101 55.2021 cv
369.156 55.2041 369.266 55.186 369.406 55.1563 cv
369.464 55.1919 369.516 55.2319 369.588 55.2544 cv
371.172 55.7422 372.99 55.1143 374.601 55.0718 cv
375.006 55.0605 375.382 54.7314 375.366 54.3062 cv
375.307 52.728 373.678 52.668 372.474 52.8755 cv
cp
.45098 .113725 0 rgb
f
384.165 49.2075 mo
383.579 48.208 381.344 48.6899 380.463 48.7983 cv
379.59 48.9058 378.058 49.1704 377.113 49.8296 cv
376.975 49.8472 376.836 49.8501 376.699 49.8716 cv
375.573 50.0464 376.059 51.7363 377.169 51.5737 cv
378.098 51.438 385.765 51.9385 384.165 49.2075 cv
cp
f
392.678 64.0469 mo
392.393 62.2271 389.065 63.416 390.522 65.3013 cv
391.844 67.0112 391.8 69.8691 392.382 71.8438 cv
392.42 71.9727 392.621 71.9834 392.653 71.8438 cv
392.953 70.5449 393.179 69.1328 393.262 67.8003 cv
393.34 66.5313 392.871 65.2822 392.678 64.0469 cv
cp
.768627 .192157 0 rgb
f
407.769 42.9458 mo
407.506 42.9053 407.281 42.8218 407.037 42.9263 cv
406.046 43.3486 405.086 43.5166 404.053 43.769 cv
402.6 44.1245 401.426 45.0796 400.047 45.6104 cv
398.139 46.3452 399.305 49.0981 401.133 48.1855 cv
402.305 47.6001 403.766 46.8262 404.729 45.9351 cv
405.348 45.3608 405.777 44.6621 406.518 44.2368 cv
407.17 43.8618 407.518 43.7231 407.814 43.0605 cv
407.834 43.0195 407.822 42.9541 407.769 42.9458 cv
cp
f
402.819 30.7832 mo
401.737 31.1221 401.036 32.2705 399.979 32.748 cv
399.472 32.9771 398.998 33.6294 398.632 34.0313 cv
398.063 34.6543 397.448 35.2437 396.862 35.8525 cv
396.388 36.3467 396.372 36.9673 396.642 37.563 cv
396.649 37.5796 396.657 37.5967 396.665 37.6133 cv
397.112 38.6021 398.237 38.4609 398.86 37.8389 cv
398.859 37.8423 398.858 37.8452 398.858 37.8486 cv
398.867 37.8379 398.876 37.8267 398.885 37.8154 cv
398.961 37.7358 399.03 37.6509 399.089 37.5576 cv
399.865 36.6011 400.621 35.6294 401.272 34.5811 cv
401.638 33.9951 401.715 33.3223 402.05 32.7158 cv
402.374 32.1299 402.831 31.6191 403.011 30.9756 cv
403.042 30.8638 402.933 30.7476 402.819 30.7832 cv
cp
f
382.418 42.835 mo
381.953 42.6167 381.605 42.6289 381.113 42.7065 cv
381.098 42.709 381.094 42.71 381.082 42.7119 cv
381.059 42.7144 381.021 42.7183 380.967 42.7246 cv
380.829 42.7407 380.691 42.7529 380.553 42.7695 cv
380.284 42.8022 380.016 42.8276 379.746 42.8389 cv
379.689 42.8413 379.634 42.8379 379.578 42.8369 cv
379.539 42.8291 379.247 42.8101 379.139 42.8237 cv
378.525 42.9028 378 43.1831 377.824 43.8247 cv
377.659 44.4248 377.929 45.0435 378.451 45.3647 cv
379.021 45.7153 379.777 45.6309 380.414 45.5547 cv
381.078 45.4756 382.226 45.3936 382.675 44.8281 cv
383.137 44.2451 383.229 43.2153 382.418 42.835 cv
cp
.45098 .113725 0 rgb
f
387.223 40.8008 mo
386.232 41.0391 382.156 42.1113 383.67 43.7627 cv
384.221 44.3647 385.049 44.1396 385.742 43.9937 cv
386.485 43.8379 387.227 43.6543 387.977 43.5356 cv
389.748 43.2559 389.029 40.3657 387.223 40.8008 cv
cp
f
395.393 37.5552 mo
394.152 37.5811 393.238 38.269 392.126 38.7104 cv
391.113 39.1128 389.833 39.4185 389.113 40.2773 cv
388.607 40.8813 388.898 41.9033 389.783 41.8936 cv
390.907 41.8809 392.137 41.4082 393.195 41.0435 cv
394.229 40.688 395.362 40.1553 396.156 39.3965 cv
396.832 38.75 396.326 37.5361 395.393 37.5552 cv
cp
f
389.045 47.0938 mo
387.756 47.5396 386.035 47.6064 384.957 48.4658 cv
384.514 48.8188 384.564 49.6123 384.957 49.9741 cv
386.128 51.0557 388.465 50.2715 389.82 49.9077 cv
391.646 49.418 390.816 46.4805 389.045 47.0938 cv
cp
f
398.041 46.0405 mo
396.881 45.7319 395.574 45.8418 394.394 45.9312 cv
393.344 46.0103 391.575 46.2168 391.248 47.4497 cv
391.174 47.7275 391.232 48.1255 391.477 48.3145 cv
392.268 48.9312 393.441 48.7861 394.394 48.7593 cv
395.484 48.7285 396.568 48.8052 397.652 48.9043 cv
399.322 49.0562 399.596 46.4546 398.041 46.0405 cv
cp
f
381.096 53.4263 mo
380.253 52.8809 379.162 52.8696 378.193 52.8901 cv
377.266 52.9097 375.665 53.0483 375.213 54.0303 cv
375.059 54.3623 375.082 54.686 375.333 54.9644 cv
375.914 55.6089 376.941 55.5293 377.727 55.6069 cv
378.336 55.6675 379.348 55.6875 379.66 55.8818 cv
381.227 56.856 382.627 54.4175 381.096 53.4263 cv
cp
f
391.516 61.3267 mo
389.969 59.1646 387.936 57.7451 385.875 56.1284 cv
385.116 55.5327 384.105 54.6563 383.06 54.8579 cv
382.609 54.9448 381.747 55.3198 381.968 55.9575 cv
382.377 57.1421 384.055 58.1362 385 58.9189 cv
386.445 60.1143 387.937 61.2271 389.02 62.7856 cv
390.078 64.3096 392.599 62.8408 391.516 61.3267 cv
cp
f
337.984 21.1797 mo
339.662 19.2012 340.184 18.7695 342.458 17.7476 cv
343.393 17.3281 347.256 17.0923 348.264 16.998 cv
350.214 16.8154 350.979 15.8921 352.504 14.9575 cv
352.659 14.8623 352.87 15.019 352.814 15.1958 cv
352.125 17.377 349.891 18.5107 347.768 18.8472 cv
346.125 19.1074 344.648 20.2036 343.015 20.5928 cv
341.45 20.9653 339.85 21.3979 338.273 21.6758 cv
337.976 21.7285 337.785 21.4136 337.984 21.1797 cv
cp
f
324.896 27.4375 mo
325.863 28.2466 326.896 28.4966 327.908 28.1323 cv
329.497 28.1304 331.197 27.229 332.371 26.3921 cv
333.832 25.3525 335.059 23.9365 336.189 22.4585 cv
339.33 19.5845 342.43 16.2358 346.209 15.3267 cv
346.238 15.3193 346.262 15.3037 346.286 15.2905 cv
347.111 15.1221 347.937 14.9561 348.768 14.8198 cv
349.072 14.77 349 14.2617 348.694 14.2827 cv
342.851 14.688 337.102 15.2031 331.881 18.1597 cv
331.119 18.5918 323.631 22.4126 323.223 23.6831 cv
322.791 25.0254 323.939 26.6367 324.896 27.4375 cv
cp
.768627 .192157 0 rgb
f
324.852 38.3975 mo
327.373 39.2314 330.875 41.9756 333.718 40.8765 cv
336.06 39.9712 337.533 38.1885 338.97 36.1904 cv
339.299 35.7324 339.077 34.9414 338.578 34.6973 cv
335.28 33.0859 331.721 33.1294 328.307 32.0137 cv
328.14 31.8306 322.061 32.8237 321.574 34.791 cv
320.998 37.1206 322.973 37.7769 324.852 38.3975 cv
cp
f
319.184 34.7056 mo
319.195 34.7354 319.216 34.7529 319.229 34.7803 cv
319.339 35.2964 319.979 35.605 320.428 35.2075 cv
320.656 35.1079 320.833 34.9243 320.881 34.666 cv
321.369 33.9785 321.727 33.1577 322.273 32.5171 cv
322.542 32.2036 322.765 31.8022 323.125 31.582 cv
323.775 31.1846 324.763 31.1558 325.19 30.4868 cv
325.43 30.4775 325.553 30.2271 325.393 30.0244 cv
325.344 29.9624 325.296 29.9063 325.247 29.8457 cv
325.215 29.7881 325.175 29.7354 325.124 29.6948 cv
324.004 28.3359 322.951 27.3701 322.62 25.4531 cv
322.488 24.688 321.498 24.8911 321.269 25.4531 cv
320.617 27.0479 319.477 28.2739 319.163 30.0078 cv
318.889 31.5244 318.618 33.2349 319.184 34.7056 cv
cp
.45098 .113725 0 rgb
f
342.758 54.4839 mo
343.16 54.2349 343.664 54.2695 344.102 54.3765 cv
344.744 54.5337 345.204 54.7646 345.766 55.2256 cv
346.293 55.6592 346.815 56.2485 347.049 56.8994 cv
347.076 56.9741 347.086 57.0493 347.1 57.1245 cv
347.103 57.127 347.105 57.1294 347.108 57.1318 cv
347.506 57.4966 347.68 58.1855 347.367 58.6587 cv
347.061 59.1226 346.662 59.3174 346.127 59.375 cv
345.422 59.4512 344.705 58.9829 344.162 58.5869 cv
343.506 58.1074 342.933 57.4883 342.473 56.8193 cv
341.956 56.0664 341.897 55.0186 342.758 54.4839 cv
cp
f
340.096 57.7578 mo
340.358 58.4307 340.916 58.9385 341.688 58.7656 cv
342.486 58.5869 343.148 57.7007 342.752 56.9717 cv
342.718 56.7612 342.635 56.5527 342.49 56.3701 cv
342.038 55.7949 340.952 55.3633 340.395 56.0732 cv
340.029 56.5405 339.869 57.1807 340.096 57.7578 cv
cp
f
336.584 57.5322 mo
336.81 56.0933 338.607 56.1782 339.4 57.0991 cv
339.621 57.354 339.705 57.6763 339.656 57.9829 cv
339.833 58.7808 339.696 59.7944 339.154 60.3813 cv
338.452 61.1436 337.453 60.7612 336.98 59.9834 cv
336.551 59.2759 336.459 58.333 336.584 57.5322 cv
cp
f
332.355 59.8647 mo
332.591 59.2886 333.029 58.772 333.535 58.4438 cv
333.68 58.3496 333.836 58.3169 333.992 58.3081 cv
334.09 58.2842 334.191 58.2749 334.293 58.29 cv
335.311 58.4409 335.955 59.7505 336.334 60.585 cv
336.646 61.2759 336.268 61.9468 335.51 62.0205 cv
335.16 62.0542 334.691 62.3843 334.326 62.5088 cv
334.021 62.6128 333.693 62.5811 333.391 62.4692 cv
332.779 62.7012 331.98 62.3706 331.889 61.481 cv
331.826 60.8779 332.043 60.3506 332.355 59.8647 cv
cp
f
331.037 65.9683 mo
331.491 64.2266 333.125 63.4468 334.776 63.2192 cv
335.289 63.1489 335.754 63.4146 335.859 63.8706 cv
335.892 63.8965 335.917 63.9312 335.916 63.9834 cv
335.885 65.606 334.344 72.0508 331.592 69.6323 cv
330.634 68.791 330.751 67.0693 331.037 65.9683 cv
cp
f
331.707 79.5361 mo
332.084 80.0054 332.842 79.8042 333.121 79.354 cv
333.87 78.1455 335.027 76.814 335.1 75.3198 cv
335.145 74.4185 335.064 73.3184 334.715 72.4102 cv
334.81 71.7612 334.188 71.2715 333.594 71.2002 cv
333.438 71.1816 333.29 71.1846 333.145 71.1958 cv
332.498 70.8037 331.652 70.8174 330.697 71.4956 cv
327.871 73.5005 330.082 77.5122 331.707 79.5361 cv
cp
.768627 .192157 0 rgb
f
337.321 52.8755 mo
337.958 52.9854 339.173 53.2744 340.039 53.7754 cv
340.375 53.7837 340.614 54.0112 340.7 54.3003 cv
340.838 54.4565 340.949 54.6221 340.996 54.8066 cv
341.046 55.0083 340.9 55.1948 340.694 55.2021 cv
340.639 55.2041 340.529 55.186 340.389 55.1563 cv
340.331 55.1919 340.279 55.2319 340.207 55.2544 cv
338.623 55.7422 336.805 55.1143 335.194 55.0718 cv
334.789 55.0605 334.413 54.7314 334.429 54.3062 cv
334.488 52.728 336.117 52.668 337.321 52.8755 cv
cp
.45098 .113725 0 rgb
f
325.63 49.2075 mo
326.216 48.208 328.451 48.6899 329.332 48.7983 cv
330.205 48.9058 331.737 49.1704 332.682 49.8296 cv
332.82 49.8472 332.959 49.8501 333.096 49.8716 cv
334.222 50.0464 333.736 51.7363 332.626 51.5737 cv
331.697 51.438 324.03 51.9385 325.63 49.2075 cv
cp
f
317.117 64.0469 mo
317.402 62.2271 320.729 63.416 319.272 65.3013 cv
317.951 67.0112 317.995 69.8691 317.413 71.8438 cv
317.375 71.9727 317.174 71.9834 317.142 71.8438 cv
316.842 70.5449 316.616 69.1328 316.533 67.8003 cv
316.455 66.5313 316.924 65.2822 317.117 64.0469 cv
cp
.768627 .192157 0 rgb
f
302.026 42.9458 mo
302.289 42.9053 302.514 42.8218 302.758 42.9263 cv
303.749 43.3486 304.709 43.5166 305.742 43.769 cv
307.195 44.1245 308.369 45.0796 309.748 45.6104 cv
311.656 46.3452 310.49 49.0981 308.662 48.1855 cv
307.49 47.6001 306.029 46.8262 305.066 45.9351 cv
304.447 45.3608 304.018 44.6621 303.277 44.2368 cv
302.625 43.8618 302.277 43.7231 301.98 43.0605 cv
301.961 43.0195 301.973 42.9541 302.026 42.9458 cv
cp
f
306.976 30.7832 mo
308.058 31.1221 308.759 32.2705 309.815 32.748 cv
310.323 32.9771 310.797 33.6294 311.163 34.0313 cv
311.731 34.6543 312.347 35.2437 312.933 35.8525 cv
313.407 36.3467 313.423 36.9673 313.153 37.563 cv
313.146 37.5796 313.138 37.5967 313.13 37.6133 cv
312.683 38.6021 311.558 38.4609 310.935 37.8389 cv
310.936 37.8423 310.937 37.8452 310.937 37.8486 cv
310.928 37.8379 310.919 37.8267 310.91 37.8154 cv
310.834 37.7358 310.765 37.6509 310.706 37.5576 cv
309.93 36.6011 309.174 35.6294 308.522 34.5811 cv
308.157 33.9951 308.08 33.3223 307.745 32.7158 cv
307.421 32.1299 306.964 31.6191 306.784 30.9756 cv
306.753 30.8638 306.862 30.7476 306.976 30.7832 cv
cp
f
327.377 42.835 mo
327.842 42.6167 328.189 42.6289 328.682 42.7065 cv
328.697 42.709 328.701 42.71 328.713 42.7119 cv
328.736 42.7144 328.773 42.7183 328.828 42.7246 cv
328.966 42.7407 329.104 42.7529 329.242 42.7695 cv
329.511 42.8022 329.779 42.8276 330.049 42.8389 cv
330.105 42.8413 330.161 42.8379 330.217 42.8369 cv
330.256 42.8291 330.548 42.8101 330.656 42.8237 cv
331.27 42.9028 331.795 43.1831 331.971 43.8247 cv
332.136 44.4248 331.866 45.0435 331.344 45.3647 cv
330.774 45.7153 330.018 45.6309 329.381 45.5547 cv
328.717 45.4756 327.569 45.3936 327.12 44.8281 cv
326.658 44.2451 326.566 43.2153 327.377 42.835 cv
cp
.45098 .113725 0 rgb
f
322.572 40.8008 mo
323.563 41.0391 327.639 42.1113 326.125 43.7627 cv
325.574 44.3647 324.746 44.1396 324.053 43.9937 cv
323.31 43.8379 322.568 43.6543 321.818 43.5356 cv
320.047 43.2559 320.766 40.3657 322.572 40.8008 cv
cp
f
314.402 37.5552 mo
315.643 37.5811 316.557 38.269 317.669 38.7104 cv
318.682 39.1128 319.962 39.4185 320.682 40.2773 cv
321.188 40.8813 320.896 41.9033 320.012 41.8936 cv
318.888 41.8809 317.658 41.4082 316.6 41.0435 cv
315.566 40.688 314.433 40.1553 313.639 39.3965 cv
312.963 38.75 313.469 37.5361 314.402 37.5552 cv
cp
f
320.75 47.0938 mo
322.039 47.5396 323.76 47.6064 324.838 48.4658 cv
325.281 48.8188 325.23 49.6123 324.838 49.9741 cv
323.667 51.0557 321.33 50.2715 319.975 49.9077 cv
318.148 49.418 318.979 46.4805 320.75 47.0938 cv
cp
f
311.754 46.0405 mo
312.914 45.7319 314.221 45.8418 315.401 45.9312 cv
316.451 46.0103 318.22 46.2168 318.547 47.4497 cv
318.621 47.7275 318.563 48.1255 318.318 48.3145 cv
317.527 48.9312 316.354 48.7861 315.401 48.7593 cv
314.311 48.7285 313.227 48.8052 312.143 48.9043 cv
310.473 49.0562 310.199 46.4546 311.754 46.0405 cv
cp
f
328.699 53.4263 mo
329.542 52.8809 330.633 52.8696 331.602 52.8901 cv
332.529 52.9097 334.13 53.0483 334.582 54.0303 cv
334.736 54.3623 334.713 54.686 334.462 54.9644 cv
333.881 55.6089 332.854 55.5293 332.068 55.6069 cv
331.459 55.6675 330.447 55.6875 330.135 55.8818 cv
328.568 56.856 327.168 54.4175 328.699 53.4263 cv
cp
f
318.279 61.3267 mo
319.826 59.1646 321.859 57.7451 323.92 56.1284 cv
324.679 55.5327 325.689 54.6563 326.735 54.8579 cv
327.186 54.9448 328.048 55.3198 327.827 55.9575 cv
327.418 57.1421 325.74 58.1362 324.795 58.9189 cv
323.35 60.1143 321.858 61.2271 320.775 62.7856 cv
319.717 64.3096 317.196 62.8408 318.279 61.3267 cv
cp
f
354.831 55.7188 mo
354.867 55.7002 354.891 55.668 354.924 55.646 cv
354.957 55.668 354.979 55.7002 355.016 55.7188 cv
354.985 55.73 354.954 55.7407 354.924 55.7515 cv
354.893 55.7407 354.861 55.73 354.831 55.7188 cv
cp
378.46 46.6616 mo
378.14 45.646 377.117 44.3784 376.324 43.3335 cv
374.273 40.6289 371.635 37.7651 369.01 35.9346 cv
364.609 32.8672 359.988 32.0337 354.924 33.8169 cv
349.857 32.0337 345.236 32.8672 340.838 35.9346 cv
338.213 37.7651 335.574 40.6289 333.521 43.3335 cv
332.729 44.3784 331.707 45.646 331.387 46.6616 cv
330.836 48.4063 334.639 51.6167 335.359 52.0161 cv
337.757 53.3452 340.379 53.7104 343.04 54.2007 cv
346.877 54.9077 350.604 56.04 354.467 56.6421 cv
354.5 56.6646 355.347 56.6646 355.381 56.6421 cv
359.244 56.04 362.97 54.9077 366.807 54.2007 cv
369.469 53.7104 372.09 53.3452 374.488 52.0161 cv
375.208 51.6167 379.011 48.4063 378.46 46.6616 cv
cp
.768627 .192157 0 rgb
f
354.971 34.8604 mo
354.924 34.877 li
354.592 34.7603 li
352.951 34.1826 351.326 33.8896 349.763 33.8896 cv
346.906 33.8896 344.175 34.8271 341.41 36.7549 cv
338.379 38.8687 335.665 42.1626 334.318 43.938 cv
334.065 44.2695 li
333.401 45.1382 332.575 46.2183 332.34 46.9629 cv
332.073 47.8096 334.896 50.6167 335.844 51.1416 cv
337.845 52.2505 340.047 52.646 342.379 53.0645 cv
343.222 53.2173 li
344.954 53.5366 346.681 53.9453 348.351 54.3403 cv
349.949 54.7188 351.59 55.1069 353.233 55.415 cv
354.283 54.876 li
354.308 54.8545 li
354.924 54.4468 li
354.971 54.478 li
354.971 34.8604 li
cp
1 .415686 .219608 rgb
f
361.046 56.4292 mo
359.506 55.7979 357.622 57.0483 356.045 57.0986 cv
355.512 57.1157 354.336 57.1157 353.802 57.0986 cv
352.225 57.0483 350.34 55.7979 348.801 56.4292 cv
348.096 56.7178 347.603 57.686 348.308 58.2959 cv
349.076 58.9609 350.125 59.1304 351.08 59.4048 cv
351.969 59.6602 352.868 59.9048 353.802 59.8818 cv
354.336 59.8687 355.511 59.8687 356.045 59.8818 cv
356.979 59.9048 357.877 59.6602 358.767 59.4048 cv
359.723 59.1304 360.77 58.9609 361.539 58.2959 cv
362.244 57.686 361.75 56.7178 361.046 56.4292 cv
cp
.768627 .192157 0 rgb
f
351.658 30.3203 mo
351.658 29.2021 350.753 28.2959 349.635 28.2959 cv
348.516 28.2959 347.609 29.2021 347.609 30.3203 cv
347.609 31.438 348.516 36.1333 349.635 36.1333 cv
350.753 36.1333 351.658 31.438 351.658 30.3203 cv
cp
.278431 .0745098 .00784314 rgb
f
362.237 30.3203 mo
362.237 29.2021 361.332 28.2959 360.215 28.2959 cv
359.096 28.2959 358.189 29.2021 358.189 30.3203 cv
358.189 31.438 359.096 36.1333 360.215 36.1333 cv
361.332 36.1333 362.237 31.438 362.237 30.3203 cv
cp
f
359.93 29.7432 mo
360.223 29.3726 360.302 28.9448 360.104 28.7876 cv
359.906 28.6318 359.508 28.8057 359.216 29.1768 cv
358.921 29.5469 358.845 29.9746 359.041 30.1309 cv
359.239 30.2881 359.638 30.1133 359.93 29.7432 cv
cp
.992157 .866667 .521569 rgb
f
349.294 29.7432 mo
349.588 29.3726 349.666 28.9448 349.468 28.7876 cv
349.271 28.6318 348.872 28.8057 348.577 29.1768 cv
348.285 29.5469 348.206 29.9746 348.404 30.1309 cv
348.602 30.2881 348.999 30.1133 349.294 29.7432 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Aksana) ()
%%Title: (1505.i040.012.P.m005.c26.zodiac icon set.eps)
%%CreationDate: 5/27/2015 11:43 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",Kl!"hEf'iQbT'-"^EBmAEp,i=)JIk4H&TAdF,Rm-sR:5ROq=+CNGQ$*mlL#o+c/*c0E,s8fkJ^&9Ffh@g>c[&Melr#a[FRHH
%C]1Z*Z^fgF*BH4$[W7;/p[<UVbrr2r7bsb0H,C(Rbd?u=iF0<c%g"Q&1\i0#q8$O@dVhOuhG0tKM7VO9<k[&J0'1Z6QCGE$j^\.`
%SGNlJl`EBmC\;`0Pb'=?\Hes74Y!j#NH-]8jUE9<&,>*B?$_AD^u%9B+)EfJBJ8ZDBQ(79VU+XIY,,JsU\pb[:V5"oXkW0+HaQoG
%b<8NNCjE>Y?IUUN&%'tecD:KaduV%KFB%\[Hh,He15l.uh905`#J!oQN-+kEO'ZAfIgkulq%oaE)#DRQM>s2A)uU.o><+e.aEr)R
%MKjn&'0IN&\Fd,(*\^)jJ<>-6,VZ_M2;7_D0+nUqDViVib5Y'56Vf$InAIcQb'T^GbhtL!54iluV$>-Ts&S_);Fc5dU-Fub:SVqf
%l6qN*3k`5\Iu&-*MbP.*Gdh%@3cCIp*hc=E$AB<M>1KQHTI,_dl=D;\$<$k12.ODV3KAF(VQG.dZrkHSLApRO^Th)D)1hBQoo`DD
%W4Cf3b8XaZ$o;gKJOLNQ5CD)-)$HVqk=j()Ee,0Cg4_Q9oM[$c0>M=)9>AFN[<@?X?Zg,([H>nH5_Sh^;fV/9VcHM/eu)Tjs"HS2
%+SFVgs&X',OO3;^9aukl*N["HZ+c?MZ%lD!1oorE#,oqg5M(_URrf_:X^h$>ndk_ZQKYdm/3In@Z:,;RRTT@Bs*?-/"U@-^55i"E
%C%^4bc(ik)s#"/^[LT(fgSiP9Fbmc^goJ?]oT+@0Gs7P)rD'miCXBiV3Vd]tIIE=&$-l;1P@*QWr[7[%,Q-FMcdS:.nW>@FUDqHB
%U3`l2=u[QP2ljK5j\@n\i]HgRZeW[m&+SB.[6NlA18-7%4W2GM/?qs>OMh\"S=s"h0Hp*fVH9%0-R<Z+B!iS]0)lpF]F8CTEpmZ$
%YZ7lL)tAOEOneC(]B_nVk,Y@qZd\B7jRuf[H@cEjTRKLhh!)p:'D%B3nl[W=+"):&ol@`P478?f-ah*"l_!]or1\8(c,<$c`qihV
%*;h77g#s*5oH)7F)q>i5^N5G.Klcte/GCVA,[LsBj\@D=j=Gnq8$s].h:u>Oer(/e[2No7Dn3QFEZ;o`=\?q4eo_Ko6)572io6f7
%_)15n]sjJA]Chij+3&fnQKV]E?YmJ&S^)^$CDEf3Ep)U35:u'\s(^&Qo]%,=WDbnFpEGc&$T,-8l'-td<).3$C+!ce$nM'kMhH*J
%,Q=V8'<orHo;5s?h9.t:UICZmK9Q9_fDB=6T=&G&jIBr/E^OHd#1U;>M$E)fWZ@`(1-hT^NXM@._#2CVa3X:,:tRfWeCuA4"7pP0
%C=N`s@+$=Lj0&kFr&$YL>&9J$4P7h#3b$d]^.AO]#%fN!"(fnk@^"ZL,_)muM(Zi/4EW)Vil/qBd,gpBU+X"N)1^*J`s#5E[F_IA
%0lT-D?(M934q$fhbT7R>f&]^cqi+[B?MTXU5c#ih9lT5(pN!JJbMB,HM15*]jCM2(6h<)@S+@aV07r,&+W9ZS-8\V)^R,L@+jjVs
%hl0#5iiH\;e]fYV\iK"!YLYi)\.-;`N=V+l0qAB@eW)\%nsM8KP"ZnfH!s4EbH>!&j78[__8aXZ)gGJDNcN<!=)R#JRCR?JE93UX
%.lVP2VSn`]lBKEcXhS]&\he!e9OMJXgi!<JK;b;,B.cP&Ds#6fI(>Xu2tQ-C^>.UfJ"5icb@L`eC4*Q\l[!esCXF5$IIEt:D>e`3
%dW=+*P231.7Xmp-5Ps]s5k/J@T=_dO1&@ZbKrCEPK(S\T_0&lKT;S[fTaNeS.q#^=mriL.k1]XX9t&lJJ_d>/`-QQbE]jd==[ZY?
%N015Ya(+,*=6o(K)tbgC%9%Z*?SQ@qH-5HW*`:0`i>WAYSt,8Y%-X+Oodm@62/c_^QQaW1m<=T5Q"[@!c3DY2oU/8F7pquJrDim1
%F#/g7gC0)EJF;%4Sb6$igFG4h5W/DZf\eQk"1[l&]@DkC"CUfAPWBfFFOC-#*(U%NJ<^(md<@FRJMH+irM#bfMI5ZOs"57#Vc@O+
%[^--k(4P.!p=)sq<d)A[)EjK'cbum2.n2MtVfMp'c"b_io3<lj0kh7CK3C5tc^7?="-^aD>$55m0*!a-K/:mZo4\u6FZN![Pm%@R
%$Ola=ouQetP$^Mm:V9FRGA=gT7b#UJR&SMnoidE[_9\A+5=5@Fl.2n'HESM``_"Mn;<Kn?-E#;GaaVU>-TuqE/nS*I^WMQlB2q.Y
%5r83aT1n0:GW`47Fg0_;e^liZoUcO`Y/r?eEAPsPG&LmemqnHf%/6DVj_Coi"XA?QG^[j&;O(7aTm,?No?8s$Anl@l=d\O_P('K5
%Dl_>N6&WGcMKT'WOR"44B#8=ML"CIY&")IUcV/T^G<DO6:_0&[in/q-XMYJBQK^Ee^\FhN3"Pcu=2A4\Mt*2pCZ<Zd(5$U1cMFr_
%gRk1hH4'-7B4/K(I^af9:Y)m$SgeSSE*dBP=s.@hShT;R$3)M:B*tY.%Pt?>e>UYD^eB-eAiE)_B)SO\Ce"*2W6X;>aHF.QH":1L
%'f%$?Y7BIR,@f:_`EK`V039?F8**1M4d@Lp;5WG1UtV]_dn.8hPT0GI*;K,GJGIMBp8OWCd1UHY<GdJXg@XU-?ebs.S2*i'[WR^o
%Qu)SaM&);(3jN!;S]ZC').EcuF6YO]o;b[cUn+rhN!33O[<au?`D1i/"O03X?7Uq.e/BD;jnbV2TBB?3K;YePmUSFl1378BaT,'n
%9;`eu2)\Yr!uQg@E@0M;k"W(+3pO'j=UmPi)]'Le=u.X@\>i@Sf.6XqBEj!MWT+&['=!UE3E5*T[>+-;Aq2A!3\IA"X_&?1.[>IX
%ImIMd!)TZ:irU``'pf,#^\fC1EB/])o>g-!Paf'M-Ftc+XrUc"`b^RLX:f(g*43k2W^Or1bd<$VAsFd.'VEXg=VH;9B9alD;MgR5
%8(eTBUAT5L)*"m6CKa]`Ph2X?0J02u(?L$8lV'Sr9'&+aU1=::<f8`67JUk8Roq>cK_[Zq'VJ^W>*M\nET1!cFfImP!mJ#ReC.`^
%P)0s<IQFWI/P>+ceY6RTAm.t.YKYEg@nfZE>$aL0N0BRVh)m>hL"D7re(8SLH3j%FG;7A`>c[jXKrotOpJX*I`=\hYe6c?&Iaca0
%kINOkrnUk0`[Y)oen&G?f<-=L]U<$JJ:a1oS&r(+>al)2[aCe2RCP43f-XY%7:=Q3<1?IeX%B^eYr4DhAl<ImeZOg094rnf`fT)L
%1mDN9_*:Z9:/q@7G)WSQN;V?`b(,)s0q',X!M4:jS=?4&:Oq<H<5Y&k4"cGMKYpRPYGf060E400`O>lg!mp;g65bm7M&NL;YQ%C&
%o9NRd)BI@skC7_tTWG17Q$^JD4[W+g`s(0Sm-.tkl%Us/lLNg8V;"I$Pfpn22+*ch6hrlQ?"PqldS;4N&UQNZfeRTF9E/egkeG=5
%2uVWFqB>T[Y(_h\"1_%EQUrumY1JF9rsOkTGj9?+I;""CMYON/o=nDI5KVuRoYZ1?m*Wc/.6eX1^E@eYSf8cR7_@1sfC`/D4?<'F
%jk2Ts_7GA=.]#Cb@,L3o&[O;K0PP?0C'GO#b:*n9i/H'*c2^3Ia`TX6_3G1Yo?+<B@'HOt<_\Eob\ZK=]P]9EC;#g#eB=TOVcH=e
%VWNfg6:jp^,3"KeS_`q-h=R2uIt(]%pD:="S)o,I<UA$%^U*k,/H7fTs2m64+2aK-IqST7s+9p"%'X:oB=&ps3St,P"\j5LCR4R_
%ja:]$h^dHX=]oMn@k72&g#HPIT2E;YqX\aSlF#Z9*_fb<T^cUuk_:/rRlcbKRA_,Hot/UtX%BHi1Q,o`H"(Sj6O$EEmi7I\S!>K/
%VbahhRrhB*puE>BV9BKVpD[SJ#h^aq2D17Qqs<]$68ja`bp$\N*14Q-TDgO4paaP.SLA5*PEct:PO>Fk\!I&m[H^V-\J%u0>Ffg+
%gq<>3IPq[q'k@S_QN'm!oR#bLIW0fRouqDqTpGeMW)!B8(dC[<*HRUF=C[D8)q&8u[4+Oa1q&ZORnC+:@<A%b/$n0O6jFgFmAN?@
%8a!S=*#MV"5R+AiOC'0*2u:T`+"ObRNPF1Xc!C^ljH3U'AJTNY"^YelQW`6X(3l5N?=nbT9/RI$//!2);&G>.bQ9F2m"*F`038Im
%N)+n-T/rU$#pAUaLM*V386>B@-U&_oh/:_K]5A:s4_-BEaY_hu-F,H6Qo1A#$lC>)fgHSm-GA*NFo1_up;4D_f8J7hdmUn#gF:b"
%NOR5uirfasR<"f+,A#;gj)sS(P[.$Y]O&7F#<^Ipj6!mT#H$h;Ja!M`STS;.F^H%'RhiFBp.ic\et9:0eGQL,.Cripnh]phRbc,Y
%(mA@mYHqm::h2H$QV)PO\6(6h%-L4-!>tg)o]%[rd]7M4e;\c6%@sGd;'\rlR=E10r\+*JIttVedi"N0b5B79aRg$Tk+PM%LLrTe
%guTOPB<@W%'MZgkQbG9C/ARcDfufuIM;nYMd<%0pPJnR_UH+]p!3S\]ibTm^@c!-m\t-epro`8XhCO[A76\uGa"`0]&BDin_^pg&
%Z(CBjSbZD.@i!+P1s4&%(pc3APf,<7B(jB8$@!oSadi0>)3Asi.9CiWqTDnk97=62G:@"\ji7F#jVM"iN!G.I@@jI_CX[+eokM1_
%H(iObmht`jC\:A&W!?pq$b.`^H^aoQ.lq9lA:c9oH!ETPq$`g?%a3\,e;8YHULkg1)`fg*P)n1q_fMmjB8qYcg!(k9iI`Jj<Yh7]
%)BT[FY[,\"l'@Q&c6%14N@[DHVi;(I=gOo,Z_[+L9?L]RrR,"DisYikV/=TJ$N08b4,<bqiHdP;Jsi^e8bZ+q9i!BpA`2S%3(()T
%]AtgWP\0I^Y>`8=-=E^Ji%#0hP@*aCkdQ39Y%1=,1d2:EAd)PjT2=`WAsQ.q3WT6*@e%nZMpG491khWJj1c4b+/aNJjh=tX&M`n>
%B&;=eS""\EP6&nORi@\QQU.+e]XaFh2\CZ3)O?0'r42(^k;"m1QpQ9T"&q(#DW]6hgpo^qB("HuS]g3t\_"rob66&=\9!Sjol0-O
%[9D,@:-"5/RWra')bjrDh":JbfBp`o),09t6\b+mW>RA9:W[8-VS97PX?YjKYJ_.KPo(`bf11)aRKaYi#tEOgk*AdT0-/WeQ.+ib
%%(4gN9!.i/.8so^g\Y."&uAY#`l3->^UQB`k9qQ;drLC>@(`I$79Kq:*OX2mGa*8akVP.pXiijff<:NWS*ob,Ac>0J?DX16&/^ct
%/k5a0,h)G[])!QEi^Ha/%G^FTj+8ode^RYgf3:uK$@<QGDYT'.6'n;+Vq^Y[Pq,^4VAu*iF(#"[(n&-74#M=5q\OI[H(u&%c>`L"
%s/@mPR<!lKb]+6GbKt)SWme^<L:^B*`s!*VTJ?*"q-E,]Z,YL04'P$piHK0mKtt,pnPa/H?$EnnAf4:LAT4J!oM1BgOMTT#J7$.H
%*dqR8n7>FZHFFiC[9Lo>8cU3!b`&9a;=kfeU7"aJb;Z`)cL=dP79BD)r.OCg=e5,:8+;#?&Msl=s$fZLoXm1u@URWofIMUF5!:R&
%56-<lfe?qK>c2(r>?P>nY7o:`%/.2Ran;WOboXorI(`YMe9WL%.+?3_VFj)(CV?9Zm9CHJVApscTZr_]A/HbZXrOd`0^6_7]:>=7
%]m)sVGbuE-TBH2dFlP;JOCoXSS5c9HpB^TZTuV*-`Dglr2=0:C]tPtFBtKUDbV<Jj^-pTDRr>VsZ]d#`)eE2*6XPJFOPsfs;#`QA
%YB],KB_ft*LJ1L6#!"p<8o'W^mTr_Q2V"C)^"%CJd92rT0lan.U[-Xnj7hGe)s8*-qApN4)2t8GDj%AM*P,eZ^*qH4^j5T[\dpmJ
%dm(fG-E^b.>YA+eJn3!2/$MAj!E@eQD69e@7A=<"BJ]0&_9DJdkGbhddtGk_RrI(VdF9,bf1E6!fA7T<SPlRG`q[TM;7K[kbX1-b
%Le_-a$mC'(pheUOj1t"999W8g=kT?<0lihP/FVb\gi[89bo*"1S'B1C0?i"e=rbC3%^#s'GKS1u;3ija9H_Ygc)R1V,ONWt6"Y\/
%EH%G0BtTc(/G*otFh$M7:p82-SA37NZP(I=;e#QlG&YE]+O(Y09]KNU=cGY#`+(ES%UQT441#@h(g9o!CXI.(RJu=*s*EAtgWtQD
%>G9O#6`]K)1!9*"ld$pX$f!N;M)JP7oCdlGH:e!HB%j:Cg@ZkcAE7(UIrtVurq!j_O^7gU]PAIH'B\Kh1N<9mIi,m=P!PKH*8</Q
%qSP.<cQQ(2Dn&)@3OI$-!Z'/%4R[dZ?dIr>mkj`Nc89PpEhC&_\a$roa'DN$hH?\WET&Z,RmqB'e>.W-**YMdHIV7L!nPX?_\!`?
%:Hj3`nI,Nh32YYZJ1#G*_f4++k<J@^!o71<A!r!.5k4h<5ipo7s8LVFjXdd`^Z0cClK>p?^+s=abE^O`Z-`=l_DhGf"9%ui,L\?r
%U-!,s/n9iGNTIST,6Ma?8hc\(2`[C'(]V#>ZZ4WtA#]Kp5'95fkIj/u]%F%T)e>ZZb<828gqc?@J5^uJ%d4HB81Bo^IQh+De)XV=
%s0n<i7;k1^Y0J%mW#+V,k3k.=#Cht"h;q:p,#-&fQTCQ)DRtK#S9e-la]$E8V0]1_)I;(SLNfJj/kcCuLUAHm_0(%f-I!j.fo(/0
%)4CtaVPjGdVYK=F\^9u9433/6)PS^L:.?!kO.?lc/ejWNa=\5^G;:!VE)uhk?E5d]ipX@^kYekulOc1Bc=(lkrGS3q]uqpdrnI=\
%?:VPQo]HAHpCp0hDS9)]5%<;%r-Vo*:@@(Y<3BR.G,>f8nj\d<lAcrKg\13(C&+*IQgGHu]T^i8G/k-OU)hs5e*u]s+hY1PR<S1B
%6K#-hGe3=>:gI8^/:3`qW(?cd[9=B_F4fc?V6M$]oj2cUa-VPuGr)3+9oMrcdScg>r:SpgYUW2s9uK46;6O4NF6aWY-N(oR\Q)Wa
%P>"**Ra"4i;;J=_%a4P$W84Y$Fj8k"JY@R"X%-$0(D?@WlK*X_n$h$6rs1MYs#P1XD,8JrQ`JYI%68]nEqa\N1j7WUhXJ0u]r',5
%D&<VjeTNOJ'rMtM[-F1b.tt*1U#0YIG0A]Je>`Bo)IBkVAXYW=]%h"`I/?sZQTOWBqX'4(f".u0\JOAKpgan_FEX$eQeP@bf<$q,
%oqYtOO\2"h6P@":mbl5?]s^t<l2QTp3#WIRS_deUgo9G!-Mg,AbHZY?-flo5>tgVYk8niAR!gWYgkeB@T'P+uq,>Q1*\O"QhSZ1R
%P<G;)*SBm]*Get62ub:MpBL,T,3;QIl:.=/U>14i="h$[XnBhl[<etL1EiSuO=&!K9_(%:mG)lqH/(%p8%G0k46De':G8GWXl%4e
%7`69p("SBUmoet@LbX3QPIQ9ie'"T)/Z'JZ1k>TMlCPqQbj:R?:\n`MO1acPg;M7&4>^u>EmLYa<_a$,V1-+\p\Hf55]kAV6\c->
%:_;QqfDRJOQeRQ"M!CFkJp9dIZqNP*iUB@E8W8,6;J5$n?:nn%58dpB?uGgCHF]dfO6'uWQD8km]4V]2855n$?EZ5]>dr=!S]6Q>
%\7BcDG\,rXRb#:raXk!Gg8^_p$AZ"d?;uDXmLbbo>Es4LPje0rZYb;=2SCs4C_[3;VLRKY6]>*=.Bh@U3(ZbZ5<36V+Es2i(B5L,
%cuC9V;Wc``(F$8hcW'4kW7+4Ri%d&elErO@BLFo\U(_rKpe&1ug3BIEWCGDo&=Rt@ZIKol>uP:'G$\"n@]PmlFBU]Q(DiX`6(W^L
%!OENVCl&?e"3N-s"2]0aiU-]!,BI3@2VU<[.0la;-et)d,0uBMs7!.PDf(kh"*7fY;_*bSgXt2k!k'f[13CX,)=]#:01X[Q]Q5bR
%P;8k+X`sl%LUh"I3<H`pP;ulJVds8u"P4.tBAqhDemZ9eC57b&j5GuWbepL)p%fu`\u2t0+TZnXT^L$L*>7Y.DM0Tb/t#?.)5bf;
%WB34</+fl-URt+HZBR*LU7\h'\!fgh>Y=iuL1on3(KMH"=tQa3LIM0g,VAC5NLq#\0/^)d41Q&RLUCH`N!BR;F=bG\o@q<Fe,1BM
%HL'cC092qgT?a"b.!JFu,P065EH(`&2^7q3=sT4DWNq;ckR:dRQiLjDk)<AaHhDbdem_h'BKCKG9NUg`NmIrNgXQLBk'Ai\0&"iK
%=-Z0A1@m&[[bDf[mik0K,kYJ\$\`KT[a(ZlbtSH9!lrN?kKY%QO.FN_1oo1MWKOHKOd0cqYLUq*:RU$1D;jL1b5;:SS0ndka^*.3
%rlc*=A.Nk/@5U1)*)Jkpn#-X>n,-=T,>K"iWVb;6/N5e1<(p[<qh(4@LhbGA*B2=8.*n-HLFUYliL2m8F]>D3=XKHH,,?h+nUpHN
%"hEL32\Lc=]IB+HPK;TJ>i6ec0JunBLKr;L_;n?Khs/_4TdUEYfe[7^O\KlElMN#dY+.M3<W"-e>@)]I^R,,R,b9*9NH;#f4hl6L
%9.0^Y$)HBL]3b;YJZ+`'Q"KbW?D^:WEi.<*O`R0@K%8'3%-UM$0*6[s<Rc[(FJ27FZn=tJ/nA@]-DESE0J8_c*8dgiOs?4#giJ`7
%8UD;M6aGnW%=Hj)8uL4RC^t:%)Au)4c0M/4n1K,B]\^PHVgB!V#7ZM_out5<?5fui-Dsj<"q)ieP74d]SRe+XhT8p`kc!1X=6l2D
%5FL$h*4;4OME]8Mp(-1>BqIhr/qKK[B$N5#\n$6+<5+1Ph0_">/gE,mnLV14AAr^Fi?:l?e^M0A[CV4fat\EZb;l$D4XlSQ&m^/B
%b_g_&5r<;*#sQX>DePShQL+XPSKEfO,VeSXBq5jJT#5qg9g(\`"ZU:l;NGIDVTtb]&[+j)P/=j+XU);!#CZDhB"$EYM^/eYk[$Z+
%Sl+lfMbOUCG_lSjhIed"`o(Q$rFY.8As#Y7+qc]UffS6)j^p<oFBgNe;X]/Vb`j*8J!8d5kMAX_\b-`KiRQ`Hq7V!UG!=g,rF)8[
%V85Mn>CV9CF[=?t%>GVX(lOm%[<HA87J34MEthW/%>;rVoRY)m7&W"*jXQ4s>e+!;U$rGBht#8T69^*`4N1b.Of&E@-)$k[^J#]l
%n2?8`iUD#As4eb0E`VU@#\S"CQ'1,nL#Ed@RcQ=\=F9-oU)2m$f%Teq0GI-i/5gN>\YqA]leNTgQ@9f(dB'\)4O'R-4O#\RKkfq8
%BO*0gGTfbX<kB_&^;3q<ZdrRQQ2Hl,.f+U]ihsV,WDq3][@.;qYd_?S't?[6VTRLGk+!g&mX0>bo'Xo]jmr;&BD.ltMefAac,RlR
%EV%2VdZ&tV]BckF^3eU]o5qm^[C#dBoC34OajTnG].[2HrJFt9Y[.HRVW6GeN,J04nT_m[]t4,!It)TPU"s#A5.;T]CK?e2DfkWQ
%B>(_5Vm!R2=.ErB^%UZ0V3oTd4W\n#G4bsNcnC^IQMcf5^#Jc>CX0u>KgMQBh'MXb:*)OkDY6XkkOuNqn+F<]kV^=(j4WCZX53Ke
%,QI/s:S/$llhS$Q^GS/ml-&A7C$Eh+;E*KX:gBCRQf^6-8+[_>=6\JUX+'U&b<(3U^06$$FL65>><hXBRKFE&G,JFs[stK^4Lt>a
%(8=NIf=rAVD:)^7IMB8k>;t+KKC?8WH],A%ZAJ>;C7efGI\2*dfr2EakLWM"KB8B8S:0S:g<51g%p%<N^+$0SrVMZ55.bsC>cEr`
%nQ5+o`mOL:]\51`QMjSGp:$mPf4WXAqV7:HMk(*Fqh=FN4$N_\^")4W-T8ZX>CQH\[Eu#1D*3(8@el_Tq#%)Qq[^;/G+hjf1*<#=
%RIQH*ij8&W_OQ*7o&&+iFfDhKYY7GC?Taca>_ptrr_>ggpoloj]"YRmleTQIki2S8EU/g4l`n4]qYFU]D=uA@Fa33[YPYgi7j'tg
%mb\(K5'cV0f1hq'n_34jDc&7QgZl4UI_#-GpoqDOVf^t8`suG9iJ4VL$;[AI(l(&Z*<+!2a/'ODf?1^bk;%O8@H3iYAppnlLkFS(
%%j!sl=KmZYNZY6ShE>%FY'tlrQ)PYiR+?Vlk3CRFXL2^2(;;%u0]sPF@TMRZR!W>FGeiMq7boGPpX/kE.I7kc5:@R9I/[WN>eYQ3
%br^=EHKAl2i,N3*Us^d[goe:<lruAMT\t=qE/Pd;Ib]2Jm7BO^Otc>)[sgJ7<X\3gc;RHE&$=j=hF<c-9'_f34a;?iq41=g/(88l
%%a5/rf:;T]8unN.aW"mW`OdKkV803U4JLd4Ka2CqnEVbd#=2.\?DC,KMl#Vpb7>Zek=`e*\RmsFQfroWNLDEjfK3oO0(8OP(A=Bn
%qP2[_U1Oc*RelJ72__ZNRJ%k4.h&2Q^DfY=q)dtjlR1QWa,NGrjaJrLF;BgKkL"=_'>[4uNpY*._)%:#DIr?B#tO]7^:<jl0.SIo
%<"8PM1nGLiI9h1s>!I<K)!:G-C2(B8pqW'b$p&4-e\+KAP/Y,kp7m[a:\Scj)VP>-L@u4m.W1j'7J*b7.hFVIEO>A@27h](Gnp0k
%Tsr^hGo28HQCX@03*G)^mqf\gXa)HY(I.:hpMOh2:#K38QL6Tn9^gg?PJ)51kh4!hqQ7f18Z(25leM44c/(ao;:td>XSB$nBYG`"
%*8Q&.(%u"AN`Y-+Dj<s7_<^jfR[",t`oe0`m>ZhN9<30T>C'(umtVjIdiWf+)u-)Ub9EhPI(HpaZLZE!_J[&85<\IXq'h0;]8jXQ
%E^*oUraE!%Y=V<-4lKdkhnSbtIJ_(!3M8_,h^KT]mX?0Q$+m%^_7^d8$j[0tAjf/44WO;uZN)>B%VVH`j7c-IDRMG=p+)10Og!Zi
%&V#<-_;e%Wc+b%f(06pj[G'prJ@g@]qo.aET.ZF12V`ZW.mnB*^FAdK?`_PTeXm_)d-FVN;#T<DmCoq'p@+cjoCU#)H2.&,_7k!N
%p4d_Yp=FG.F+&BMIm#,R2]ipbiR/B\@=J/H4SG.K1\d&*jY?[S%2*]PTB(KJHe[+er;)3kO5I1%Yr,[aYd.C%h8SBVFmuZLJLN+2
%d$TlV@f3Adb^,[.,d5#l#M3(;\,SF:@[X-%4$1)&h?9LFKaP+'5UnHt><pP!`g1nXj>FTi0UAs-Zeik)e4@K?H\2UcLR.H\"7d_R
%VG,"t"Hgshjju4"p)'XrCKAm1,SYWR+al-[@u(ciRNZ.]6bld/3!7$r)T9]AL+E'I0,;6J1YDoEArr[HcXONpaWd5:^LF_6XiWdB
%Vk(pN)0c7I[puo\IMq9Q"jOUQH6f`c$.9Z9PX(5MYKk#Nd#k0V`+XNT"DNg\V85$\$uT]@H'Wq#HE3o;EWB$c1I0[7$1m^u+JWnq
%O]d^R\.ac4@9!J*M/gZ'AjpoY',ND5@i[*#>fM[d5"ceLE:FgZ)Da-C'[g%A2t/GD]th;TMZ4;%`3B*pg\_Y?oC'+cKOLQWfKD9E
%:'TnQp5o8%m([u*/?PB'.D9>7DY&D*im)m"Ml$H"DP_I%gV:M7D!]r%YjqGc;m"diDl7E1Pbg)#7]#:!U#@qd;+"O_6-=I/6ZQk3
%YBb?6-G9*;>^+@urjZ5`fVc3NZ'R-MdK=Y7kVYZlRGi'8/fZmjk>-Odl.<!W7"sIZhODAgDl^/5@/Jp\i32h%C,jhr50**)`'';C
%Cjk%;;0]L_[_nDjZFUqV\03dGf%D1I.1=($Y.WF>pn+2G(8#a;IlhFsK)>2`<oNkdf<Ct!hVQJIDK]AU*G#n%HY]G"5NcP.,(Hk5
%ENrle-AQarYaY$qq%>hD*kh"04fn$u,*R?5a1<,J[WV2j`ST%RXqJDpm4BWC$K/i7Ip[G#.XlkkY[74p4^:0cbT2o3Hf$*U4T=L?
%]@@[?\!WOWb/2u8In>q-6`\b?QfI&\NroWJMoUbMT#_jWgQ0+3!VbmIqT4@#lORcl+"\pf%AIUQ<B2Anc^,8_))<d<LRk>:!d^nq
%$W2XqiI/\?WL]RBF52$lm%0`"SYpTi*f54tkSp>+)P0FEf*S8<K@75]a'iuZK7?9qqhAZaS'HrNF^O%9pNai8;4P(g?i9;6n`\5M
%9p45,U33ZN+\.[N=f@!MK\4nA4/_840>I/PbPbYANFr3[2&A.PblTC'[i^&+r6"`>[F[L@"O2_A9,.`rJ!_b!I_#3]<4l;_59rAK
%\mtN5rPKXcqtXY^nYCqm'@t3&ct<7;o8TROO#IRZ1k0qq',gDff1o[8+N&]l-onq5Lrt*N41--c8:H?s#0'QK;)b.H?39(-PILmg
%_DC'JX'_t;W0ca9gs3Z`nDnH^LOR.T^Uj@@_bG/+:MpRnri333=oD+&H.9*"hqSL*%SVOGo6i+jiuRY#OD.Kc\p^GtpmOT%^#j*u
%f%BG/*43u.e`A`6o;SCOjjn?&+8'il(\ZaN5L:@8l:1%0W_M5n\erWUiD9d=C%YBikWHR6j/MqP(oLHYG`;$@+QUKhfs&-+S`6=V
%m9P$s;`hfM4pFB@md8Mj91ATMp#,@q0D@u'bRb4SXh1,b`bX<6-]CsMk-=Z^?d.t>(KZr0IQrg7f"Q@7e6H)&6t4!Op5`7Vq!e7Q
%W^c7/ki#,*oc$`]<P.!:5#UD4h'3`)hcag.H472>@#hmAemA%:O+crWm`'nVhGHn!-/8`[no!@]&ZdUuqb^Q]H?shK](E_$?:s:f
%\G5#+im?'3.gmH3Vn@7HT<"s24Lt's$ISA'E\V=Dg1D;A]=%%]_O+>N^Am2)np^UUI=%SChile6#=e;XnS#[n!:e&qlUASHXqj3<
%<-IR$L9)d<brhRZ-0Z?)oXbW@^+J\iYMq[!Mkf$6R:#>4LAf!7m_^\N[BICY;>o=!cmE>sLjj[BOSEGb5++!phinV::EC"\eU%.g
%6'ORIZ23KP,t`Ud^&!H@Y^N$#T>"T-@mjq]C&>Ah/=,F&iOtrBberg".p4)t\_-Pt`O1$03$P4[rTHCNHM(]h\K.-6^o;TQ)k-$s
%Y?UbIS]+NnWn#!/UJj?/(6.hDh9pW1SJLpWATOspg^4I*iC@a-l.,)\'.keP7X0cr)ilK;5LJF=^*r@9YPoAMOB^Q6g7oJ?eYU]!
%fmD_lhctZArq8p"2L8Qapa`bpVrC`gGA#0GBD"`ms7OqP;C9ELdepF!gYpW-V4KH('d<1eDU6#XkI1gh`T(00*.OrY?RI(tG!B,%
%bX&=R'Xb`'T2tC9SiZq9YA>1Br7E&Ib@PV.rghejV1Vurp'AM?T/XK5mo;>`3Ju80hT"O.rHW_6dYeA(Vo&H4SJqY^o40@XG?Y6Y
%'Q7fG8Cmh=Hk)K*]iA5hHm.6aFUQU5;K6.&NPg^\hse"WZ!["<h;clX[alQTf8OdK5VJA\9ANfg0'pVj)u44FDkEQ&XupSH9sdr>
%)L'J/,?d1BgO$BkI(9"7l(cSMh+Y%&qeol-q>=lSc0<ePE_eSskl^.O[\+_7+[AX"]CmiI+?kP%)G=[]j(7K3LRhc1q$46pHL%?h
%0<<',,?u),GgP=08a*oM4\hfXLud-r'/t&Ej4oEGhZkf=hht"`Z[202IVg^mrmk4$($a&5*((`U)R'2SJkIcK++>h+J%kJMCcLbR
%hI:3:4IRoT'm=M1WkOrM7Blg=HW2IW?M!=5DK2^^T,SA2oppG_SM.SdXSLlIXd]T<%@s;[L&TAQd]1\V+Mp&J9/l8lR,mGE_*anb
%-cl9VkOD-*>1^JQInq%\J)C:+dpK.s6Rb-OLZQt^<hg4tI"$@A<8;c(=.3nd,\Pt&a/epf7jg<]auZ93'"a&8JH^Plep;oHqfHsl
%0n8ZYf3m1#9a$kKe#X"*oW[.4/NE?;D`6aiLL20&b[Gl:h1^n`"?OAW+3oA\hY*C\mqDaF29`\YWc5&3(Kr2im\a?kMiK?0J*[kU
%GQ?a5r?ol5J6l9]]XR]^F)LSB5YQ7Q:JL7oQbF"=XPRRdKN"FX6[PjeMYU=$.k0V/ln,S:p[9\YA0![OjCt^H3G5lBKpB+sO68ZQ
%PD1q8X*A*=Q5=EcIf:anV,_fQH;p>_^)<dsbq/bgo.Bl:0C0^fO2Ra!]UQrWNLRcYPQA2g[/D45Sr(2?f=\Fkb5Utt=$),LrYoWP
%_76&q<hn4l4grq7/_7V`[hj,Eq,Y>4V%j-EemDCcDk0UDD.j&\lX=AbYk<,.P'QqKhL4'*J(qQFep)-]V6aZ,9A(Rd?G7e-f2?_k
%6`[$ni!?D\0Ll@9aJ\c^O?(&J102gS9YYf>^+\=,\"bgY^IG@;3TMX@SYn=,!tqO-NV_B'mlRShXm54Yn_*hf$2N(&aZL='jT\p_
%)ne=;2tX/C+h`2V?+YNNEN:YGcE/S+DkZ[srW29-9#F=1k@aabZ1VgPAa!60BZP"hln?'MHIsm!qeA"(Bm-#9s-RDs8'tL4)rSXB
%-K^99:S]MtcPMZ1Zu:6'kIjB^K6mOUi+m(7(QO=rh>@3"f*?ZD-p8EENIA!EPEFdf$dRS?XjDIir*^c$m.O825_e,rq>G(&hYWe]
%kKgm?-q5^oD^IjcO5QKpCAXr(P2u4%Ds?cASZIn4foWkMVb]qj]e>;?e[s6.?q/K&o:gntp)A0G>H]ZN"SBQbc-;<cro]9YrPH2+
%Z$WB,,fsL=VWCm\\4'pWZ>;3T;#PoDk5*2tPolj>c>%^j7CV.mN$`l-%l;um<n>Hl`V[&u'n=3ZLc.F<D/I379qJX\B7I)f>u`K[
%MtriuRV]84';Y#Co_6*`I97um$_6($9kMK&`F>fLGX36js5)Joo#d[^>DAG+-=OC8hleBG+<h]RU9AL<\bA^pZe;90'ou:f;bboZ
%V(f$upSP1LgA^4trc.B`m8sJ8CNijg2\s-/h4SD_7M=-\I$$>d>Q`Cqs1&*1GkaJVV.98pl/mbRp,<bSnM*'0q_<Y$AFU7go>T-0
%YOhVT'/GB8OMH>E@u^3sLK(D-o0%'CMYC_\qN-a(Rt]:\3D\N)leR9SZPuD()?uVb2SHRaNXDj28orbdda7"DA8k`:cH"sWnYl-B
%!=,(=%"'SI^D7rl]YE.G\%`]MJ%QRC/:`n8],R%7c*+saVtPRQ00EGk*A"j/)MTSFBRcd7UrioYqR1j#;S%c+H8)SfG_*<4=_Rct
%5"*N6X5]K"LKak[mmIj@4Y+9qOe?*tfmZZ(nVbiOc+29O7dN'r#PIM.^A.'2/N<XnHLLPsj`$p9AI7h,-Yg/2o+%^K!(1X8+@c@L
%?X<ZBfIuTpqZl2M<lkr'\6(Aj$;i8*SZH;H(RA-h^V!_@Rp5c%n]UG=$ZUa2qW^G])MsKF.NQI]$Gei4V/DOcCi6_G;Q'GP45jDi
%HWE6%p(or@Zo2eQY!"m]<m.tij*)Ntlr.-i?Sg;L2a6':\Tr//ntTmR?>QpiGAjS?2p#WEga$Ojc/C"dX`LB<Iufen^;4j%,.C1d
%<'*)>BrbS/o9Fo.-hhiQ%%^IILcWGE@d.:8;es$2h0k$g46>L9CZ#Q<BHaRNX1P!7T"C<&\9?7PG,+*iL<h@7ePk(")1A3"iLPgV
%II*j!*mF)F7,97mmR4VB8X*/_%!17'LVCIXgn,rk1Y45Y!A]n/3RI"35GtK7ZJ\uuM]\/R:#-%#T6o&KL$=*!o%_$t5?n(k]2"Eq
%R^oA#__8Y3=nK4/CZ]A+GqPFmObFdg3*r7L+Q[o$/6%IH282mmcIL,/geW$..C\()>"(JWFSh=:Cj<!`jI:23@e+.(5/L^"G252O
%2H9#)qTVqqp<K;JRlCO91TapHeCp6'kA-fVb2(pdkjWF@qD/5mV6<XrH(&/ZHj`*T0"=-bg;$FRZfYG3U^3_eJ!I?Q3fFAf,rd]%
%DC9XGc<6KXYh(Chkj%AS/_@TC[!a.WhE[9sZfYoel>c5rMSpO`RIb^+)+/ht<Nfg;oe(ZloO8;ojt5o$Ai5"5n03f':X]'u1U,?&
%e*o0BHW!YQ]^-uQIRZ2.s-Z_Jn&Rq7+CIFuJT]6O(H-?FL^3Fs_tE*9;2RCNd<$$T.ef\9PCDPr=g$;]-kY#'@R&DU.DqPt8]d@P
%:LB'nR'-P>&6kW:?7jS9m.Cl\ZBnb>hC_?f"Te7Q1O8hu4(N'%7-bBU902qodlD&RoH)!Ucb='M>EtCIWtCo9dBi:nAab.k)1#1c
%V0X+eF:Bo>c$\K^7,''=rF`0P\oq5gKhNME/s62rEf"G0=WpLc2)-5@6>rQ0:G%bkh3N37[C:3j]7ioUKu6r=61AW&8dqk\kb>\5
%'e5d*@C`jQrY`\4c,mmsB?Q0j+WWZr,Cj+#4FRkimJ^BCZ;i4AerFKbGE!#IGX7+^Mi[cYZ:7UFV>C++!aXd]hiP@FhrWG:fhL%P
%AOi&@CX.V>!3c@,A!,/T;OG?jcOgJ&p8ui&Uhj(/H'&@MfYX'.B<Tm2lr&t-nfp'2j]F1FV70e`8i7*QB7qAX@u#.#<o#bpjpLeX
%?A(hs(:$&B)ZAHTL5upmkS;0r/pC1n/>(lAV`qgNo];;tI!Z$`rr/JbILF=[q36r>^ANW`ou!;6"ZabKkoVNI[h&N;YBc_11[jG6
%S*[*f&8-.!I^<$"cWt-)ctm^sN<>XK-LRR^N?7"^4T*U#pOE2>?[_nQc!6sE^MoDr%*ukIIe(57\;nJ!rpe4ZQ_!7Ze+Ed'rijVn
%1BR4]V!Qtmo'F"t#A.j.0_<"eS%/_-Xh8-KDJmi4o7e"63I47\YYCSK#IL6[TFlS$a7=M9A%=n.64Z+Ph@(Eo<l5/k9U]RKH.V^P
%)PNeY^ri(*6%?D3K/G6+Nkf_,ON(tFi=bi)05l2>.AZ]?Y!XkLnm5^L4NB9QRic`dK*HMfkIo6>=Tjduq`_b*s*#/BHL0iXlHKt`
%/]2T,PS@A,.o_=eG$>()9bdE[r;0i0DZ3u1rB$\m]f#;M6#6aChXPG9L!@ug)o2M46U,LETeh3nbHUTPkm%MQ/L/?kY2^k]Zj^;O
%0#f6X'S[>\/]5fE%P`*Xc-Rb-6['*26')UO1Q>.UO6&GuK$Id)IiC<'aEOZRJLsZY)<lc^=h[Z959JXmiOM7)mn<Iu)D$81ap]lN
%p!qZi9\7ePRX$9&KJ6/gp\_hi6,U&93X91L4TWk6SfF*BRg">E]G5adAoiRIjMB1O_61_H[OZ0,#"38@]pW-PNYX>!l(CHsdq;jp
%kY.&XBU8`Eg^&^u1#grb_]r3TkX'n&Oc9T_)Wb\,cV)Xk.0@sA2@hBBaWXfKlr1n*2oPTLHEQ5s%W!NbE\bTiH(Stf#J"u&c?1Z]
%]'!7E)MsL41-/a=D_\-=qrl"jiQD%L]]31I(YaZU,o$6-AI82qO=O$3TXl>sE?*<eZ+r/4T&j(31bQ%NDNoaiGpN(RDW$5$PRW8X
%.8iE.ehTcqddmcVE@-@&'>ibIZ*]JsCDebPdmt&d,CpdnC!%%m#ocWsZC'a.JX91K,=Z&O&=/\3+*r*t&/HLAUZ`!#@_fHhDh,()
%:W%5db$#!dfOIZSPYJuW:_n]*Gm7u6#2_ApKX="0H=Mi>@Ar7,9No<<@682OVFdIQ94PDKQmpHm,k09Y*?h+'Xd]reoPUP-6NdQU
%Hq76F:Xb%b+3FqpRBDK&%Xgl0he&J"TP)q?khsp81?-B2!e<c8GgH_<>PoJfk_19i)/pK#M!u7$*Ld9R)ge:[MmuF\\*2Y@[hk->
%Duu@%@;&h,@X0rPTbbg.6;'E<65%@o*tm'EnQ.uMSHOUD^<)2^Np-dSqUI@<eG;"2#Bl3_K+"d>'W&92K5.Fo+:L5<OFe>pT'6_m
%L1arh1&g1q@N=u\3+Zf%@$!cKMIN`Z%n-A1Wfjed$kC>/@_sG!,cB@/!%lW@^62H/EK(Q;'U[no8bb$0[/qdAS&CN:D[T_'O>b#`
%`W0k=p._&Jk)5uVF+"_.J1?sU>9b,T3&<Z`B9S%I8`qSmD2h8U.jbQ+a'a!%#VHE,)Y/_QF@o7<h`W7`9gb_0!acG*#DJ4+CmkK]
%97d13JO.>%dBmRO:4QtK99TO8+c(2^d!XPGkjg-@:'/T14aIFE,W/!93rIk,Z]K#.oLnb<5[/9N<X>UP34rh^f"gsK1i1,+@W<\2
%+O"%7L^G;&_$2VXBuIH40L7].=Cgn0&r%/8;5_NkKcE0C?l1hW28f\Uke!ns1p9.WM6,8*1b<W7&.s6oJa_PZS=skVL<k?o[L%T(
%oNZ&J,O_VX=4.Afe'jW's/$>8n]B2jX-"=,JS`37&o/O#)_h/b)%e(0LhA1VM0Loe_dn]2I,>q_@4Qt#N;,Eb1=S.uk#hm='cM$Y
%Qn3o,c[h2:&R1Wa#&QGn`X`]uoL_ML*#a7LH,LLOUd6AIeS=j],F7M<C4r[1N/6/_8,,AZhrI(p7O)=8JWW4Yqr!*uj19ll*$R^q
%&%5Sf"$7f+b!p4L&<W7'65jP$E2J(&2l*`2hb9fl,W<'D'UB2>^^SSA#0FAGPKZj`7=$3b>^qk1&9bL]Gm">^9*^j/n!K/JWp_F;
%&$jq'CXU7I*I)SAPS(2seVN8%*[BHC)F0[`L<*J+,V_V*-7ZaPjFI+ir.G*6[\ORG$Ml`s+fH&>J]6p$&4b1pieE$/6OkOX>BCG(
%a^C]nH83C*-SNu)`2:T=aHP+.KnXf.p1"4l72iS%;,*80B0UA2[DHp\Kg5f46pngaV?N)NG1=*LehiZ[,AD#dHQC#377lM:rXP3O
%:Eb?GnN1+gZcA/DKIgo59JEh`)Dqpm9+2`1"Xt)ZBuIGrCC!f0<m14(1e)o_3<W`AGFB8Po//cU][di=Xsj[FDB!bVg?ck1&o"3K
%YUNqcNodN/@#/[=4;<\8ocP!;$Orr@aS?Gb#0c@'fKt9M1dh:P?%9W85rXR<L[S8J(9Qgl4H1&=KG=2TdEs*o(h#ZoZ_Fp[($K6?
%8)%KADo4-A+nZh&bF9W`I2/@uQ?!EY"_(g_-bs9H`Z]Q_$!HnT$F>Pt)*s?Xj"nio+MF!HLlhceqO(.g\JN]6I=]j(>S3YBe"@;2
%S9Ac;d_YL!cmJS0:-Tc\5iPfq")O-s(7[D+WZ[B^&r\;B8Etfn,XbC!6jIG)BuC_9/%>V"/]*1WlAWA>_o$Ph`e4Z#66Hcu<&o]D
%,.Y!+bYbf1@XM\0@_1ka'+a*C'Ts"J'2D*W)d]s_g1bqi&-B;2_DdjJ6^_Y9'>++<)5cm4?=e8Qd1%msD4ret@03b)UX9N@>[Z+G
%-A@bp?uW$J%1!sar+KnN->TabQpYn=&=Q=t9h-[O)m!rm[OmXM[c@,h[RW$O:;e(]D&P[N!>-I3D^XQdin?Yn#a(:$!tp\9jP^WT
%dn"C+93C58[Vh0r'N8,/R0FPMKG;-L%Ri]=4bjWC$*.-#&`4s)9pe]W6qW7\SNIa&Sq>$,R>R+lX;\sKk:ctV)Q*U&,hj.QoF/Zd
%B[AFA=7C$\JnN]@_dA;s1%6qQ.fH>_H\8^3EAsA@YTZ#58@%%1i/eJ6#'%`$F[NEKCgq_Qq7m<T#sh[>PkaMlNsIHo`MfjWQ%s"0
%bu*_OL'/Q_.;)2C1SiK&15s4>dn)NLAY0!1?ZQNC>Z6VqB#4qt$;4J2"+J<6/$;S51L],S3/Y`iO>UJ\bbU7lJj=aa&gZdW#q]%3
%Jd$%*o9Uoj#26iA`24,"?k&4W#uWj:Y*a?F-*\n/p,Yj!*K;CG,jLF%0hbsWLQ7=2\D3mf!gEWiI0V!_+#l/+"R+b@Igq?m!:n3_
%#sB"[-SEu\/lP*9N\]_<Xqf7mTjeJ:(bcplesb/g/hR['$63951R@'g117qq`=!.:*F[:tH0C4>Y4&SY<i3:$I1CRs_q?[ccP9&[
%?gRMr&9]<$`',f>&o2h2`!c/mMnfkU2/@g++3B!6;rn&l.3dZN+bQA)kQn\2M1`hQ.5G(C:XFoT1oJ64AE)9#gP4^'EH$J0EG\YP
%3%qYWStmSJ`h>CVS<.OIX7Oc:*NGp0)K6ZS3C?nmN[D1&+R"C//>"ZX6UQY7=pZnF7\RF>1M-iuOHC:J3'8HcKkh*(nLb#O>7u>i
%WO$0V8H=o#C/8:C,7P<T)Ar!DnW:c#-k*3%rWG\q=HT;>R.2"]ljeZ.iCR'P;R/":D-*#9[iTV3AVroIW16Ec^liG"YoYReKl1cB
%]O-Q0+bB1l6j_@Gi!r?lN(FXQ99RY$RGV,0^_N"h9hLSaF7E.K,]N;4C+CT$0OhW=THM(DTl;T8KMt9X.UtbrpXr66PT[fNR)`]&
%_Z#p<V$+moJ.j1uE5;)Xp$=s180!#>!-E*a6]`H&OF:M=n5bYp&*,R_OCK7SZ=V-dYWUh'=le@0@QYbJ.gtlu!HMZ1qoP8bUW(tC
%TUM#!kJI;Ij-mj7!PD7j0SjR;K>`Ed:D8p8PQ9/\J<q5[RM1??Al/V+*VRkmbp,s>O?n2:aFhEX%W<kZNRA)1rG2p`$5O.=E[Z0;
%c^$kP,75t7O^k1!O3CcKnK^@q:5^+sZ00'6ALPlX+]of-"0RboJS`I]6QHB+5o!_AJMLf*m<O;+QgC-q.!WK@HYH?Oaq=VJM%1mf
%3'QF;=*c?$&0h"gAe[8_Y(Y@X:I9k'BSf+hUlc[6KVZ-/jZITn#%ND,P60#B^o[)I4VCja0mZb[/$S5JER.X&K'h:TL\>RCC1)XJ
%<le]!91R@FpHB3O5q5^5ioQoQ#D1aF*tF<%JOK?#14MI11/mM&ZJ]Ct]RdD!_B/MKb)'M>T^2D5C3X#ie\I4LnRF%E!N$=E4>S-I
%JR697;[]FXJ3C.!MeV:IAB$B'oQ2+Q<mig+E>OC_s5`mc[Vp1S=L(;FV/6TqNdrQ:WXgPTe?LBu$fmboG,p91+Q#NL=]g:rAE6FP
%-/+_K%S<:G[^\:&JVkn1O;ROnLk&)(5`!4R($Z(,c_2Z6Y__6XM2U)(dNd9i)@(h>L>!nse[&L$TQPjJj,QY4JL*Hb_I/P%CYDf3
%\PC>T-*ZVaF2cVuERV53Ookia`.]dE'c#('`7s2n/YiuB@D`2B^14*\Vg=+>$M6=qGW$[NPYc)l&qi>@RAdTH+n^S#b6U/75YjX4
%AV2;&ClJE_J=St_JH\$UT:hC&(n!,$!uO8h/>Pg(bF:[/>#Pt9/7+4R-s#;oG+'.B4VB1/=#^Di?E-:*;o&rO0/:^tTqc96F(hMY
%@5/RZ#WSAJ"`Km3n815*Ci['%(N6RcUo1ciP"q3LP>l%+8Ih^;8dq7Y,`Z+s7N"-Q%6$Ne*N"+b-3g]nBdPp'a>h53f-N]tYgPdU
%S?+E"-VACuiH!i],G&P;11Xd@or-T$8b.QW77`"D.%kFueQ?o!83:fVStq^PnnH0:YZ6Zq*SZj9#5etf1*$Udc]j<n>G`,1.9;`_
%+%C[2F!5)KRD'Tu%)%_C[@Up`ad+M[iQ:.[(iiS*'1-ME_Z0qK>QOp7qj*,7""VS*aANj[(r2r/$jXp'+BV.5F.'F,.a7GLbSCRg
%Lc*-oq)qHkKE8_bejj_1*u?].3PZH^8a)58/8(%F@,e`7o_2@;/"s^"kdlkCrlDFMRNA,O@#6(!aH'kb)\.ro!"F^>c\KZKd_r&M
%Oo]D/:`kXkB-l(%<=C'?IY<[T:aG,R&]-j)q^Q]U,!R&01Dh87#^(SJq6*ocko2*9L$c*uh,'k_'*2_=Pqg-q(nf(B!]_'+UOX?&
%etG8l&uu*>"b@9Vd0gu><,Td"`aO8U+V.i"@'OO0B73c08gi<>$l&KTXIKjpV!J=sY[V=?MK6L^NYdS=@mOV@`c+=pLoD\:TO\5+
%G9$jfaVHkSLM.GAiqs_'V@PFbLU7)q@Ef("W(c[b;WI,qEak2[.f_(+=0RTqWrNlC7?eeEL%PM/m-&(l8M`c,?S*jWI3&V1J4<7q
%NLBlE3ZS>*$iit^cp,m41o<KX4180?6@U8)`/7+75:%7*rGe3Q8QKU2JGSCjk5YTLKlcl/@/q!B)PNGY!7ZaE3G"W]!^fu^,TM?d
%We@_@!8<s+ASDX)A5UpCjo?<?!n0_^!5N`4)$">iD0pd6Hr\L_@Xo'er*flWDV<o%1gp:ZWclX-_a%uU22Yj&p5WS1ZbO_;jchjL
%G[+;)H:V&npe%g0'2=;sVcM7kqQ7@,L)k%4mpK&4980=j2H+Nn"8nD?=?K/n5$;M$80L6*]<kfD_$!7O[Agf;3!G+k@:e/[a<S6C
%&/l1[J8$Y//I8Grej'()=,L'qdQHO*EJYf_Ja\rXWlg7C]`R.\\43@N6LcU*Gt)Tg_<tiHs&XP:_O+lGP598;5R0hjO<#,._jFS.
%[E@EF.!H+c6b1A!!@fc*i7eW;Qj@LC%S@rSo"\8F]&5G"`3Nt(qr.fNJNWW,jK-OGNogS3Y+tS<&R&D(-2hjS5h43h4l?Qui/sC=
%,D]JEamnlD33_I0JEVe1ZJW)_kF/)D\VN,cOT=Rr7iL;Rl9[L;+.4]5duF)5LV3:\f-S6"RBT)A390<tE3]RGYN<*leONUKBE?FZ
%CO-W1iET1nY;:cu(jfmg9-jYgd;FB1XS=^^>DU)sbE?$sP5VIVEBlKMNP)/Z!X(5U5++6X?jesH$[)#DdO7'XLh7m*M>B,*$p%92
%8pL#MJ=6oV<6W0K-=CiMOKM![1%a\sIS,uHW>!@te^]%9M(+9DA:1=`O:jL@P%>ga[#)`2N?Ce>Cg?C&"dVbj@LT\)DFB/LSReJY
%%I07?(ROb'NY0D!1+%-:`%?XI4;\pLP"5l/df;Z`9DalZiVFijDTWi9TgNr-"Ts<KWf!<nE<B+.`[qUic&n(jmYFHr(Fi%=_?t^j
%,D!R;%g^K!.cAJK%[(Rg29c#tjQ;Vi0_S6QN^1CHi5M@RW>Wd%\NES(6O&nNb(utFR264%3#M"]=U&WT&29D*42[>.1?.A([btVR
%bN9VLAN6iOq/k>33[_lkONtpbH*S_dn-sI@/?,j$NTejj!`'.>\^J_mg51s\Yf8#uFef?ZR04:IN1#4W9rP48_+_-O@d#u:AQh-u
%B#GaY$1As6`cP0+-X[E);B,*1eP//*,FXdL+@B!'/E/Y')h]5PVA#-.L5e05$<&GO*u=!HBbp\QW8t5*K*$EG83*[\fbE]a%g;)&
%64Beb:J4=T+:*t:Xq13*5QN%#oa7]hi>L[A!1,N/'e23LEj436V#qfCeg.2j9%?lE+==638TBtf"q88k1f]bQ`[F_=-8I6!4e-s'
%))7B"YZ4FB+nRpCc@DtX8c9T4gRt);"1?:GR.`!%jK.&:;0U5UTq$6l+!/o8q4,\P+*@^Sb!*TM9[Aol$kD\31h9E,Wjpo94<3db
%R8=j4&'?j)$r[I`d$Jk(]'P%[1lZKT./'jI\9K3AJI8C87"(l02r\h@"'Q\Y6\Lp'dghK<K%afAaOJhm:nM?T@TM\0#)ii27)5@k
%3Lm^D*/j<o/,:FA2l,.FZ-GV7(ee0O!>PngTh8.mZ;3PYOimHJV1A[[ASF1FA&-d,Gpugk6q7e<LdjR!65C+gL)BF$U\VVBAA3d,
%EO@X/i4jqb!":+5['GoAL>qcC*]-u2nU3`i._MP+F05d1Ofk!'[pj=@J7Khd[7qt63)9aXjk*0jBe(/b't47WL=.7uSn0R:\W>fJ
%&B>_EK(*eL_<pGPH8<MYbs4G5"bg3n'tS,_aBRg49t"=?3N;FGZWP59a92\c7,g/V"3B+d808tK86AcG1;Fd>;-Je&6CuYiW&Eli
%YX*mH,nIkFi-euk&2b*ASOT+u-.;tD(nr->Y!9lJf+.;+>h&?+i\Wl5X'824;9OTT)onUiH42g-gf2`b#0B`-d'OFB,`QPql!TU\
%Gpp<UQ_:"i0h88#"$&l/[Rs?4H+'+`.Q.NVJEg"]#g/5R[e1RZj^19O9"Y=[W4'JIhp,XNNi5$/%)^Ir4YW.=[((&eK-VH=6oZ1Z
%D\Mjf314W`a$@gj<fD(hQ"Rqa#aD'IF\peLZ>;-jjOXDVGqa>WKiT,n'P,5N:na!$i$a,5=5ZnW@a'TsaK>Qu6)M6#!TT>2JAn*/
%R?Ypf=scN$gSW',&@Miui@@KWVf:Mo66FbmQ46q*_(A^i^t&0jD=NoY8)N9KKs8(7`kcTW"ApkHUY\C+Ht=*ol[3bD=aOd"EiplF
%`>Dja0Wne-C_LlaVB*)G?Q`rD&Gh7?j?-tOldT>2')=7)=,)+D1qCa:%0a#s,PGpE6^FN0l%"N"1`SD7l<r1gB-bZr<\\\e!$SZ+
%)6,e7I59^jfY1JbA??+MCfPiCTg0\4cqtT[4JZ9IE/]lZ;&l,5,\3dZXH6[lH5L2pRNp6]iqeIq,M+6I'.(,]g-!(!2UnD[3P9]7
%bWq-F\hV:D>)>agI+Ocl!m@h0N@Zgjh1k6qTKWV#R"HYNB?)G&hPq=3+O1Uc=.)fff#/>'ps>&ggt5XaPnD3M][2o;EP>fp26fES
%@0",`ZAjC`,GDiajb&6n;-]F(<CLT:+_">s,$0^L1"%Z40r8Zi$HkIKYQAf:Cajaa.T!"UXX[]QH3nR%l56>,*>_nqn0kS!`+oj1
%WJ#gi^nM;Vj$<;On4anKQ.p*dR,Zr^n-N7-hO^p`foWluK;:C9!tGW9S2%R/LDp]2Xe(]UH!8ol<DX5CF!E4dqKWX+$F:#_F4;EG
%_m$ttN^KGk$B0JC_R']*MLeS39%69k@RD$CG82>8V-rL3?uaO9:bbrp(1X53<b:T:!>]S^?6F&-gk92%LGJt3S'=5EkQ>\^iqBZ(
%FnHg"!K<sD"%S"ip*?/clq\bZ`-.EH9Q(Fh-UaPV]jO?L0nPV-`0G*[S5fr6D;s8i5M5U-*>T)e.Q(s[d)[oj%6GO79*^Z#b=LIg
%ZM6=sQit\LIR7!ZkZS&mGFdib\hmt:dMsE0=,Qc=Foas;H#tn$fLfNTi[saE?`OO!RcY1m2kKf9PFB@NgPWL5Hqf?t>8@pH/sN$(
%bU$eSTdib:ZkE-NPb'NnNH@K@i9]/I>p-*N+@c_uc]G/J1h[/+?Qgq4TTfn&?s^,I,K(-;d6Y-!@Z+ZteSalLoUN^$D9$7>Xs+'(
%oM(J;Wh]Y.b?)a@Zn1<%#Ohd+Z#I*8NL,Bc]%;H5%g$=5?`-idNh3'[Q_rtC<$mHqM@B_e!QW/MG,SC@n8-)nQQWa.FESGa%QdWV
%:!.T4ki&=k]"85;\1eS7<&a9`3#)M0?de";%I&g*cJXG7O[ehC;2;tfRMT5FedA#R-fu/nKmA%M?"GmGQ6m8MAYNT7RUW,bBi#RD
%+G&N+Pag+f]GeRhqBd;V/1#P*I;a/ZXNQcW_cbV2b99kH@leWX<Oo\=,:Z*5D[;FeV>d:if?e_'9oo%omirtkGY2bVnE22r&?6sN
%4#GX(juO6>!f/5&B2tgkX(61c(nQ@b$\`DI;g8L]/$T);Y`+G\.J`$#g<5WeR5c+Fp'.?r&'g6)j[fc?P+ebJr<SIR<rjnE=O,&!
%@=)#8%IS#2"Ip(&bJnP+!Iq=,/$t)jK0Rk&9U!._p6c@=OVF3qX0@>sid!8K:DQLDlO;fXabU#>H3hHoUQ0LQW]c!GHocj*-,!$$
%BfktKG%X0C2#5!qW6B?i7Rnjd)TN9+EPjK[$n(#E&>#pM4>&R\^p5#&KVcn-n25R19%AcPR*>/Ua$X-YQg?JhK?JfT9;F>E?!%db
%I=/SZX>!@PfCn:&.f2R_Xs#hJY]0+cF1*`a'e.qTLbtUjA>s^.Ue%UPHjXbHA6KVpj@Bb.q*skQ*'%QD`2k4;=nO9P[,'#?L,;os
%52u5b33-VX_n@fNaP]+ZVN,'loaO5'db"^q@&82UNG,MQ$[#`$V0QhrS$eLg$ePtI2;cbOC_E5[&R^UBef[*mLh=WF'9`kp's9FE
%"\%sgV0nh*V'<T^&7Qo<28ZN)Vp/grWY&d'is(=$#=*:61;Y%qD-UW=CMa+R+Yd5-p''tQU^c=P(Jl.3&s_jEQ=i6hKcn%e>?Z>U
%CgT5pX].6K';HgHNf_5o+\i=K1)gk&Zu&/N3&\)[$_mH:S.Jk4qM;;*_5GH]TJ\$hDJ1I-?)s\aqK;jlV'Y<]Q;ENdehpFM'b4_0
%W^BhsEPR/PW5HGh#WmH1#,4^]02dAVPQ4$O269)H[AAql4DW'0C46$!-\?*nS(<Z4SuLR^YR%*24Gf,lA4T"%BYPF7)-hFe_(0m7
%-mTEfK&oU`IeF10IUt&"mjjS?B7m71%9o+cKU-?]!HZC[8R;cK:$LD_;n&HqC<N7pCmBG3a=cXW,e<3_"UkP;S!J"U&N"'I/bsT`
%,@,F5j$Vb9>)(#P%6:R?7[527(jsdE=_(&:#Sd'DEK!ojm.43%([&S5;/0f\#6DZ_*k6>H!>L#cW.3nS'pg:8WTXIe+Apr<PfCNf
%=,L=XR?6p#(on;60X;;X7=7gt&>kPQmhXQUkg`[ue!qt0PS%i=4c$b9"I_YX;/fgO3<6N0Eg12Ic(QteVrFG"+FT#ALueFG!]?6_
%'rhNidPQt^_p#M.rA'YXeT!0`(bl9+30>Z,8j%pr/E[=f]h_iF8s4F0:$kMt!!\_UX8mp3C?tQ'Sr[f\LhJ[+Hp6H$OW9pK>WD3%
%Ns>`KIRBoe8]8%UU/V\@66NOF38>h7QY3kD%5rbi.],g&S)T02!S>a9%M2G^h8aV,OrRo#5T?(3e<$'m88,?#M_U887C"gjjRT[9
%R,qHWiZPramGK<*ZF1sNE@9<]/)-+($h/^WHNQ]1*0@s!!LMF[*AfdYLc?%gG77#rPZ2_.CEI4CfCPi8)Ie/CBM^:=;p''*EdsAC
%W!P5hBcb;o?qu5gVXi]V(mG,K^81Qf\Nq1u!`XJ7J8@m:9C.D^?1;>X^eI2#IOGr239#\X1<;0b^;oH<E/hiL0L4T>>o59D207h>
%D)#`WHhDCZbL__V<<<h^(BW,Z,L1AaN[bRg\PU>q3Zs\DFU]?.esTMpkqOaNag0K<,u6L^U31U7-dLeai%n<p9jl/SWn5<W;Af@O
%e.i0Z*RfO6;5iieCT3mP.Jjt<GGKCWB<'@=dWSWW2n&WhoJ"`_<BBB(6'V[QWH$OSi,b&Fa,"L@A_CA.F@e7E27_CCP-9(=NLWW,
%gQ(]_UQb^kq<=;j;BUK2Vg^=%qV[%,X-YFr!$0^<e\qfsY<,b("Ucpa-B=Q02;i)VA8P?"K,a%<\Z1XNVc%#XVJR4ZFW4:[B]0iO
%LsVt8Sp&IYRmskL41(3G%PFX1`FmOMLc.jJ/h%5qnAu,<jWgqB\W@MmaSkI)'adQ`V*BJ[<C(W-P"Z/8HDV0=-IRkM!.&WRN"`3<
%Qb$_I6#ndf#;Z.aV6],Bm;I9]dANuQ(cd&1?WID^%<9NP<<qI78h]Ei!!gl<WB(#9T&nm)WXcfSPn0q=!,UJs:"KEuNc(m:QN>aI
%Q@d8\ZV=^oUP]%f6O_+Z&V+_u$8>H^@%/VIUe:[nV:,#g<<6LnS%?02^ii]9JBn2LY2m">l$lp(ZKgd@)D+M<=!dl:0IT9@0u]k_
%kPcK#Hc_HIG>-O_=(hLQ6QO9JiZGiT9]`L!innpdn#c0[KHfZ_'rV#X=MbB.Ud*R1E(X?tr4u5MG#+t4/Q<.`"0F?X4NVf1KKo(%
%^3?RKO+eL;^eF=tZl?GFicMqPWl..PgMcEGH90_t#:f5DF8[?Y'=>@9DUUkNT*CR;WDicZ)t(9uLQCXSKI[90d]%\OiBUI!+W,h4
%A]q&PJ*OQieaMeKcZ,tW)lac:?&mhIFHK>NlV'N$)X+sNBDPKnC4!,7@4pk"5!B(:IQ+u#V_e8g;6!B&qCrW$,:_0'rhZ;EUa&7U
%:j_,:/T)t?H?#M@a#'&o<iLO!V.,Z=f0;k9&PUQ]Nf$a"<'QA!aGj-sDW3LQ<'Sm'BB]Z/<`IphP3V3B>Nb!S*q4dpN_<:KGb_Ge
%H(7*>/_(S/VttuC^f&j&Sa'hhfXd5rFW@t<ZhpCorKsA6SL1mr:ff)pPsfS.'d8HUr?J7<(irYt`cS4&p5Q)\:oSo&R"7ksF/g;m
%o"EFmWo%qu(0RL1>pn1+PuIXaX0.qh;Z.Gj44^^fJ<A4-,m/*V?!$^O:8dqojo*2eI^I1U$NaF=NP[&^UNsAKoV'S&Z`V)NK$*_L
%)9Gp_:@pW>MWCZJrJmcW"?OqkLW$B]6pF_;[Ob"EhpH:_FJ>D9@rfq"-i0B!>p)]OrJn%Ud#!4l=,*][P0UGBI$I=OM13LsX%8uB
%!Qr;6Q0<F2cs8.noTQ#3dM8>:GBE<$<2/9t*ERB\hf4nR/%L,9[eEbE+e@r>];<QHb4Rj-gQ0YQ_iBj+;+[qJ$$BuijnaNY=5=2G
%>lP(L(!V/h-Ngo.i5=._mfY]0=XUjAf2$<adPI0Sa'/X5h&kca59BIhoh*O&K0kTp*n5a8['u*UCR,iu.s>lplZ[GXLifel[i23$
%.h34%"B'uNF8aaCT<qi3eOGh=UiZKZc;l)W:A'ZW-C1QI?k6fE>uMYIkX7WL(K\676pIKJZq*kGr@\#s0MF8#=G;sC3n)Cspi*ls
%9YZ3>O:rt/IN"==4e:h]j!9):l%cV+KLqm[/f#6@l9mk4V5;nCksW:e)c5ig^T4ClFJ@[Cot77l5GTJ>KBYe=Mo;IR-].h2"=cm"
%5P'utq;G_,*$A1:IL#;UG,5aDFL7E/')hU:$/aIcH%&u*+jjGA>>)1Ga)CjtC""M[>DEW0MVenDj2FuTT>m[0[a+Bk!/Hp$"M\Fp
%mS)a:@7uGMUsf.#Xi6`$muO+c2I_mBX30j?9[n_jmQ8"Y,L5^=<dY!)8ac1O/je)o*4^L-'t2D@!A4/s($Wq+Ug>%,j&!B%7uVS&
%hpL6hd]%Zi^kSh_A=VAoK5R>+Bq3nt2_X7GFXjj2pIAdo<,UTE6#<QZr2a-SeZ(Wpg3;PPY0QA9$[_st:@-Gc,?L./WI;gM91<i4
%ha%uQW,=)+Aq,IDar!%DQ((D4]7pY0a,,471K'ara,&\9>!DcIR-UP2a+4gDE0X8;.pYMd\P8pn>sf5OEEXHY^^nph=(k8D^7)$_
%T[Wb?.Fq.Teq[p:$#,[U:LZ)Y[(`SFTu:YnHo*+qM13_[if0Y4*n4nPf8,V_.]nc6X.6T?l]7c=j9-K'V,1'(IC)FC>U!=!-a)f4
%8UYt-7bb%+V2mF*ZFVN\O,pl>[^%/=V=3W^9^.eUPE^QqN4p=4qe\mf_bF-2&P51Dp3#4qVt0qGPTT454sZC1Z:R)!d`PIE8=&_Q
%2Ql%E5.SgeDKVU.q6hYY-Ad-)e&;VSO$ANEMAA$r*7APK81diqTX+>P#+iOaa[pk"'jD++,_p;nE]Z-MiS/?g?YAlq\1_re^pb<r
%*_H@f[T+M2:>afl2Z/d2]l!!hDk4R3'Z2Zt8iVI3WLGRh\U-=,EV2=6,<P^7KZ`)2+@],?X^.T!iZ::+QqH,f\e0hFg,lmNK-]jS
%:Uu:SEqYNe0!jb@49fW,s-&DTXZo"GB-F?d>%Wr%:H"R#lOh-F]]jgW'rnpS:=l9:VL4FLajsZmP#daHa1ic(i`*VQX,dO_1A+b;
%XW3n1VfteQ[Ed6^?r*1nY.-+eBmMZi,Y94pqS`'UH$XA</sh@Q4?[/tT!!9HE$2a/5hCKp)j#@1Z@A%9GP-+(3)T.aXJ6I%0\`CF
%4-cb"fTX/eSZ$at>"oY&OLn+0-&HrVbZqQE"M-0rcc(`eG*H:/0_Dp;:T@N#M]blXmROFT\mb[$n,u`K?';.A>:C@>FJ@W7A!:(B
%lFE%kQ7tANKL%u'jnZ\7A1a,MFJ=5KM!DqBMgjnQ4[N(u3a?JPJPAk0BBCJQ'hZD\+@g@(E>DeN<qLQ8U.Jq[&K"HOV'J?feP)MK
%k>[3O9'>Ct4`AA8.oP&G#U4D.6%qZK8L69f;Y,9^jgcWmmj-L6<+;H6\sH%44,0m?9P*>Q+I-j-/1tD,;H0B3ntQJmBLL#YQW-T6
%<`NZk+`@V^CG%(YO)Lb4>IYpt:IEp?:o3.lmGR2%]VFcr;i,a'?TQPjGhWfD;lASk;lRB.)W!AOJ[Ne?F.Zdr99Se1$8\N"n48$H
%W=1n5"]iHVq>-KPIT-&d/(BPS<Vd_N60CA_l5IKF*$;K2:ts,Bqi7nF6m6^H*?d)4nQ#9'1<'i(*a346PI-TM:;_LEFLB9*@mF%a
%,h[Am06Xd!^E^h![4#\F3@q/3+I.A!*I[BKBAX;_ndK*ZlVNf%H'3T"j5NFkHq/KO0rmp\UN;phBMGOjmr/o9Q6:pC7Ue2nhV2%m
%idp/P"AIaSia3ZYmd;%XJNtL7&1(cmM.r6t^:UC>7\"m^E8p`u3r=roXW6=nA`$d!8ZoDgkc/I"c_b[Th)!P$OAtr0drf%Zqi2`K
%nspV_I6T5hj]O(9XKq;d%R04F];N@MQqG)faYgQ2d`H\qA>h00E:P$Ahm?@nJ53h*g'?0MGC0jXgM#p6HOOL9q2V$Y>XPWWmi\+T
%Q<21PrT1.,pPpT:nc_aQHcLYa/lUlg0bC@l]$A!A1_QK\\Tau)l0U"3pCRJ1B1flKoK5ZUiNL\d.+%]]EEaGmUVYR,fip]uOQ.b'
%V0dBdc@`j>,kO?UF.+Y^iitJ8X-[i!2[]2h.dT8hS&<#Vq<+c]s)E6^>QTcr+qW\8Lb2\X^_3:96RNgSQWrtH!giK`lC0J>r-:\t
%!m5A3CJ(T6M1;KPa/?mYaS<=[OV,S6*B35o@nK?6+2KY=#E'"LQ\7!H\3D!X"`]dIatYP&Z/'dS]k?TAOJX+LP(a!7qN=^+E"bQD
%EdJ'TDSTqb<bhC0P`a<8DNBGtm(T1Ar"sr!lg$[+N!(Vebt/r?ZNJa.(2T-8iXoXFDN<n\&'V7b-4a;FM`$M#),<#8K*09[e0FN(
%pNI[GVXbkoOjJ8@?Dt$hVtQrQ:A,`$-=[$BeXdo'6X2A`UWV"2nS*rn\f`IlI&MZ&RQ+ucB'Im1RYKUXd1-g^j"!*h'N?eSOPFD=
%GUA6).Q)#+081b.#;Mq<feea6MdY7^MNqUI3.[9&GQ&;P0R%Oe6:4llqWQjPZ!>OTLPp'm43kVJjR*M\RiGB+[%$A,#C/_CLb_n?
%"b6O[Gd+Xs<>*8Z8QC\ge[W\-T_K%ei'LN&'*gA@2<2EG58]1\16sRcJXbit[L1c!!;-Q1Xr-*RXlA&dFW!7Xo>lp2J>'QgH<sc7
%@Y!OPH:ep7-'M:L,[!U>EhqR24lBFrWt"S(4)H@uZD[Zd"=uAsB9Pl=%T@p7"r]K-7WC#?RA=@&Q,Q6<'.senT,e%,9Wl&`F>49,
%I8?4*fV'Z-4.N\.9gDNKL'//rmJ>6HM2f)=8fR>\_LP:1<+fguKgc2&P_@+%J$2G#;H$ke$s!:["fEq94m1:-^paAFA?65ZI!IjD
%<Jk&u'hRk-p+87"*iKTjE_st]H-RQ+#Arn,l8`j*1J:nu'6WrLU/2iIFdBhCdQS?i_De8a6mAeN<8%]jcmqYl8#RU4C6Bl[:K-T3
%lGLF?DbF7jW_EXl>];=m7]DQN*_;saNq,IS$/GR&%T8,B`j"/MeG*QOkM$<o"'sQ_kn<3W].)_CXuM0)^i;*'AcZeTDVG8@&o'/(
%R0g>fFZC5I%1\to1aX1K.AV;21Y_JE.IA6dlk/cmXp^hMiMStHoarP=),??c/bVI-7D>28k./Wu\7.D9++NAQ>DIOc;KC\f_$ao+
%Can@Uaj9JqFdfh+<8p$g[M9N280_U^/r<&^M@Z_^HLc'`OC>+48@a)@.Yt<9^1>'&1q&Y/%00CrQlc6HMei<^W*u[*O<@Lr`g/S>
%FjaE!Q&2fGBus;b`.Z;s9^+XU2A*R)^/V1RB1=iJTOQ%;m=\5Sd2Mn8g<;oi&mP:hW.b2qPqqohUrtKIK>J,%XU<s]k[kC)$h8Yq
%Dcgs74L(n\p!Em&2PgS</Hp1IO]:Z";K[m\#DU`4kq<U`o]FSd:h=hN.n?O8!/=:7@mIUs4-EHA:RRYA&Tkn<gkl_A)$CUX?,+GI
%!MgD34-[$*8%slk.!.g>>Q$VmeLsAE0E:ADhhoi5Wl.<\>$oAX(geJjPak"F%4P4Mj92J(V3FfuM#^(G+5p`jJUp(7O$UqqN,efk
%Q4pJGq'N50'6okndNrpcgL]&0V."bJ?d"9<W$Y#0"Bt#`RfpGkdGQaa`4.];4\(_<`'NGt$=hL@V-ahtgafAPII:+o@#dE!0YR,q
%=2:+?gRc@K\8i3p#D"pC[8\=jlX<&mgP\%e)<rhldV03&'=C8[^?HPNbrlKa,s6[bmo//%Lm4RDr2lNEZsVcu/uY]/WsucM4^u3j
%bAj\Y.PCBA1N<0.G*SWVnf1XBMSAoM2<1a4M[D]u0&W4=Nprfcd*qYa(^Oumq]LV,Sl0tJZ/m[(1&aX:g`6U$1e_Um1B>oX`RoGJ
%RXagLO."14D-\2em-2IMYsf?;\3.4ll:YA'9=d:+/e<sE%b75m@n7@1bi?7Xj&(Vi4e<?K'8K*:4E5T[<>('7+^OI(..U-1_t1?@
%>0"QT,pVoEC0gbXA)'H%PG<$*KUf@O"Q-(R?Ye^oSsP,LAXVM$<HN)@*#=4R;'dZf8N+%>JtBeQ(F5_sl:j[^Y</+$jMbIn_+G"4
%arLbTT7dJt"HnZP6PW0tkCY3jp19kH`fS?)M?B)\3Mm5+h-te&`3XRC?XIhd^;QT<)PsrnilEj/e3V[a;`RNbM"&l;s!6trN'LeX
%5Ai5hMOiTp`W.J`%9h_2!L^A[dkoM8-n\6u.1=\TFU`X30<&qMA!au((VU,*l@%KC#'N3si28(BCfNq>D^h*?lB]HuNBehLKUf<S
%,#['Wj9L1USB'RViOYq7S0j>dCHkcWUsYYs?)$73>HXuF:*0YA;?:9#4sPkV@O*A8cBh!H*RAQ>$=!?B0jg&3n1-qcWBW_ir;]2b
%[2PuIIpAr2Y#+$^7mqGITAecR?^EEMql5#aZ=a;aQ'"8cs!5`KTJHX\Gp7U5MT&+"_9jSq_j<UL""gb6EW8eV)=TN\:`.XTeCik3
%D-Dl_2dkmi4q?HZ<r([L9%=I&X^`t0o]7^08hG#8V8[OWhf(pK?g0J5_n2r,OMgG!YJ7EZhhHk?jMbPVPk6t0>Mi;kbsgYqX;+)T
%6K2\b\FK<:9sk/=r3J#3;71>6<2SS?K5,np8VoMujG"#A="Gf#5gSf,9,u/,,k"]Z+%pM6q791dmtLTm67p`N8mTR9s6RG@DC*Df
%-+IldrZTi!nA03I?*fjP'f(>B2B31u`]"?+IXg#g7*Xq^&Tjp,hXesO)ut`g[7LU#)3,\&f9R,-EQpl_;""hl(Qrsb=(%Vl)J*a?
%b#36qV08!sB5BgDFI*L`liEeFB#^M<6ZaQj3$:L$RMp*qX*ket'8&4TMb/K+duY%mX2L!rKTV?O&EUlQe:m'3hoT_l]&U'^RM)%*
%pf3o:lAIa#%5Nsa78G5E'(YWM^]AiK*j5;:j,b$-YJpQfHukp*S:Fl%1^5\)5ft2C0h8'/:&-\#^$YBqC\j-I?[:L?\aQX8/"m2t
%h0m-3YsG7lY)Z4HkbWJkJ#(iq4>o/MQLV65RUW6<_&RgV&a17alb%'SJ-3f&]On\iWP@;A!%/aH#e7*;])cTsDXJ*>]^9tae11c.
%2t('r',G?o2#=@4]iHneK4tA6L*l24CKX_iZ<f25dqGt\7$b7rhm'HPTc>.rkfrbsg"=j8/:XM#)]]%3VGmM&hPHl:;M4M0Y)O_3
%^27*$IIB^3deGVm#UgR@&);=n%P6[XT,>t!g[?;reAAp0Z;!L#]>L,^qmGntA,AL"(M,[mI/b8O7i):&S,_5Wbl;k?k`<P;5M-2#
%<SHZWd5U876^27Mf`Z+_[uaZIR=_/!jF>g_SNuC:X&,naK$>E=6"tNTW!P%m3YqZm5nsqM6_aDY=gq>j;VHdR4<WAR.i(_:g5>l,
%\7(dPMlaa9>$,(GhP&'h%g<XeNj5>m\u74N+UfTkk0gi=_PG^]hji;*qd*h.Zn#?q+,miq9^hLdRQbPVZDB'LSK*or%OUNa&(o\e
%1k[o,4C9Of'S7g>fg2EiF@dIcm"bg7hQ>-8EDUV/F=e@P4?_AK?3lfBTp-Q)lh&TFH"9G=l2seB"ZFc[*XJ-08pCq:S08SrZ"kL(
%5fP@2)"mKsN6uV7Q(]!p4TctrFTrH6(u<I"*>X`od3*!G-5#7Fr!_.KF.a@\`pIpW.uYlj'He,"+tA9=[AXg5m-!-il!o1dduapu
%o1H1,VK!OOiFu9/o7rb4o*(#YiOM2E#89Y3F3["G2],7RdPm%n3cogL*!i7q[Dm5GiR_68M)gm:?<RI'[FPPU2:cdhjK:?qH-A+;
%Tf,a?;)NWm2@rc%>iKt8Z$`e4e-:HNdNi%64FZXH9t^Q<h.(s!N>;)OQek!_O2otN2`A/@/%pL=$;$X=]n)t!1UNM*!6Hp/1gVU@
%'[SQ6E[_K?!+ln<96#L;]n\r,M?D9Fqc/N+/FY+E2$ZMueB?D_.+6LL&'_qb,!L0c%T$Vud-R%[35:GLkF:TVT73b`c%4A`d[>7,
%*2F-AmB/GnU3k?/8El>^mB/H?-f"8uFfaM'\l?_fjSj;%it;%_K?@[Q]6h8,;];4L_iuhN-8I?:@"?%E+G/\>417QpU/=UjFo@D`
%n=8sVCK$>>labU2I;1<a3'ib#;[k5j;i'*d,[tub;rf_$004s?RA59:W`lH])mg_b`)cu:=6l_rD&?UFp:[B2R2lq6#lp#^k<27e
%h<imfP+eI#?Y#fEX_\,nYgq-%goiij2A7[sj<^,VE#pY9Y6=SI1(rrCg<?u,#pX\2*(PI4!lR'UOe1)V;)$INK][<ABi3V!ORK4f
%@gQ^<g-^Q1-tV+);CkqoR1<!_]V8'KDul7nmO1;W3AW,/qH_]NTg\;3e5&RIo7"Q?d)WGi(\hnl@Z)@cf_fhEW=XJtf0*.Xh0rK!
%620,6g%=/a2t6Ikqph(=r=.;r>d(oM]'/H<-rgT>qp8?tZ*/n,`!Y=A_-X-t.UFo#-:9DjqpZfi98\UB%0/9/$GO2MAoY#I<so?X
%%L+'M_OF7"RbR*QT*U5:^5Ns-jYDbU:?!_V5C621d1DB5qrV>=2O[QkQN:)D3)4fR@X,7Bn!b*W%4UMS])sC&dfGM%lHAAKLG=ff
%8&eNbKe6H*EF1DD\/`lk['J\L(6G!Uf(a%q;e;Rob]]gs.8i5AE@hl'_V>l=(?".S4%,$!YC<DOVVBo8^\[)t.%+95f)lNkEu3Fu
%oH8#(?i*90-O\aPCslp26NsmGf>tVR["\`Mo9#`iBBa2Ml<;(QXG6#,C="=s/H10uG&M-XjdYG$Q5i%XP$f$74JXdQX)tJ>XH(;o
%YN8J88*'.W@KaLCP1b_m,::#1c\A1-M8CPVUhtq&j/-=U)%3*o70eOC??[4;`bfi*]C>T?L<(8@_Xj(L9*G-Mq&^[le/-o/4fd?'
%dX.W0&BQ3A@U\e8+k^Z'PKtsLJG6#4HkApj75.VW98[Ak$1jkCaRacWY,\i)rFX:X(pBRC@K?,f+b`DfRf*[d5V\/ll<Ag'@8!sj
%-:g\6]_i[-'(9gShZoMuOX%)C@MW*p\+tWeA-2e]`!-b#D$<1[8XJddJeA=.&mm4=3$3bolX"ji%8pX'ouTrDI-uD+'.Z!(IDl<%
%V,?)rl9WmHq$XFH0KmS:M3%LQJGd-9<.!ZPWD8Wco>%Ok5gt]eV8Z/c%AVlC;$u:9-!!13lC60=KWD1QL88FpL-_]\1?JZF'](EU
%DA-39n<"VMLg2.MG@SmnUbna%_l14LAUF9/:OUP&r9%JrC#1ar65A,(=,j*P_>26h>-YcE8$g:o86k<+UR=JRNj+k>PK:+KJK:PB
%L'2@$"^[XAIU#N^-`"s[5f?*9MOL9LRN1%35XIl7A.&8Z+X5DI=hh4`O\=]mC]AK+IM?RUqpumt"5t#&/^8-e7:EAdf[nO[gYocd
%;MGH@[>..1DG'Xs.*-u!:Nf@LOH;O2,(dpG:\;QQY3=G5;&)O\#LP5ZP;7G&0qJNN8W%j^jG-V@^[\S$3gcNL>c+t\Hhsmd#XOP1
%%\3^/n3J:6lQ"WqXh7[q7)s<p[aK_</$it@*JjDq$Cq:X4p.a)8>rQGL"=(-8L3t$l``P3>'I*$DpX'E[EdgQr^'cn.,sY89S;$4
%4MuU$lIb>\a8HJ.4d2A^[7QfH14>1`ckOoF!\c:ND8QPd0EDH_j9jc8J/q3G&^#lk/A,5MIMp9f5btJ"7&1dp3R1)b3nt=TilN7q
%?h&c(:OQl>r"s;f:F#rghlN;0OKIl+#)BR+&WV>hC>Ne,5U&i@2<?@5p`uSs8i&ma,q]"<Zk_eV%5#bK2/g;/QLr8*iWo$7b@uiQ
%*Li3cMn"^kD=l\<oKY6cU/c&).JEH0Xe.Y?IfT`lHaRKU(_O<%4!p\qIWO-J6-'"W:0S4QZp1;(dd`Yb9P4#(;+R.`^OY&B.L13K
%2n-sU3T%>PS>X!J<Q4rYF1Ujg<u9baY,hoPhbMda3aFIZQd^(!i1&111N@KI1g;o*lSb_$QRc\J?fc=%il,?$fFnd!6@/%VG,'qe
%3,:>.4pn1:U9b6P.T2TGi1B(NQU*gS_Ne"/<PrHG_2s;NjL4<@1[1ZKio`[e,GU1Z?mH(<L<`@A`".E4@<b6QAPXb`EWVneWrZ0r
%ClJa]H>BN+e'gTX_6oQ^6eh5f>Z]'d(fZtt<3f+-i;ibLi0ehL0trU)EqXQ"9c8LM!0k^cG6PGPZSF09Rh3cZo*:#u6Sn"\?l;S<
%Hr8ln+\oBF+XIoX(J9jT:s\(0W`%Be7Upgs!i]?[<J-^UF;B3-/l*gT.+^UOTr;-&;D(+%;(L,tBCuQ/^a?(KHf`E_[l%MLQAISl
%b09-*Oo[RAH41Q&.(gVQd^r!1\Y8TgRks85TL[#6iP7iO#c3@;)\TXe'fCq'Kh-l(pE<*F=QqIL>ll[S>alSe"=@)ckM%g=YU%P\
%Dt=,L5_qP%M.BA(I5C]'=,eEn,(ZrK?7dFkP0,$,:<[;+N4gi*l;(Wt04"XHa>3U,Q#A:EgNFtW+2'R,%X[0K\W@<a3o%=Yi#Q9n
%Y,r&>4;uT@/R=i-BO*\A),^3%TcYuN::8jk$0KcNEbHFDJ>CX;oMP_kS>PUUEsWj,B"jQXI`6&[C]1uPQp,`%rnG1\7t7Uod,00F
%DnZ(X?N+.^s/hXf$GH?T]qF4YZX<`DC:49K!Rdh%boYV)?&^":b:/6LN)*f_8)t^CT+Luki]%>?=c,-#>sh]d,^ZYeMu0g91itGd
%o;88(B>*"X3r6LtYm9Gd7sjCe9"H]Sp0's.6LOrGQ`36Vq[hP*[+Wp1/sCm2f[&WL4i^`sUC6>tY_aN$s2tJ&M6#l`p2VCo1F@rm
%68oaA.*>!;U-n"G2o$(:O^o.rA1Elt`<$>NN6W[haLB^lcQ)cEpj20q%g+XEi3\3%"SQKPlWm$#T\aeO2>/sD)0<0-jIXFc8)@nV
%;NcB@>Zu/$TUV7[XYc8V$W;4$alGe?gVV3QJbOJEB*Ab5>9VYiYPn%L7):Lb:tj)",'@a[[>-882>q9L6998)`a[Lt);Brn%oF)R
%q6i3p);GBXo-VnnEL-1&HX)J9*pP7?>/G]G@7C&36XTtK@js7&8GsCC*9GG,.$r^'e]S]o`$uIneEqDich5:fo-l9l1p4s#.VCHA
%*%i_.'rO2>s%u`ls/N;7M<tb<i"TS5d;H]dKX*)<%qN44"u2S"*(&+&J.&kJ9hN<'U?#Cf0SMZ/^naB;U.&5\:oVEQ:`7S'[gkhG
%fkqWCAVpPI<0S#5fuF\Rf$Mb(\g67H4S4sS6NC@3>S2B&MF&.6]M5:meiqt^;g/b(gYFJZ4P#,rdcH_NFh?nHIJ4:h]!g.<^\te!
%Vo@I5^Xaosm3fH%1pB'"Q=C)NCBE+7;5;tKM$Ai<Eq"-gL`,QUV&>?<5cbX=eoqDO?7C/g.aPC7NjRiL=SABfAKM_jaH?Lsi%48.
%mk(=m&9DDi54-.[i2jG:\<)m*4fZo5iPR+08-g]`ojHJ/_\bUQ[%G5.]o(%c8;3)&Y:NA^NCcLbc6op7CoT[R.Our/%'Lc%7=r$k
%EZU7fnJpbhknf1@Sk@&g=ju8]K0eQ>)itG:):M5@,@g4a_gJL'`Qt4HKokLqBOUTVd"c?$/^n)`h_9HoU'sl'F=%id],j&+b9$d.
%:ZO%nhr$P7#")@BO:K0F3T\2KOq3RE%K"[e2`8H.Z;;gq7Od2i3.l3Qm9teSkQNo^EXIG9<kI15T+Z4;Xfc2,FF[pN:77h`PWA8"
%$<EP,A9q=N7KITW5%JK"2u<9ZN?K?@9C]D@O!&t>4Y?Ha9]m%98N]GW@I;o1M0(+e]'oq!$U__?Q`n[Q!CUuciPVn.M"/Q=J/"<j
%%I"iSFBcm!_&[RQd>lEKLJo\f\m5U_qWbUOJ4%or-8fqVI0Gch[=8"`6&TfD94)E`EZ7/`&sI*M+(e\RA)?AN2X?0-eu\PTD62La
%p(\l@HQBo!+?RDV[2aNNhj;mP/l]=QQhLR=X#(Yq?8(K9\tf/607/DnjsYR6h`"D5rr9^e%auY/HP47U9&/;_03N8b\F4G\rr"1;
%$[R$Op:JVCm82A>[rb-&/d2Bpr*&AEM@0%01<?polg@5dWBH2[Re7WeR+s^uVF?E4@Gc1oK2R0t]GgE$-NC-B<E13k9KcPi/0+^D
%2[dkA9+k>5e1<J("qUG0Tp01RG"&"RAHI0`)[.Fi/9sXjTk8<ce"nM],--r0QhL:coo'J[^$ACIl`aa2o%567qqIj,r&+WVXjuli
%?WHe)V<Y[?e7FIY8=REE+KM5'Vm'%5C0Fot(/iGb,!i%[N6@&YBg?C%>(Ugd*Ff9oc&62FWMC;XITY=?rYhepG&7[V[.5'+TS_W-
%i^k]?Z"OQ3<XAgF!dk4n(IUXlfT*O9D7tdgO<Vue2kn$iohg8?$GQF,2P!-VGXp<7V#><+_RLu40Cc_a>D)i\.]Ipu!>-Po<n1Tr
%3'U0Zo:IUbO&%n?A]@DQl^.tnYqh*d6OH\VN=+AXG#s<pdsiB>b?ITl-lpSKq0ua&h%&7lP6iEd-L@!4@DrqTBXku&7[SjK0h;_<
%_Qa7I,"734VN9R,P!M=#hq^/bIMkM=!A=M?"<q(=]r@DF;b*jQ7h$.:a`jh,hU'@]#0$DX;/-K/'6FLKg(nA\dFCT";DL!oLd$VJ
%QB=k1V%?b#)CrKo;?6ed@S_Q2+@<i$/^%)8LbEZ/O<9qa/<4doqhIMlKd4RK1_m\+LQ?0AgMeKmK>gi:l""<KNLCj#KINoM`k$oB
%!h_@4UaeGLS0R=E14-Hh!.rp?K[aW:;B4lur%>F1,-\r942UqB#<>:XBg;f(h.):;p.I=FIuuAm`-dQsZ2Jd%W'd(WoVP.I(i4;O
%1kb5>2\JP'<Yd$3oUV4Gf[*%DI&mfhE.`L&MdIa/)>(8<FSZ>BcC=&!jbDgJL$4VBMB8]X5$tb%DsITfe28F4_0&Q$&O=)R;1s%)
%%p*sgjR#Wr0GQ"ra3H(Ml.N,jaDIY@EMFr=2D,^gFf;1,IuJWFH:C9C'+uK4P0kP&Ee!9)HF8\1_RX-)1Sl'X?)kLS(^H1"\^^u4
%B0GpdJJhrC'6j%n%iAI1"'g82TPGV=<42BCG67B`8R5C?85(cX_oAX\WG!HNYsoo(1B(%Z.eISK^6d@VWpNXEnuQW)kq01b0G*>G
%>a<Q%;e?h%V*:&_017?Bdo8WUg+%p@Ti1b5J8buZ*Rd5tKL*SPo$H[ik7@g)^_3+@T<%fe<;jGH,Hoq"KOil[?sV8S`t&ckKrA!]
%(?Pg(bchk6I"bW1&UQQ;`$d$%2YW(`quP/Pb=cA??u&$eAV.q.aG',$c)G..s4LKA*"h]@&D8L&NWG%3fXV2CW"iqZKPg'TF"R;m
%e`J?Y\qDL/p20Q;ai?SJ92iH+MKAp8$Gop*=tt4f'V3eE__/:50jI99)AKC"UT->*D3O3A;>1&,!P]f#LOVhM#)U_@0S/$1)_&VS
%L5d465=?cjA;m-(9o.<<'r&SN!jda:nE@aBcaTMQZZ2Yk;Ll'pMuH.M,"i:UpX<SDVDi.V$6&:;p1^D&65u)B,dLB1'Z'*>LXV^Q
%Mn"ZT=ZCfh,HN'dOD2UBkLtKGW'bjZelRYO=M'k;RpK!KP3HeG2AW8L>2Wj6;N>Y%nJt<[JbR#"V5Qs.,f::=W$OJH\r1]n*>7PX
%:a9J0$:#_MA:&R8U.ZF36KED,pVMPRh>9/p/-JJc>n.8)]$;gmHj$79!+o,j";G1iNDnhXUc9:02f<+'ErluAk2ipsVbDXFNr%k;
%j-riH9)]*Y_YU63irmC,@'G,\m5AgF55j+P,R8kF^hA%VeE:PNeV=.5UEcT=V$Yjgf0Ct!/K_gNMM2a#fi+\57?h)AFpHXEaOPHX
%$";+chKJ.D/<SCaWb3_i"d,`F$+F'D"pD^V)],d&j_@IV?N>Sa#!(:&b9ftEKWMWS0M^>[@q^GtSXt%&>cXkG8E]OSAJRT+1;=/n
%l_Xm?3A#b!H4Fd%_i47r:7\RZ:b9(X,HXUX36W*[E(Cj-@GfKN589[*ge\B:keBj"@=-]r0e^\/33Z8M*+\l)-Zf,W=LQ[A$8aK0
%SQAZg9lY5sAqq)>_jQ6h>Lb.H'+umR=[2#9RuU6o;ch!nDT@`s0]G8)M1=Hk`aIU8_m;`L#nsV5dR.d8c?0<&_.f]1Lk#VcBdL;S
%kd(^sK)$c36XY#A3C#K['PApj)!7uK-'^?/(P]V^$Vtq<%pKL*a@A?C'mm[LCGmhBP<J)%*OLGLc!<NBc,_Km<SoLLDLu4=ch,0_
%1Fqd+/Mp*3IZtW)23,'/n:[K5*4cm%aL,k\Sb(0!:kfj\%BS5q>tM6Bf"b6VSS4='%WHj)Xf/gi'!I+&2CE_99C1Rl[LPkUm23[T
%7B7glI&]^d-M9nqH*6C%n:Vu=::G'6._]57Bg>N@('R:d!HZ^c\WsDn<:$upmJeBpN0g6"S()egldU]G-BCRi>]4S6Q+H+3PTQC/
%Jcml/(TPL:Vl=f#o9VI$fPmcpB8V83eqN*XA]t<)m$H(QbnEjYl]/MB.Xd`/,^tt_*X@*46sA+G<mm.s%7b8)6N5PS/+cu5?YtF@
%@#8%p(=(W"VJaZIijGLa8mg>"1#`6^qhpLJld7808"M`8beq7YQ+f,H*=he9H/qiSCh0L:B5JQX@X:NcZ/0k2F5ZXHNq"BP:EHc.
%#).\71]\(*=Z!4oa9$;dT\)1td5-fW7%b1(_9?=%d@)f\4]XPr>j!eYK]-*lOjF1#a<*L$7!:;QPdlqlGU#=[!.\Tk9kdL7ikd:A
%d3b.&L?kA',qUZF+0tU-Ej;Q[Zd?PYpu.,>c*DhV)a^9"Y=))B3X3V6dDYh$Zg:nKR^1,TBIt_RMl-#@&2:.j@[=t[9[bsk,pJ,;
%b*Fu56XC7GS0G!BN4_g-10]P1>r&[:eSU7)h3]>a`kgRY&rpTb+(Z0?'eX+n/]e-IDCJ->-5DH-S$:"?8m[R;b.or6^K)sa]I7&;
%7E:9p/9]H8@<?cDI61f6CBA:?Y+/;sV<gk_r4p3h-PMrj>Ke6ooY.1/p??@Pg;B>T+Y)63E<S>8gJ+I/"HgeZ#j"6bptmMB[PV]t
%6Y(!ONY2OZNZ!:Rf;WT\3u^N?AQLZ#@+8s&gudQ"3BWW?HZuF*kS&9d8YM%2,)3s=$tsHmTXcW]K-<)\'AE<lF6##FBa=/7Ae\M(
%i6T-gj"b`c6"D/DndJ9I80#f>"N&h'7W_\\3RF:)BLuh>U)3HB_9K'K,QQqDQ,4)pef*Nk(jq(AOs;5NPlo--r<Tp+(V/Qs9pTG:
%$G,>,QbFY'&/Bi(Z;.]]%>n;g(+Bd6ePt'r9>l+uY/2U!8s<,j&MY\g(XhI?X]8X-q'JUb^7`aqY,F.c3ipOBlj?'2#E9rBf&[*a
%M$S+,PfJnQal55FU1n&Ofn2KJZFP_-H(B:$QQ=$W791AbK"Da3(lm:\-8b4$asHCNA/iZ0R*Gm:bKs"?83?[XU5YmbG-U)M3&I&D
%m-&QXCP2Ke4gLX3YR1M)XYtk.fI5aRNbj5[85_jr:rb[=nE"*$9S1hF\fG)gAM-+MOI=p;qEq\JqAV1r##V_&8,5c$]9'mYnN#nA
%Ar*FH*[=.hN)Xo1rKblF/N.C*N=MNbkZoCC2gYiU#JP@0=k@IG^.<"W4=C_*M#gIRm"0<^>sjd,`dhZRDlBg.Peq>_1gEOaRt<[u
%,U>f7,kouRFM[FmK*P`ZMko@_LQl[6hiCJ<OUkm-LdS2XCq&["*$;IB/C=%!?0T1'`Oln9l7$+nX:+OPfWj`hjR_-YW9I=W6,'eS
%.,DT:3!r!mZ/\)PqtkIHFSG4^mEDrhFLXYJGJ6/qi+or$mG1;C^Q%md\G;E))kso@@SL">*b[tfi,7H8o+dZSjetXn\DWg.QV*CW
%rBOLHjM4s"UH(n:BX$C6mMjO4F(o<Y$qAF"Z*a;VQZAuI^&4?Dr)[nO5X+=T?\r):2ZLW.Wqu)`n(i38@:LJ[-'XFa=[%f(Pb);G
%'I94GTP/L2LI4b"R%U_N/QE]`/QVfD['*0Zg^)9sbiB]1AKWHm7dg;dV%'qYVM/,OS0JW;N3"h),-cn97b2`CS]tZN%oC+q8:4dJ
%r6s&!Op#\XV,K`Z<*Z+p&=)og]dG[uo?:2gCbGmsfi'r-"oIA@]*A4BErL;$4L0#-"K$d4s&TTdX/3:lL:73lq"E/*,Tpj(]`):S
%+=Q([,D.HLoa0XQ0oeeCBpBP!\gnc5)JuU\L<M'3UApD"'_jpXd=J#o!>)5C%bF:bXjn]KP<CeCmF,BdHq4_V`moo2#t06Z^+>Xq
%Ms-!ioE3n'JKiKf@G=0a*NlO>1Ut2W$:*7rjje$o1G+*=>2ZX+m@aSb1&jjh=S@(1[R=e590<jt^1&o:W5do"p`3?_6ii+LY'nm/
%?;8qmLHmDPq?.61'HSHV,h+r3949?@#?>E5(4f4H*uki'jiQM,Th*j9SjOaA[>qV;><@9QkJVYUFk,6FXF_gmesRG&l(hS]?/gC<
%dT>3PAaY2[lI0R5i.R]-5Tk2i"/e/ncL54u+HCjcDj1r*#hc9i]o<](h8e'Pju:DgJ@WLH'_4mHD1kaf*D_e.hErR5nKkJ+B^*_R
%Df[X;oA;P>-?>M,Yek:Y.1@aR3;GZ-A5-4$r".=4%Zpjoj=$F:/p\4Pib*Hu1`:XI@ekb\89cS2E1I9Z\In8T,DnU>G4Q1!`r[#+
%1Gra1[BO>IC%85k3:5PMpSb)<&'G[Fn\2ZMUDpF9"UN'LEu\g^,!&E;Ek84E!]0Q;&)3kXhaPjl;5QcUk36=>;YZM%2H(C(7D;5H
%2&[.%VU#st(9_Olh%c!qs%n+h4<->7^,"pCpGs^Rp18Rd*!f7,Aii[D[`Cqu<^RI%AM/'KS2@58&sQ)?FH[aoT2*o_Q+WZ^i:%*l
%(b]i0BSb)fFQm68B2U[::ZE3[2QrUKMH*C_agnTenE1bB=Hd]AR4AP&TNkmQ&sjN+%Ba^kFiY"5h$u7P"GkQqM4V3K'nT=6>kDL>
%28isW`SB7hj`3YPfhMt?7pNi[UK"\`<F*fL&OTc[1?e@eL/8:K'UKo-[b^C>Q(8Jo/%WQu"_-)/LI$O+WE^<oV37(]E;S;`-m"cM
%2@<^;I-5ruVG4B#W95s8?Af2fhqHC11!6DS9dW#nUu3I-a.Go/"d(jm.ei2+1NH7&$^$DUW%k+K<&P!'\l'Tp]cfi,>]eF#:h1tH
%UB]eEa`4^(94Gk6E$\1oPdRiEe]5keSMc9khnF3C:JXhkW*YnBU3i]ImBlpmi-!^[@QIsH:.\i1A-Fd*%SHjG*='d9#&L*(Fp3(F
%Bc$nMMQ9!6ZI0Ep:uRe)Y#HRK7H1V+[]d?PLcJ?&<br'BQ(2nk$@26.99<bN_dp$[.,CV*3]R<.eUteDN/t)\W+@cnUR]qaKc$;7
%VQ<Mh8g3E>&(_R?4p8Wg3iG3as)BVW9b9`sk]Uc?H8s?T,%i%AA37$$GGl=@<"UB-qB!mp)F>mnAO\V/CoB7=?d5,g#RJAD<2+XS
%rMP+ChV>;`\6="jK4,U?=&SN<X7HsrZ(gJT2B!72PY>2G%EG26'cp5HN+'8C/g7IF9FbH`]7?FV*#^HKgdX:/H;LS;$moH].M@;0
%7=^$C:kr7i#@T-j]"n.S2dnQ7jg#W%@8X8G)5V!O<OQ3f/<[E@/Z9KTjsk'#!2A<8X@9rLc=Shq&e&MoMoq,aCKVm/L.'7l0"kiM
%&F4Y)1e8].An<Wp'`i[?6J@G4iXeJ[_0:k%GC\E%NajbMBSmM-=sb!q;lP9K+<*d>iYGEWNlYRk@[6l9WeLdBk\J46Xrap<aZjgk
%.Qo*(E@>1c%F;UB9"DpB8ugkjq0OE!gY@Yb0!5:?FVfo(fU7B)hEeL[\_snS4[HgsA@mpDc7cq'HBfM\]]-H7%5UoKd,H%;>>X:=
%rPEJqKlU>_m1n)E%>\=C$JI8-hV9"l7@ej.g'3_*Jo&>(jI924C&I(-jh*Aoc-;#/:nD/.Ufu]%Pj'RBHKHaHqD#hqo&:/hf.=PT
%ge7cQ/cgsrFTZ6E)6`!%'k`u6[o%u'oF?#AI)rAQ1jKhj,O<2Ti2k3LUC;Ln=H>cC_f"6[W^'[5J,XD.n!MugZLC4oJ0/M5oO=UL
%S)-,_BKS6^l8S(/L1uAQX5-#F^,eX_HQ(mW^rV?dQ2$\K@Ye(p@LY=\QjX#KVL?)uOIO>fmQU$Vk(l"S&:N5*=VB?-&a;)\.Cg0$
%/[2786@iDMg^kC$a;DVnN/5jlX,JTsrNL31$ZB^6("E<iXNB3G2OP^b0A`@&aao^$NkY^E8fZtL9#lf]GH=Yfg(5hoJUrD.#](D&
%d3<O#^fQqDWEfuX_q\<=&A:HMNm_brJ4ZtEXGueL>MA+mj\_8r9uLiE79Cn"#V4&+\#ctVd"t=!+!;BN9:dmK&DP(<6k+at]X:jd
%3@O4N3#B%YX9"ZCc9?teW3"6mLA?>M[B\hf-42U8Bc'n7=1KH1-MmC\).4`M*+'sc4nc:^U"[NX__k%3o#cMu0dX+9IO9#UkRhq>
%Oc`O10O,[s`Rp>kA28gUH56'`C_(:BSf*2+j,6uUhX'KgV@h`c<P-,'p)IXX;2>;:l;YtDff8*QAtn^0a#<UC]:^0'/")FbZYca[
%:@A[ZFi,$FbD;ZQJR-oa-(&d)9H%s;U(!c6j9%;AZ3,PISo&Jm!'\cI_k`D2+_[3a@b,PrTq\,tb=<C]gOOisK9>8go]Y^/6]-mj
%O05Pi'K,@J;efoe`%Q@Yf+qrY(h^GWnD4&qX:V$Vp:q5Omq0'54W_IN#"09f2Lk`X:Ea)d%!HgT%g/4cS/$Ga+.!1:I$'0sEti"2
%q"/%"#)!(.WM7&JT%n).+E^2H[fKRZ?>,UK*(X8YQ4Tqf/8o@I\M(+H9(_\<:I[Ei#l"U3E'pHP,6#44O.er5GP$W+#"l^5[$EUq
%rYKjA@2j=%4T3YPcuP/eXR4ecQ2NniEHO1"VN>'>W5],40.Ji,G&>8(I^&S;P_u<D]SeKoe/2J+_hP(JKeN#D"-pE]R8.b9;C%S+
%&ritq(34Y"TVs)(LIpL3q#'AiM*,XfW9+=0k5H4-@6c]53tmia(4p64NT,c\&8!qk(!q>-m7rZi:#F_emS3m^%Yt>kaq6fl=^a4Y
%(IPk[c@g-rIh_6[KNETLQ%i+Eh)E=u2PFAuLUpH.B"1lY'45Om&nO^P92ViM\)8Gk,Vhn!U28Zl'V`f"GnTVU"A]V%WY?q$n]"l(
%.YjG;Q!bdZ\gtF]Yok8\WSMfVLujH^Q5PIPM*\,'>%IT!8M7+Z+A/Z$j:@:`;,<]'r%q:/<!27OX!N9D_Q'<d+H<NIc5Y<l:MGTL
%(*AWt&u"1pEBq>_>82K.fP%:TE).)'CocG]&bT,>bj-AE]BDI!jA\30Gi;i6Vg9fBU)kK,P1;Ok.!67*;OPe.>f9fpOjon'e\,Zh
%\b5Ym!u)`qmeG.2^?,uH.sVq3E^ECj0kL1BiTRSZM=c;)\?Lm_/a>?'/6-4=$9rIfAQFREBCT0$0d7oBK%YZTl;/0YdMU/?"(H8-
%hQhBKlt[('m[i:%Ljg;p+kAi1"Jj=hSF\$3mZmaKC6(p#anE??LAVG`=1\S/H=bf)/F/igk\_eA=&%V2DWh-e<!pqhfofW94K"C/
%b-!1jkuW]E<jV*+Kf5r?7YlmF/T?q9mr[B?I<Ji(I[<Sl%3:pLG;JVE;c<,].K:3O<rDFmWJDl<AtboOqJNb/.@XrRL#A=W?e^8W
%E(]OEOrKN"Pt(n.5oH,<@e<YeorlNnp9B%R)]cdE%>KB]dm")jSM#+@J%nUSDH6_MmismW!I>PAmcbo-31l;/A:naW=jJt]6u3!b
%fH]@MV%GdD^RD!r8.CT6\:Y4nF#ebq7Oe6#$Qk,_NsGWsmb.X>7r5Q0R/Op_kaKVcjbP?B=d,%K4Fb+4\c\t[;k+VU>d.u":-$J&
%!3Rm4XtQ&!N9qsq.*B&5F7YH\UI[2An/D%(&_gh1OiOCn`GAfMPtV>K;L_r/A>GTG&0ntnaP<Jj9VfOE`kLuR?f#QdI3&s[],?0L
%L8'YbbTa1L?eSrrcW"+#N577#25>LT#s\E&/eD%il=ad'\-&Q]Wg!,"VAVK[G:A?XZ")6</V4!d[NiT+efRW+ENe!Y(jP,V,2'sm
%`>bHH\T@;UUSH6V0DSU$Bo<bs%B*a@5=Y0&nW8")fmBMsbp4]&FKrYR\2LJUa`%Qf9/m='B=?g!C\IDq_^l20PPU>a;cdiRP'B2T
%9Q8SJL;dNl+_HjJ53mSZ`",miBT2_I\#8:#a-CWhf<j1jjuUK=;,kLY/;dJm_(kpbFFK.p+>`^.&i^$6l(dNf:d8%aiDTHqWr.dL
%bTHm0O20ONiS]W*QN)aR"?Ke;YY6e-RTgcgdPp)H*DmLRA)rWqrS6pjn(;l]n3>8=N/V@PRE[!?R'23gS;^&b=XsjQ'bg"(;7h\m
%MC.g`B/JQEp51U-.?*3*_!d^BjU/iWAKd$uHRO(]JMH5ih@uNA@L=Td*7YK,9)Xblek#BIQT)VJ*WPr\7%>Y"WV4)2Gt7nB+"%Ns
%K/$soa'_)>*>[A$S(O[ME:UZ^l*Y_FK-K<5mcijoNBnlt>nSccaA)aP<q$d(N<U_9bgNT%i<u$=\ghYp[V*YD>j=cN1j?lQMDb^J
%n/<b8oS@q0n\+C.MBA=G>79B<e:p,S3;<a(:)p.k>iuu[BsQElGl[GDn<l))MJ3o`"]X)fZ)W>6_XpFQ[ET6t\u</Xn1]N@*^Qh9
%0,8]3$EW<gGRn5NCKa,UPh-sRk+8X(94)]$jee1ZLs-R#a6r*oBoU>!Zp2e3i[iBK)Tg$<I;]ISJ#Vf?)K1'ifaME:RU85S7"P[!
%Le_"-p%=g,j*65h(Pe,?>eQCW"ed\:.&Z;-3G+4$j*$2e.bSsaKXWFiF,D.P_3Q0PG!Dg^I2-qITE`Q0s0^)F5IP>ol&$ef4@$p3
%p&ed>D>X+)T0E5rmO1@DY9:s?5r<K_@rcTk!#qXZCF"+X:Un3,VP0E7Qnfg>N9Pr4D1o7E3.tZiadnq!h(O'hc$WGT#OAh!2.:C^
%E.VaOT8.j"\fZeJrT/6ed>2N1[9^T'2a6oJH)PeTg[VoC*MC.\>sKsa-9=-SH,8K\BD.,5Ek*;0?).]#,FRX2fnT8O-RZ38rpbZ8
%p5Sip5R/DeYW%$mok]4Yba.r(Z96+#9$+6,`dl:]pSI<D@)rlq[>p+11s-cpqVGVOqB2X,iF^7tUtn*J?Sdq$/JBfOLcB(HL^;&0
%5/$YH6\,ll78\qgjUt4fmgB(7VDj)<!eG!>Iqc<h,S;5aNke2k\V-(MpksPH="&-!)2X[q:H"G/&XEl([9R+I!d5T/omK(I8f552
%\\E`N#@M!90P.,DF"iR3"i).m*9$JZq!o&#'uOT=$HYm%kp\#1kG&BU1,tf.`<p5T!TC[O/L#o?(KlT7(3^De@Mk*9bsMeAcBCm#
%ERp2Xp?VskN,`^iXQQP+B>:@bDuGAhI,B<RGq+d>bto3D];Ll:=GV]HU[q<`RNcOu+ZJSBY'!&5RmCQ9pXjVbjWHTNi*J#QV_10C
%0V0CB/R]\Y<Zt?d5F\1^f@G0pTgbJe_7T2J8E[YUZ(J,Y4-5n$W.uFh#nUCM-'5OM>-R=$J<;Qc832u+'FH:4/[421hLZ9[/I$_4
%(N:Zb_8#QK%Zf_FE'$Im-\cs,nlMF%X2d*`3u"ZP0B#84`6;0,^,Ne#=&S[`J"=u#LBX>mV[@':;PMgsAiNaS=mF)(4^s@[NIbBj
%3l^!.a]5Kmj4X+)TV6P^9J-HMoA#jeccTDeS(=YRE:<jL$9(f^nX+5FCaLCIZa&;mAS8Y/;0d)-l?a1!b,JqB?`W8@N["d%M&W'p
%bc5YWLVV#cD<D!u$f2Le'Z@uiE#1]8Sm-OT6;^;OZtur[)1hT@KiP;0>$noXCfQcTq7rkAGDgSIUmO>nrud<!5EXs4l#8?--4N#;
%i#Y,Tdtdt`.Xm\q-&:9\[t20Ij3XPS!a;J.%2<L?\Hta8iaXMu*R-#ZP6=:6+M_u+5T',i/PQ$^HphHEgZWP/!g01en,Z@-"js$>
%.?+/OI;R]rDUUldG'=6cSl>@&kIs"oW48e`XlQaOlo0*]XhO)^Y-e@N!Lr/K2?mbOYcSJu\t,QuEdUs@R8%4Y,bMQ>!cP,3jIdkj
%?%>Hs``6P^Jjt'^haGi*lkpE,7$7H%0)cSm4)3FGLS'^YX=:dEg`'Vtm[8ncq"X$NG`\B_I]bce6&r;aW,$;E=b>_"n`385Ro*<$
%rlmi#3?'Wka>0)pNkKkZBT=3)MWu,bGnbhR`no(Sh44QaQ%>RlD$Lp1-oJYAqe60O?l=TKhb(U;bPfGi^:UUHB_^D=m0?!9.nkJ&
%/nrYIm"$\5R;p:,eV:Xgl'i:heRSs>asECIfM[$ObsY#-%gKa#ki5AKF=9rE;`<i,GDND?=FO.m&gI2e;%igr_53%rO+9oqZgu"9
%+HY>rDg^rMcbWC*qI@FCZg%fY(%1Tr9T9J.:coe]?,e*D@<qV1N"?c#1MBgGl%Q(=TQau3#bDt`E;/_jM/+@CMfP.@;p_Eg(&1)U
%YVd#b[X'[P,7%&P+/#&\72sG$htZ(&217OqX7),&J2;K=Q/X4Q%#_cc6(7a*p801[%n$H4:"PbkMhNW08<;M.dpn2Jqk/"c@JWRZ
%"u#D>7hT%'%\fRBIS;4mTu\0+X$#"FafH)AE6]\TB+0\<&H2<Dhq.LGNK7lOT>hnQ*nn3:+Tc^_/'JZ7S'R@,O1^U297"+"Hs*He
%?p*$d<cC1ei2C8:`t(fS>*2jnK&F-A_)G6K(udDsB6!N^SU9Dp6[610!M;\^gd=%j>um]C=H0i_WmUA?"AV5I]^_\fRje)7\r$WA
%dB@LLL'+aDR9X52P[FZMT%!k(L6\JQH+@\b/Opm*j58)![5reL@VULHM[$ri@35*TYL_JJE2c5@KARE?7]MuHAFM1.)\ADjZ[H9e
%]SWY&Rd`\F^%74deGK$CT033>^DTjM49AgrXl8M(Ao^fMWYZ(PEJoB#oJMuB_M`rJ()=i!ij..8M=g;L^(-2HTr3-cCMco9*MFIW
%4W7%b<KW"0F#8IkntK,iJnWDFYn.h3J?j<b9VBk#nuD-3ou=IiqL85/1!F(,r[O'gI>&4e?)aKs'oM,@'+H?-R">l0gk?=Xf=nJo
%;[]Z)+c0>ZerUD=C^WdK>:+S2],&r!-S^BZX;TR89['3H$+QQ',=?c#T@b6Pf,BBL$-@Jjf[$)omVF1,n3g5%I$JfpVQ"0#`S6u>
%dCQ;p*X&dK;/2ZBLsNAhLs^nDiO+R&+Ic*7#>\0XN@Y9/?pVmb79a'qMP]OT;)K1),*V4E3US0/6<."UgF*dINd2]NWeGr_F$Fk2
%IkmZT[\7oQ1]eN1R5i&lH-DN_jN*?'K@Y3^2p*9VBPBD`c0ii3CTgD`.1#Er-!D)F^a!nUB.RQrg*X^FD9)%E3bcC%0Ge&=;3(Uf
%E/8.['&Zap[k/WV2no%8e]^OXC<I.j(-3``]>3B2:/0_u8#M7j"tQ9\3LZu:#U:dM]5pV3e)4DD.te+'k_BD5@hST<PX9cF]0o?&
%WhK]MAfDP[$\qdmlH2;0G\IPh/fX(LBSnl\R$Hq+@t,LfO!,r%S;eZ*B4?-?'orC+FO1^D2&WD-l+Lp;7Q(Aj!2ufT/o\rO<7V+i
%@Mq[(HDMY]Cr3)[Y8@J2h):fC<-E]X]3bo@Od&/R0`8eq/R,"nR%Ss,`cif'+A22&d59>R7QQ<rr)^(AJa0ODo-#lR'^s5L(.8AD
%F;6<N9o]tQD1ufh$EGnnAfN#HdR07Hk(/+i7'B:O,>Jb,j1%iceJ:U)>$XQT^,FF3D@m>?8e@)K<&EjuF5Iq_?I,tV]-G9ZWSm(p
%WTu#_rMmM#d#X4n'[Bq!Y%+nrKa$"#NYF>gife-eaT[_I](jKlQ0O8GZmR/oU,=nG5eYG;r'\92#=SkV(YSubE.P'`#.O(NMdqK.
%Y9lYrK&AT%p<Vn'(0&V0\U&0U(?bt/?Zl",?)18F-SF[I#>.Lg,9T]3%9"K!DJL8W#]1/O_T@\q!b?h+5X`&D19FU*!H(&00A/uK
%!=#/MEfpf2WCS#m2uX$q:NR<qXuWL<]r<);p=#qt-fSiM'7Ugpni[WuN@Y9kS@cV:4;O*!EorA[S<c^E([hsfk<a8Z,?aV'Z_MWG
%Bhkan?NH-]oE(D@Cse<"F]V227A,FZ`/2[K6WO>X5nn>&@`Z^PkJ""^B:eGdZfAEs!Z"MEN3AB_64EIJBLXiI85[?"$QYBG'JnEA
%)jIMhdDUYN7Rc05:0fBo-OD%Y!h2a&k@b8m5hW5)ON13g8fj_-K@[aPl)^huYDRk]>L[LXB(DFPI94h"F(p+P2%Je&e8Z-qL-B5X
%gM)Q9VQt8H#qiX(5hH?]!\8ZKW=`#E_ULs186kn$KfC%j>CH,5R'Hl:@2$?l6VD+1!`MPrH6gJLjt3W#4"5QQG1Ze*FX$uP,@[]I
%NkOtjmjX6B*r538LDF7cg^?F`#X<g(e0nW_Ni4OaaD88rVA#[0eJ0;)3$r]:!fK[?+Y$r>L3F*f.R]<+jQLa-/!^*(`AA'.5/Eb9
%=]l6K7uAc57oK,r-*!mMb2d*F]HiDdjGe)+D_Ot*3/o!sbSg6OC-)-nQF>qU(<8dSA:CO]h(.4rDGcH*S%BNk*If2PiB)9"E4Su4
%*E\<6V(QU;\ac9$StU\`rC*/I5CBGGprK?m1_\^GW7D!3_AckZ\\n5'Jb-.)"bNN>X'psYPJbprjMY'rkR]f]@AYh!9pTn[;=,EV
%%#U05+@pQa=IkoKRt"#s*M$_u"(3$R%2J2Cas*r6Ce(X'F\`0F)%g`R.]d+1:2C/kW"Y'Xppois)<\*n+0[MLU0qohaNm0&p1c#:
%g7=K596,mNh=VG_7K)8G3**D\@pBUBoH7^#UB,DaL/A0(UCHD9:#nRf!1J6iV%KN'7WuF%'aSGu6S%"Weit?Z9YA4]TDH+iE#%\%
%^>`4rQDrmJ3^NT#),VIe7Kg"Ze`B.R#irLaK1T&,a0D]-;#A=a&Kq*+>6]j*94:YVm3q&SK_F&3/L3&++k%_e%hQJ"\%J7?[i2dN
%R<ON\>NkJ=pr$$@_YbU_gXR/)qAf-Q$CV%.Xu$3.X=6,USFc\/%g$u?XF<'n_:".&^+N;*<XW0/HH0?bFa<'#SI2qPQuCeel&QT.
%,*4=^!4q_T2dW5(%fN4_55'%fo;t?m=2fGLk-4"kP=?`*=9^#:>VcM':*p_7[@"RMMHtd>Me[u3M$-o*d?EL>0o7H0:M9!N;EQ_#
%&!&$eI/pXMU9Ldd6c.?_6gKMI;.DQ"X6-OCV-Y?E6/iG\)qL8nn\"D*T<64"jKb,N'obE3G&6H8"bS1ODAFF/C//\n4#7/1ff[`@
%3$)O('S87@.OG\D7[ddNWFi6gqEK_)`9`/^3F19H(*:3ae+^rWD2sYkn0&KI`)'sDN3<S14+c+,VSY\U1O1ni.P4'_c5F6h21P]K
%(QbOk&L1;Ni$0XS^cGKHY2oZP9M4((O2T@@@#Tf#eZ;@Q:Q=2DY]!,EHMA_l-g;i=iR\@T*@uepHS5dM4,U0+4>s>;iA2Q(:"+h-
%'%FQK:sXW&^?J[[q6Mt1lA)9a#USReiE)\=O2AJFb''uPb+d7.c[tK51o#)b]/qDlr!YnjRRCiPJ5fB7TpeUR?pZ"<J6s1K2r*d7
%f:j^RNfE!E9bj5P'X0m"iM&+i,6r[d'7il[lq'D=>bb&+ZoRMk;uXf2rop:I3qtha^)PZ"1H$euhM\\Og#,qkB1X$'/9!]UhWq;U
%%Gr8O79U;l,U_l.J^<<9ieKd8@^`2'd%)E%NPoU*@'<tF+Td5b1nnJ>B_P#<Z!0>Q$>4;rD1d!*4FZ=35BSHa)>hE83Y5^aD7FR.
%?LjI)6Rj\#j&(FjM03ALRN<_Nd:E\0*sCM-6G4q)e]&FUb`YMNq*T'2;4[;rX1MFM.E=1::#q6]=`a=F%_mf:HMH-@:ZbQIZaV=C
%o0sHfC8lL#E"c>+dMtd;Yg#Ls%*uXe^0!0X=eQaiUVM]HNNRfD#%1BdAHoXY1_4i4"6&9TPZZ<7:sLd2A?[==E/%h$e>rPa)T?5;
%]+,KW\u(2C4l#htNR.RQiV^k*-cSWO2E0'Z?X0>N08Sa],hH8YP_-Qci%Ho";6L$jL86AhCH#sp.6*80B-BFl"#0ENRjim,aOmN:
%*"be2jK\DG6Vi8rIud"#VC"=&rV.C_8iVAJFXkZ)7TKErho$TFn\U^<EG>^8?4:+Q*lA>a^.g!'g.u^mJ?;uY,C>C.'?aK'WV0/F
%rY!GShb)2@RTU.=p<I*=AKcHKTo(o?>qoo6JWd(6]`Rn&OH(l^9o1;OP6HLW5u.-kp\sECpsH)9.,>"H;mks2;PO_&3+b:Ii"F>=
%4pc+,4^@cY-32LXNGZ[Z*O?"f.-%d`#>M[L@>7dIRXi;O.'i-9ihG,C9"?Q)dHB?0OZoDb(N?t)X\IWO1_!j;d/LPGat1ODFmC!=
%qp$bbEuim$7ML7*Ki?8+&L![D`m1'#BhU+!Ei%t&KmP;fbBB>)KFaVnr[h[9FJ4I>!tUH:NngUBAh_hLCQY0.c/3W8,c8Z%235?\
%`8;g8Kf.eO5>'`R&3R7$^a;-^@n(b(_q0A2'`:q@RYq#F\BoP<L8"%XXK&9M)fl"#-?41`WkmgmK2<u>**])`pW[-gi3/i1O^gb?
%R/Q_Z%><n7A3/=SOWm7+q0gjHemp>Q%%oho?-FEq'g@*3HaD(>5/+dZ@CGB'4P_sM_4dQOj!^+s*p=n>dcDT/N,f>EhB1h]'PhZ!
%AQP(YVUHTi_B*]K"uc2kW^-*2[R1FE*KF=D1T')W.#ERR["2\4(FKC^$lp)0H41QPIdB.K\LL@5Ih&Vn+ciaCUdKOf##7XKc4T`N
%)fn*8<;_>(Z1)jQi15E:d.K`qVFXp"c*8l@G)L*t0uQpZ\S;sTQu=<G&/l-K"D'Zr632UC@;otE4uQM>,fU8F@Fq2Z5q)[D&W+Qs
%r<6._J9bn!3RfnBF3m#OFQA7X;%++L399*"aO.Hmg9)-d$K<igh*oLEp3n@Kc[m5/Pb\S-!ZcW@EaV<pB[h>ZnVgd1'WF>$B74`>
%@I!Oeb8u_SS'%,77`DD*LCa?+Pl")#p&l[JD/I@):&\,.\kYg0KAJFgQm/S16]m=X1a3m+09+`k+@$Soa@br::2rUi+(=7r6dTup
%>.4Q#i(RDl3L>8q$02DgSqj0A#b5YKg[Gs%o/qKhk:67,,+8R;jG;4-@9nqeXT>$C)J#$(CZV&^3"VDM=4q-([h9I28'&rkW!d.E
%M\P/P?IWD(*[W^J;=Vc>5GC>,P)q9TCrLk-[THCXKAplnU0aQeI,e^d+U&D12gH00EMIpPX&?Q!kTM?F2GZ`+F:Nn(5SRTTR]6it
%9RW%=Aht)*l\H7K.LfckOM_fa7F_P#%.Cf)ciGYeM9:sWaT'*a$"MJ@.f<d[C$3s+(hE=Si$=XKV<EQFn[7gZ786;JIV@18irpdU
%)"u=IUTB[T^!Y@j%g-SL%L&+C=+Z4=2tJR:nXcFr(a,>W2``N-d'Q1F-jsRB\F6&R=XG19`jBnjjjWOH9og>RRdLmQ`EX@oRZD\4
%Ob_pA;Jp<\("pLVIeEpB'PZ@YLbhgZ.+_EY"t?)SK[3^:-_`UW4ET_F6rP1B?'ke%B1MAQk$i+;hsP*Sod["\##rFO(Ej]#0J(tZ
%ikH?_O=N-E9$*Ru7p$U&U;Rh;824=eI-Q(-:ej+;qm#[Y>SY?MOWt#=ijEUH-Fqlh_R^LVVaj_s7WYVqc&mpF-2.`tZu"W+,u$'4
%jRm!'>mO,N:]6-IRgd[K&cMns0!"o,V^S.d=k?\GJsFQQgnFG"aj9M0Dnbq9d6'STp!5+9Je@-9Ct]a:W]u*]8%<[-I6J[V-+Fu:
%#'"O$&#@JFTF;rB\Di0DR^V5\=4[k"!etWp%=g,V$[Hh8$s:YBB]ppR6](1g>ZUda'e0E`Lg7f!03SoS9mGRjdW]h,?Jg7XISdT$
%-tWNZ+f^Scr.gFE,6cQ<-FauVMl4/U.9rVM)l)i\k8Wit6=*<_IYK8(l'I5TJQ/hh-&UJW[<LZP>RKgSQ3;J(Z.*n),:&?&OWb?I
%7l8n<>?2GdYMhAODg^tccbWE@pCTe2:p30q!d19J3JNXs.PR6gC_cJF0j/D2?S;3q3ltJ/VG=0o4+oI4mL[E'qK=V=[15oB-YW^%
%ap`T+kW3]-bb0S+Y2BVWUp:0j4M_\$(p#<f(`km7>n):T1I%Pkf?Q$.<k\^SKYtIjK1]m5CHo!HjI4I)*6YQiAn[=pJ0d3'\g/J`
%Ug4R5;;J=H.q/\"m6#+)X,dbQP'e9h(VJkbd*1+!iK+?p;e!6S8Q-PsnPe>qm\cWREUEbS(g/\+P_SD^6G9e_2$%D5Sm-W`-BTW`
%@5#6(1=c[7o!,1lk)9L'M?ot[V?6)MfLd't,g[gp$SKA1(E_<qGU^.6BXXiN%QjSRjeLk0:'',o!1i<mbS.!<`*_.`Olf%"C8UdG
%VuGr9i'9B;ZQG#@HltG'?G*#V!s/J[j7.?P')9Dm5`h`i-&q7);.j:.pBT6n$mR/(QS[(Di\]H_)jj_a6:36W:-0AA7RdQc+1H5&
%+X!XiGm]k\rS",fm-0BB[-AJ>)q&1GZsE@[N=:*mCHm(OIXXNJ+t%>-,)5+Q0XqEOZXBm\(-hj;\'3rc<:U+g[,)7+!s%,1U'G%K
%F:lO;(!+6VKq?/_'Wp91$E]:Q']M]D9_BV38F.QO`Y>6IbWaX:%6!i1E-nE29_'-0qUsW^-hpkDoK_a<QEo<db[(0;$2RKCAriei
%(jjpR,T':GJ(QUe4U&rIflMI!m/^mVPGuTVpV]JA-0gL7EDFH#E;i:>+TAU3JD3er)0(?CQT]rI=?,k\n:I`+Gl6>mSI07Mn(91]
%V&-P_.&eVFc\((7!YV71%2qS?SaHRV0=oa&,bP9:4V5.n'u66?L$]X,=P6QZMO.3-82jI'Q&VNc4ntOCdCaAZO>6irLYkNtlSbO2
%"0mh>U)q)C;b-F,Bt7=/;]$Ikfd_+3dNF09O'Ntq9l&*F(iI^%2=,>#@':p+N-]*`jR/86iW8C%Q6P!&#nh>['Cd#WrJIU]>]YQX
%&,;k)8PiJd]"2I-@qU4qK<=W2K^ECs#eofGa*oKNiIdZU1U%"dP@rQRcoJ4th*simYdW:Oo,P/H5H\ZDG)n*u7Sk:,#t86Uh;rnd
%QA?^fEt&Gh'`jmP3]e=iD%WaTN!$<Hiii["I<#NM7m3G9k!U?(qQ!$=j0sL2"T/r]G>i,o/tojZUou2COA>l*WA]N_9;?N<geDs!
%gP4m1<$-El+M<O/.QcH`2AZ\W-s%^7GDY7>pf(Xmm&1pb(J*;07/iQ^TJ,$0p<=G[+R/X/1Z:eW('"'2n'"-_:6"oEA?G#WYFWD$
%#Ob8D.mcR;MACk2U[q<S8rD-PL,$l[(T(Cp&64ed/6V8=#LBD^,9H$u_3@J92+A^p@TP?%a)e*a&-]jA&I?SRZ23Ut5dh"sC7u,q
%B:CchDg_##%dU+2^;'U8-\H(<\oc!9=u*PHQN&oaPJgOY)3bk9=e`tmB=4Z2,-tp80\bP.G/m@hQsR&r<?t*DP"R?.RA?q:Zlar\
%KeR?L)$CDL/!B-3Vp,NbT=S@jFD`1OPCh<bO'hdUME1(e^KS[=S^,/HR@T;X<:@[kI9X7Z4U&q6.(65$%TK^pMPn8G.Td;&/emo#
%A15NHm"!YUprAJkd?5_P*T8OY_nJ.LU-h?4A):D2#jR$EQWP`=!1Bs64`9Q*YPmf:pk^ua(!*NB[d9E<_[AlBi4A<F@1PSuYKr3#
%*)d@@8lcJdCrJuJj*'71O:91YoMCMk)^(Q)M`kQqPi=f18sC@9^&aRm,'W0'cd"GGd!^`Bd(2ZDfbL!>W9#s%p:Z:_[c.OZ>4^Td
%:%Ut`-&k#u1N!fp<&"Uf=)h.QUNS66'J5l[ZX%B_YW&P5<KV&*,UCV?]TJt#3_-KV0p+!V3TO1W\(p,$IDs@[8S2ANqGuO\g]DA8
%ADd17pN1dEegMWfnH`HS-I+)\Vh:5OH:"G:@:(TTo+"`4:kc8d_gM@#*oDucdY.1W?a;\GcZN]HlZ>c=*L^F.ci1Nac\C[nkXqhO
%M5_l6oZLp'Ym^TrQhDFt-@7@4/eM\qY5@a)s)_eVW9:,m^Ydj0,29u[)(S,d;*u_`FT]!TBWRdM@\WQkBY[sIRj/L3.pC@e8@V:J
%b+]+a)h-nA8)$?(;eQdMFACd$Mi"_9h43'3CTJq+$&3?1XtY@(I\D\WFtk.6bJoq/_l(4)Pc$rR^Rs\Hm';A2_j>L*$D/V;T2%'5
%/Om[`5ZkH^,@Z<;\rR(mZm)Vn3/XM@]*ao_D6=AK%JQmIp7QKF12s)b"V@NgG2OTc'V4pml92Gq4(977`$?(H_3\m#_gc.AUW8Go
%eA;'QJGHj8.BB+mAo`eI)6,@n7bQ9N&?.BN$he*ZPT/Q1SfpiH`o[75<Mrlnr5I(ij1P5MO.H^.&&e\QJl"gsGa=e%^P[5B"[(me
%4`Lr[f"6P`aO.+13?dJAnT3U8_FGX0-MaQY8c[2@C`IP5ZIT4@h_sbnL<@<Zb'_2WAYX;'SdE#a\25\X*@8\HW$9g*K7DhJ9,fiE
%`&&O+fe4idg8u4-n^^C,I<9OIRL@8N5ktuFD^IaEk%d2(-8&>Ua-Um46kdK1k`a/<)r53EV%nNZ<[V*.aNAYCU>7=<:37ARju"/l
%+$jr!UQc/3B,7ZRpqUKhF_?1S9Sq<hE3Kb3c(Vtk!bT0liS<eo@rS>-DE4Idio?PVhREpd/M(/<eQeb_cgnYVFX+_>L*C9<^_Vg`
%RXr'H=dMT?,ai9PS9(iu"K3RP0&_Q5FEVhW:qP-mFdCUoSP`JkR/pkVhd3-jlO.h#3oi3=)*-NDo'pK[FYl=L<rrT?S7=tMO[liC
%mF!,E=MZO5LfFQ1nkes&.R4LVs#FgLSPr&[1P2r4>bSaYfr@HI\$sPuKEZ6F'huN,%i5uoqaMF$[B#9!Z&EJWmHCWcJYSb4BL!S/
%QM:C'kC0]hs'QMqYYnkBR\U7El(/!\b+G,TA'Y29[d"@fj;5@@,-$&N`HhZO_bDU'l<We=*<aAGaDG8KIjb8`%qH)V>?\CQ*^BA)
%GK8#a9(^s7V):!647D=)@Io?0/uko5UCGeJ)PON*ANnF4b^3H*;*kF2a(."l1.<X5P+8/qY'(&;?6LUL=Ja3ESLUYWnY2,p&c+!l
%cEeKp\`V"MPP@Yg=('"njLBMnE)6[$)2QBmgQL+p=RUuO`!c%'@=%psYkibds8A#HlJI'.4)t8W^Tg&qJ,YN//$BteW((cSKldVo
%/(,.6V[mPi;JRu,F.S>[%JN[*`YVoR0JOOEZ-"VMqK=VgP#)oSI`ofNLe0R[&!tCpV*8]<765pPGY_P[C3f7!N&[4C]p<R(.p\GB
%?4jh@B"9&AJdp7M\&V;Cdu@p>cQDCqNr^8uDBPEN2ROphcp0U1?m7=eft/q!OV,a+fn_/h-/>luc)eep;0%u?Sl(V,>ECWcmr\On
%\/jBg-WnJF):8r49[(#4=:S9ki)NSr4G.FA>F!Mlmu:LD!2,*kG5R_lNp#4>5PK4(p##afEIZnQZ0FPq$KZ`!/NU4nRDgm0h9qH+
%LCD[#*S0.bfna"_*3rH''b<ZR7/iLW5V<bi)2N]Vjd_kU-2_`&Hmrd-K@tl=1paQ%q?2GkN?=PrTeT(XdqTtu%Ygc8!i!XC3QQ%3
%`i&eN>D8=\=N#`g+Q%hA"S_>iT>O,#GrjYL?OH0Uo.X#GFa*35*,b80i5M&ip8r3abi">GBG(6\BcS)p?kJm7LGT_:LO?Y,2S,:g
%3FU6sQsfa>VK7MrKp5tADXfM`,<pY@YId;2R0Pre(gpCe2Q@tlS5F7%:co9nk8J_.&(&5TbA-HrR`uWt\l+-t&J9<pf:i2^k"%_%
%&Epk99ffZ#ci>0()jKrsd)>9,+*&Da?/%$a&`%8e]4gB=6$%99'!N^H;T]EWU_q9gR!"MDR!9[B7X\@b&Fq\n4I.O-:BF#:c<X.t
%k`ZoM@i[anet:Y$5JG*#UuS3JMHV-l^CAV)iAQ@,aoLiYi!Q4hg$4OpF>,K"lE6r+^t6aT+%#JVb8I!"pB4,uZ")?!p^fp.N2;I;
%8B3Q@#-o%O3i<)H?9sObGj1;Qj#VoG%Bf%O!p0c41n/bRdkQaOQ1d:PE<UXl*'f=uB.3O@V`INmPAcE3B@#QJD*cf\4^(\0>ic_0
%PmZg#YQ5T=P1%547SR;`ju!H+6(1IPok0cJ<uBC0*&oZ)]hr<)WG16Rs4G&8I-[-Fh?lK-]%+8CS,Vc[@<L-F6]Yf57I$1<M!e=Y
%59GZ<'"Pe\;$!Qq4l')UJnB0oCE>'jQPI%up`M8s92MU*<&q*=iV$\\FnElr.i;fb>"10Hgk)R(0QS^GaH`5>'C2$k(!R*Np>),9
%-&]F$NV%npjV061O)R:!$Ie*h?Nu]_'to3>B!cu_5YGLm67)r3eXCP`gdl@Bn`QL&T1-#?Bd]7U<\oaK/r$*&r0+pA4`NJ!S.R3.
%]VZ#MU$\TRkX^hmWWC4'/h4u#,!`O5CXGsp(DijWg#dOE%YD%<R_'iN&HruIGB6^,s,148V9UbuEEqJ7*+A4YTR#Qj5M>]+ct7)G
%ijn9dbeZft;S^,UR*<`ICWJ1h6s#ms/^U[R[5\;V_GVn*SI9%o+G2m=Otmu9*+ijFR./h<)kS^9-?@W$oAF,5(02UC$b;f<#Ff-f
%3YU//[pgjrTpEQ5MVimJT8u1j;iLA)SL4sc4ZLg`hcSUPogEl5YM-`RLW)?880`kFmNT](]uM8da`?b5k=h%p@Pu(ZC$bGmJ4Vm,
%mG`]W2Lnl@)BDMp>c^A_WCQFXh;WrHi[49J.%@IVdR1:4i&]/"+Bn&I&&%MDn#u2"g(rR-_Usm%VPnnOJe=$AW%!%$SFJOl8Id]X
%UA_nYD2:lnO0]5/gt7$97sH#R?ssiXl[Cgch*$L>G-/cHK&$]\;4'Y#8>$AJ).C2Q323.+*El]FG"Q&+JA*EcY4*pg2(bk'cl6?h
%kJITqj5[Mg^,n2mjBJeoHHomj@GR0N<K&rY+W)@K7"?=bC/V"JAV\='i^C[PC#4iX7luXg;%ar_.$u7OH^Md-;BC6CBN.$J2Bi8Q
%YpW&Jg/t\J35Mri-U&7B9U6p?0SCf9Id3Pd-$tjsl+:G[0XD'L;=>@>RLrn/]8ng8(DInGMj&En>\e']Zu^:Q*U$Sern54_JZ.&N
%<PUaZRL>D&,dZ'Xfq%^+EN#`?(cmOTEG$b5m;T1Q8;\o0*Q+OE5q1h-GSADHWH8p4ptGJ.k'>g\FF9V+pOe4_+g+;P0C'+#*5U/o
%_A&S(17l<^>e=8"6PRd]G%Zd8XXks0jYI&E?`2LCIN9-R_CY$t_XPcXRAL[!,nOSMe#$5W[h$7rrpC&sPL#F>`8bM..CnIPOt8jP
%s0_hWX;QX9->U`<g+?9tcSQ_Wk(jB$4V[S=0d[mM(NOagPH1#)65j'/W'$4:L2@-g4bRjF>p]kX^_4k`@lkEg*_PEUmD>:KV4q&t
%6/.gpL*+1jdg,Ul$b+*T66.Wr@VcQ(aB9>kTUi/?LFN1uj*rKB_Ch6$:4JI4cMc]X0ECSj#hu-n(9p3<8A<Pr3!`!DRMhDi)6.`&
%RTFA<();TH*^A`!iB@.,qYf(D\#c`,_`[P1^N!?>N=keoh%tE;B-Z],o#5mfJj6Hk0]eGL0,bejpG#PpGXPL3I\\t&=M<`Og>RDq
%kA2(^5#9#2#`ogc$*IC@l!hku&uWMGe\jIhRLd`;U%nDnn(G+NNR>IE(N[b?-0W.UCLltC7ck+8f?j+MbV$_#JTEcMio.lp;M[T%
%h:82Y'Mj&ZO,sVj3qLFeSp1l>g?i&[2(^0]q2cY&<(+H0`mugm<nhd6Aglq0*#(r[/e-%NoOiRC^$cEoq$G+3nHu^c'J:IeM162s
%+:9r$fh.$pUB`;,^jnQOIYVs931\hP6E/UNPaaS/1l<I/-5nGi_Wq<o7#oi?NcZ-kD<5ZtYjTXJ!c"G$)&K%XC0cACh]8JT+b<NX
%;Rq2P*Ik445crp>rVP2U,1*Q&3pa4h":l4baIO\;!h,Pq;7k=:$mT2<4[a7TqcfpBN)(SI#V\n3(_1m(-7"p8EGVBV0(*D-oi@?G
%Trr'$f6=W!r*<@-'=Fdp"KqCU1Hp5'5I,1=N-'LpU]2=hF1D\`WJU5F)Ti';FCE=2b"(Q?f0]&lFr+S2G6Z)Coe`&'#/==K685i/
%pWB=1;Kr3[53:sk="[?%^M@U&RYY-h\DqLTah-S;&:sfTa]?K%T)ttt:si?9Df#2JLbmaDomit]1YR8#nY"TPE^DHOd6SDY%[-/X
%dLgK#]K8GFBQapI'$2g4O]O1<UqBN1#V'J^k2BD]D-7_<KuCA^X=*1)5CD[Ar^F$$I(t/^"m6Q4Ru5_=OG%Dl0!bT%!TY&6q8NDN
%3Hi@bX0iC@iV`fu7;s=%p*mG%b3\8o1*db1gWA9rTfmOkiM"1L@K&k5ZP*@1XmHP(#mk)>)L,s4J^632qbT*?2a6rKd6+o(H1_)W
%%l@7W#/r<&ASYQV)+e<Hbl:O!],2[?J9k'OX$j4"XI[E">W\^U1n#<gj"a3+[A\8fOTg@e/knbK4t>V9-N*(bhpAg.rr$+9&@F@N
%jW0C(nt*gI*kB<u?'9uZ&3i+8lmQiM.]JPUjJ\YC@l]ardLA\2EO9,lUB2@'79-3EKf\r_8P5W)d(*i&feQ\&ePS/qG%>7<9Yeo/
%pesU"OKfj4_jNLo!4Y4Aa/>!d7i(P!Hq83Ka/Pq`*Ytr<YH`M^)V459bsYF^!O4)W6N!;=VTd$6Jo[&]85cRtVQUhfGn0<._'_\T
%&Ot#j=JDY3LuIH@8OHSG(lod0mdM9ucL4dKD]NRc/_clHN5.;/`sPb-`9X\BUtMuW=IY6oAeR?`"WiHJ#gNSG:8X.MUF)Gt"YALO
%*aCFQ8([GO;O0o5+f6>O[$FSK-!rs4A(<Qm\dgj`7Taqr^k@a(l$AjY^@tq-,.1:^^D\-Q1kT31>)[fP+t4Ud@P\=)(7O8;<HA^<
%O2*\!!"a#]'eKYD(&s;CW'#lHHKds[;VDU:p27L8D?=59@H4VqMN;5.ZuIHLi2:hW_hI;(]m]h.pVudfD1-oUk;Q5a&&CRk')9A0
%2MkT*C^+3\DM[XeiS;:2I6l>R>BF6r[Oe-<c#XO/'SJsZH?'[uW.[I+;/+<X-EkAK^EKX$6g=!]j%KA3c@?ltjnmfD-X,7pq"Rrg
%*/172RgKA8`doO/&uY=!k?5?Rp"/Ug7Hp\+juEk_qiuXU$>pH/K7'LUOr6_;pfUH47/I"qBo$Nq_N,1E&8ER9iWMLI-&rK^WIKe'
%r/.9NHtjE?[A=,B'c*B-5;rNaMFJ<#-Ltfb.0u7Xr'R8tm2da5^r#P[CrB1P>W?pFG>gb<U$9sDaXkmCOb5%!Jo^?r75[4OJJiNj
%UB<X&@D.)H+tu81l\Hq6SQNb,,?u\b>8mHD"HO;&6(;9fO!0aS![4k3m+FW5Kj68T_5Kq,O>tidZUd\$7NeuU]>?Im=-OZY276.b
%Prm*1E?2@/nlPoI#&L)Q5+aBY#l%/G968u]J\(^]12DpL6b?bP0R#3*JJ@5IOm?m1?*Q44K$sj]Y[?,p&gY?1AJ6"Io;Z:S_FaY?
%3gSB2ZO."40';ej"ARM.O;hpMWmuBQK$g*Q;aP8-Xa,"=7#:l2hrfM3KK-FiOoC2,Ej$b0ea#P=Q[EHof,bkk)*l!o>)-Mm_(5a$
%iM*$1L.H40ZrbqfKA!91Ji+bhEPCCZ=[?YS>T2M"`IUt#F+>?PpZc69%9nl_2^JcMb%_[QQ;?NTM&k03;72XqHTA<7%(/PB3jn1;
%/@W9g^O`2DkS9SV)/;f$;3s'3E)%-gn'5?\H<1h9X^K?Yr8Fq`749ZTG[g@%gRu[=_%o/BP/GS*$:'6T`rM8&;#Uc=N`[ULo/q!V
%K0k#GU\[=rs2X&C=0=Z!ZG(A;N1,DP`6(POdO_mq9pF37]`bY%WI3.Z!joK&oUKc'fTp#q4T#u[+^5Y\XKB/EF[>QHGmZ)](8-[t
%1`K6uK`qrDE56&C>#=qITJ<lg8]HS5k(K'I_mE)UrE)tCmOD:r&Du$_(r['L;$M%LSQ-O7?I.pA7]FB.@81cq<`_ua8-LKjl>/jg
%IKLgMo@.URe4N+eRERhu.ACI*s4AG!13bNOL?fC;Jqh`'Q%qF-Q@RERQ#pmE+#Eka,_j1>BE>!,c<n=b!Otnh<(nQBH]_.TP3B5S
%Uukp"FK/1&2CLa$LI'61N[g$&miB8RK;Sm4?re?27>ajCF%5Jgo/5jd'":e/A*dKV;G>ruG3B>^#I[^gh:Apg@)dMhV7S9rBqCRr
%M9CqV,&>s9Ju*`Tp)2J8\%m)e"e]s`!)!Q#;]f^GA$^YI>o/Gp;W84I6AlKkJJNEaVRoj.!)(+mMpJjhYoZ("0^_7GiQ-beog5@?
%J'k#3^H@3#.3:pKa@G1dD_tn'a[omg\/;j.%@`"8.b^X_X5Vn)_h\Gb]F'CSU3EPU$PR%=8Kc"bn"Z:Lh!U5#*1/a-)2q0O<UF[&
%V;!lGYI]?%"Ea]iA0.#@qrt3,mkA"[ZIUWi=j"D:h1LRP&B3n?D!E_<&&#>%D&7u4.F9uf:&IWc[Sp[$OnVQo7X32H^?=%#$lX]>
%o1h%8+)`UXcSap)D%&W?c6@j78!MnpD4)VeLN<i[ckl]03+/Q+@<Ym:,j$^V`e4,lQacDY8RHkVSbPbRcYlT0rd;BFJ,R.^ci<tD
%4[c'j"aZcn3"8ZEY[U#gUefp%mY0.elT@-`3(:1[r&R0dfRc##IAgM.H*;4,i?n[B.+EX<#'AQ6n,]JmQacDY9+9)N<_hIeG"t2M
%e^l7:*PFX!%WX#NF0ESTcuXB+q,f.rq9;'PM8B#'b1VI*?r(c_NZLR[7cC>MEO^=OZ!Er]7(9QN>bNhNnsb"*&qfe,Q*ZrO6bOK-
%m+h<a]7S#^TLFH?!:j5F1kOM)O0P*i7!s(%?Xdt<Y]@`qY-#QrJ!E[Y,6Y=&b>9QP!A81.!*qgrS?fq605o\<QPc5'XIRa5aO+[D
%WN%$^VjSXudOm>-D:,g#_SpP'+6#fgnF[fOM37VLZ<<&,b--K<pr\X*gs8f\9oVKd!I$QU0/TL7h'6.gLgPUPcX1.#IXKh1gaq.m
%;Ib+)f3,RBf\g`\><Ot[%n:VEMMscX-rf7$GgB`+E.32r+T<_6P;GX!Ef`,\7c+a^`ETp9H*LK_KR%Y.\Zu"S>PJ'I&'e[&r<(1!
%[cr+STInuI"J6Qr.pO+X%hr#Se`];-)<&NF.J1e&GPp&'e;%':R2`Hb^(4bXj@9=i]VmU7hE_\GjcuZ_;%TcF)"^UiWVh"e?Xdt<
%d]WKiC.9n:S['2SKPpJ9?//N3rCpW9>]mMXB^O;3<j1uc98q!uQAk\T91`Zdk2d\q+!r@J*O+?$e)Hg=>e.1SlSTCdIsL@O^Vo&X
%^sY50=-,_OL&YP:bh=i`s2"*4k$B6*?OjP!\8mS4n+]P7bQf\i["CV2W^>Q01ms_XhVf-8++3DiJhVqIC:eNK05o\<QPc5'Kl`d%
%JT9:1N<&F`jP(nk*mR+_1?;O\]?rL!+'jZQiuNW+U%qeEVtOLY7q,EB6aRBmHfEut>g3I_M<pP)TPun*.t#"m0/5F.$Ka<1au"l*
%j;Bh\pc;26g]qC_0Fk?Y!"N&P];Qk2jfNn/&qfe\@#cu[bgbCU=dp2+m\t-mR)EA"7FL9h0\T7njNCd%r7;J)CKd:$V'A6g<2"S:
%Cr3#:+qZ,bb(Q:N%<=TbIr%D8`h4FBq73d&T>;;:"Aq!$fqnE=?6@iKJmLTojjLKQ1!HIbBSm:=V,hl5O8&S=n,:%F5f1TjdZO,>
%U>pUl<Jb]-nQH]#puTcd5PM4-j99T]/44a1U]-Up?i\kDhN!1]-phAO78(Dpd<i&4Pc>T83*^9\Q[eE.rZKnSa4pnBCfra=XtI$`
%30R(QT3+cH<>7_/3ah3l3S"//?SQQsKOX@9\1[W%iasSq#0GSAq`31O3hY2OP:+]`eYnR<+kHel#Q90N(2rIO8.;gZhC&D7U$eYG
%0j,2[<f\WXjsG3$8kG6?Zq+YgG>Sib!hY^o<+QBJr)'3&Hh_?Ao+MIsd]V\CIJOU3A!N=Eb@i8Z8i%l^V1sZBNP#Y$KVa<CeLH5+
%W=tkZa'/c:`ad1V-4HS\j%WYo%!Z.)LCh>@r)(BS&oc"974)+%giYGii:[:Qb^$"_eq8c%MT4&-9/mPQM!jCg2s_9OKZ4cmR!=4\
%KMb.Amrl1)2s-*-E^[N;!`X`p#?C$4;ZtVF<08\.8uJVD]^f3jV4NYL!:s;Dfd#M?\s??DIV_qa*g;.KEegL@7E#`l&5kMNV2VQk
%+>lDm11BR,kQ0Yi:r1AA8#I%I?RVR[Vg7(bguod;P!%O_Sp*9%Y(RMkY/'Y.#b@I]9e\)WEH"%'Y_S%YAXZCOkJesj[Dt]9OiUrH
%E%Z"uWO(PP^l?o%Z_3R\VAR;N:f8F5,EDX-4>aAQ13XdQ]_'/=ZY!qa1O)%d@jNi(N'9FVrX9p47of%PFnS`CJ,WJ%J#eoC;S?IT
%T\+g6EnW)(3tnqC^35I@K"PW>r&d9[ph'Iq2:aHV&C`21cWssQ@Op#`FRbY/KhfbT.Tb7$+S7=()C'8[?oPFH'GNJT2CD^NRFSfd
%_]tUW2^=P"D.#cr,7$l,2Z2g;<(\"!UVr]:0tei(_>OW&;"UV`DgK!&.YD6k7f9,)F-kseWbJb1LT5_>CPVf6Ot*86%ujtnWlp),
%#'=!R/o%XU"a.b0#/1@_<5>Jt,rS!<#__8sl?U>RFoACN9,HKcWI1/BK(6Whbn5;[!$X7&]\6gC^suT-CJ!5aGRH6JW3/A?oT]OU
%c&7V:M\bsuh*Q/=nR.>\h'CSc?O9@`a2C7V?bAK3_1sbqRO4.Qq.cj<Z.H:NSUDa,^O7?C!.6$5dXNn&H:$f5cC(-pCeu?1=n^S!
%:$DtDVT).]!4!irctEj$21`)uSA%-XbG9%&0E_"@c_?U8"U)Yl+BE%u)FT;[nHVmToQ%On\UB*ASM<"?8C75nK?=_O?rSl=M;37#
%598iT:[BR)L5hULn:2tVDY41i<i4:6eHoe#OGM@&j9mitF?9j>+<tAEf_%NGrA722Q?s/0_n$Gs/1Et7(^biHcHu]QP*Y_E<9TQg
%lT5AT\kZH.o1,Jg#C(c[:5N(H#?csA0L1W_COl3Bo9Rhm:[1?jE?SMK+2!o\AcXM1-l)Bf)<9!]nBFZn$t`kT(t8eZi3p7]jq@af
%KuDAfmo*F)Z;A/&oni4si;V#4.=4CYBnD_4h8p8e3]@Z?_n6SBD#dD1Qs(VC,mArbCG\V^`Et3'f3KF&Y+h(ON$]NDKWSFI])0AD
%_R?2pa]kOWOB\o5p6rR^?lp'$%uD]LB%O>A`+g6m0L:<G@V:m"<i\SM8Sn/o.W0@)b8c+I#(^-d60M8>VP3(D3^,K*_3#-oXE;h.
%W!OVI5Ml$3RT^bkX?OJC-\iS/h9qIEXl,njM4/#*'9#3Z%6Ui"k]Qfe)^1!=cJT>;,'Ks0m!Wt4)*8!k%$0pgfd,QpjgDu2+f.i5
%qUGdMQbgfdX_t?$I"<3&L4.'E:O35)=GT`(UXN;41_a&;"uuFbGfmFB@.@g$<2_N2Z8>CsboA9Li(b2jQGN%Nr1$-i-5RO.?bY2%
%[`n+&4cS*8AHir]<`2fC"U]-Xm??lr[.t^cRZaoAoU43LnIlla9]9IplUKsS%gH9p#djV@7QR,0ONpNHY9Gg%IQ5Rf=&=c*d1IB0
%Z>'pG=TCW_@RL&U$IPfDXXe"k&O2K246Z32ch'W8oeQ1gaC8QUS[PWV@fT_(LBDijT4pJ/(cpU";VqWtGiZUD>r-5uWC()Lj^fM5
%VA:(<PY[I0_/RMFf?Sr<V#@4!]iOf-:1;`LPm><sU,FQ"9*dAfKb6T__H>-ue35@.5@^O]+r9c@KO?o2/0:[%WB^a;^27ZVb)l*5
%7iXt*'T9+q.3e.(UL!9GEqD^PaC@oOM+Jf:4BDc&`-.mYD,j8gf$/;&,+(gbP)W6a9MA,6mEufD>!lX#\;-fm:>*(43UbUiM8nf=
%-SAIp66Df]^M&Y0=`G!3Z&l!>iES;ZVRPRq$7TAV9K#YfU5#IYX[Pp`Cbc"Ha)0lbZ<Wo3e:HE]#u+^PE"A,*($d5"^8b*4,ci9I
%5k:S0mB;<a"@(A?!"!Mu<HgNH#c3b%Ct.NB$E6E/$;XlIE!9tc]YdI/.gX"j2[7P\oQGfU/iNcAW`W->7!.1RC"Q6%RMZN&VR%tY
%QuO[=;'4<gRZ+'6iJZBrW.;tAFf:E3BjYjdX-"GO_5NK9oV\R`EhM27Ckd%&>p_B'%:P<>f$/j&YNk%AF]0G0!rJX/99uUfWsg7_
%JA9KIk8AnenCBN;J@Z`)!'SH7B9C305B#g*R_ab/-[hD;(de'KPU,(@O&75#ZD</MH`2hn$#g+tL5TbrQ1oJ#V:()--pLR@_\b['
%ZV4neXrF-m`eThF(o]70`=YP%G;N3,o1Lc5&4kNAc5I+i>\J:ukk8VIaG023rT8*TnqI9`;iiDNK[Q7J`qVt3$'Q/M^o.;dUYX!1
%Hrb?%fh-[<<0Jd*0X99\OHB'h5AQ#k=]hs%`'/SE\e%jr&>%'"ma(nKe\ZsRo#8n5g=-#H='c_')![ucO`60=!1k&9=0[er3o*fs
%P9I/7_Kr'E8,Gu;gOp[jk0#<GJ1BhFh$>_nF:,T#(D8g2HE$4C2j_t%qY'M;!oH<MJ!uE`\hgd-h1Y0IE3hU=Mjgs9>=njZ&S-QV
%omYCK3*OUS3I!OEN*^^`@GJ=1(53>af$r5\@A>U&F:1T,Im@&j[hh_Q%ik$DnNjr?:PP$1EgHg<3X]B)>Tu#!Tg\8:(l0.``pJ-X
%_S75X])pr!KC!0(r[tVkZ[rh&</)(BH(Go(^*j)=G'4`n5BP0d0oSAn08Jd8Zi0UQ.^B)UJ&SuiJZsmGo!HMTXtJP5OD(%/o'#Vd
%_u`Hm:e_>=XY++7;)hOSZ<:"Uh@5q5;bCdDL(hm5ZhOs[%5FATcnOm2]>OnlS+5%fc33aNbCV^R-"U]AU:,YO'+`Ksm7HS*L*@;c
%B,opH\R0,]do/)'h+_+'#rt`E3CC+F]?Gb(F*=)FBYQt9";2AY6FXd+!emP*Rde.b<("1n;cFH_76;1IpOk$E?KEO7FA-1/J[P^+
%"@.@]Y!JpMOTs64+KgM:DPGua+<+hsi3p)s`WH7&bjNQip$>XP1G"e'd0W/<R`#X1"@dmf*&,m".)rcC`G%'bWT8O5r@j^YFPlp\
%!CSL2a#^6uX[W6?,/9W`!KDpoks5k:H]uRt-:sUmi4BZQ2*\k>T)ABg/Lb0$R8lc>q3Je?ninsk!4b$UHB<5D6?O+Tgtca_?_7(#
%`"EnuJZ2C_Xhq_U$@lg-S+2"2E!e&Q5N+i78s)UDkn#,G59Ym)*#Ng/fEZUMh\(ir-8bhdQS;<k<+lV'o8rtRrPD=1(gR=UkW^[[
%T!(W&BaT51D10F`LE#]I#ieWuqKKWn<*#jIU#@6IG>%:1X.dQ+1WESX:2VbbAf(!QB2+FOF#jF2$-?@i#Pn!N$-VJuR9PKo.m7rT
%`,f>$H.@@jeUBO)r`N9mna0@]Ee!(C3$[3)TG_*c8Fh('Dg@54ad+a?L"8AFBHQLK0&[-\)k4M:g%hrRTqCj3-iH\:7"L20Ua8i\
%:RZX9muWfCNYj19jWFolHH52(Al!T:cD@U=31Ae,L\<:o"0;=HlE+R.GOmCKJREb3Gh[<k]YU@ebT7N(SZ.@8W!N.*/@lH>44aLM
%NqRfZh:Q&CC-HE`4??5<`)T&V6o,)$%?Pd!_E8H:_lS#7'[iU@7$oD/!48YP9#fCsM<"sG$49ThLE'87&<_!c&`/+^":6:Q9HlLE
%"X2WrFsZS/3)4051kpQ.!Y&'!40a\WYA7T8H:%>c3'Aa50N:%C_Ycqo@UsRaA$c7lkF2sR2i*Buf0FJo#e)j;C8XIN7Xj>?,t9S3
%<UQc9"9o;J\#VSG:1_p?d'>rE_res0AN<cpqCYTVAT5G(Yt]tf#B(nlDkn_Cgtu@hE*ISt9noCFpfZ18''ZW&6!<5'&_+!Ofl'EG
%.)VMIS*O:_8\6C@pc7E6!OGX%"%Yl#B+pCE?W-rf.V?VD9a2ut1h(,."jJA=@-84^%OcLUpB5L&<6@d&2$?*_(r_"jE=eja`DOR>
%McMM,n@dBC"CX1$G;I,WH]H50cRd;]$?qY:/-BqMM+Ib]r'V&SG2HU,5RQn7Y,4Q%r:qOZaBC!469rjiI0"X7-;bW8*=eCD`hX`2
%kN7K9d2`L&m(%:^[SlIJ[TBm\Lj%X_pkMPQnJP7;l2ft)S</OU%ipOL<ltlBE^"M9F3'_Ag,f!]"eODH,M0G'$AR\Ul#Mn1eUpaJ
%5Ri%"mg!fB>cBf!%nP#@<qo$Zlg]`>3ufH!])`_"`Vcf1"2BRU/$cNF5Y&C)HdChnerhJCr7E\HTpr7hd-13pn\YPo$!qdZMf;:i
%7t<=fjc==AGJYKh7)0/GGgK1i9h:_nNn0O=X#/!$H_EW^%;D2h.*S`GqZ@A*q+HWJHk9I&NG6aKEmN9Ge.?MqKETkg3)i[:P3:&c
%6lnosoVUod\eN?KpXDB!,kSs:?YUNJOfr%ci37.YW"q8bX+XG9/I57TIV/@U1a@RmCEGZbp4E-u7E?l0;tc"$aWuJ7Yid.O^9f0u
%kX$+(\;gb2REo8kRnHp*cq)V=#7A3(D#7^&d>S#eq)`.ZQE/?"_IfkeDHXB"fd!d&lS)Y31e^]Pdu81GB_=aiG"&IlCkm&"WtOY`
%a0OAkN.S%qE"WWZZa6J`]5W9SCKW8D&:Hp?Vtc7ml&N='XHu)K<dR8lGN:W-@ktf&CLQUQK8i\lUD+4]?qelJ3Q![MK*et3iEJ#[
%13O1BJM;r+)G60q8:Mn]CTHa'Q.JPid]6hT?PkdS(8PAmK#06%BekNL&(XbSV?XLB6cKrL:mAcI(uTi'!HHI.E$$fH%)CCe'<N`W
%Jd@In8ba;<?jFK%D5R])l<T*U[(;$Q;P`>mfJ&Gr>*pX*=Y45r!/XgtS&"c0bm7p3(=R/MM2Ja\n3U.(JgXTYL>uKl\:\`LQ;CRN
%8BHu/+V:>'>c-k@5)&i556ATX)2+KUc:c[jr/ck$+uV](%LNT=)1"8`6d.Fp7=s<G&)620deK'DYX;usEEG?iHOm11M1cXQRcrpd
%>X^$-3-fjm,CNs(lNPu#_&4pb,q]r?)KdJ(7`j-_:fdXFOg!ps@fuK7XebP7faio$gL*fC1RW7FNj5''M'ikOafjsOIS^*!/L@2]
%7N<QhfWkSC">*&*O'B`_L-Nf`kdS9_4O!imAB'D)&)K;3^IfuG+`ui29nCB=<eg`O9YddH^/b;@_1&E1\lM9VYFX>NL%-'Kk9TGY
%,DTu3*)(3WJt"QZj"LjKgSAFKArbaI!o!p.qWOV-W^sb:9$"CH4ctK'kut.o)k[d%_!9Dc:p\1s!]qU_D_TD<-5TDd$)e2McsTXg
%1<UDD(_Kf%XhhY&19$46G@E<W-*fqd)l$M$!R8cs&l64b*NsMa08Q7Z6kN]Y''"7S&3U?lTE$jq\<*+@KYiaLrr7Dl#\f)2lc]^C
%!0Am+WVKUt(7rp\I=npqPD$1R`j!%f/=[\ZW"84=nKK*nKTF4>#Oka15j&f\%;S_Y-q[YNTl;EL-b=;7YUIB=:LUsLOi;PfITgEh
%bq%V^\oS659U@JV\La/ih%@1He6=hq2r;rj.iT>-,+o5oCEBsPN(*YL(A8_;Bhr0K$>.9HHD9LN@Q?9&A$G-7Mt\SM?=CO'og_OY
%,+`9G'eR,'9SC?%2_i)u5[,1:LLh]!N7NRXDl)l14`_J8^>8Q$1=@Bi8s&,-R7W>?5-/b-I1goJMIEhE3nAbNf2;#+piK/8gmI<:
%]$/NQf\9h!$mug#*F*d[SITEsBN$'*LSGBQkDe7!Y`e?a!)KaBqEW0NcO/SfY:a@L^XtTa[3C4jQIC^^0]E>6<Pqo,k+$g"+@s<(
%:0j\uf2/+HjW';2r/62CET',@\2MSP9/J8eIl0?SiAO9A>rOsr+%$BBs,2UGZ;(k+^+rg'+j*K;!`aMJ.r/Cc5Gi8h^6<!,)PY5E
%#&-_m("L83B-A)T%_RFk*Nbe[f-=:E'Wj#j<2FlXRk5\D+X+E&?=Sqo)PG:A5_(Jq.Xa'G)9hEbAl!W)e'R$!Abd@R\$;cOGb`/D
%ZZ4?.D\E@H4cHliPtkBVQ,+pnP*bA?rXX?oZ=?IhA;fg]n/l[B4<Otl&*rFj!F.d>]afWU?Zpo`m0o_$fA.reaJd.*A-3""LSWT\
%1EAkp3-)s2WQU37dUAJP23beHY(gCeLX.2Ds0pjN#ts$\8aG]T+K`pQoZk=Q6c=ijM#+B>;8hg0;m;UV<OR-AUekW_Gf-P;@W.ih
%CJeb4j"_]m>m3B]"4-3CSbOQcm%"25s'p%SInB5i<UVZs`('=Y_AM6>E[r'L<]$f5Zt#A<7LZ'MQu'rY(odVjdZ0Ug&(oT2Nr!@o
%=2UOSOohaX,1fWN^9I;)'"B!\dT><r5@c-%7Yi.5Y*3ots$)ErJ,=^A)U:p,\OFF$RU]cCJ:Jd7\LeV#0jkEG\^Mq+E^8:r6732C
%CDI?>r4"r*"d0>>U]/U>l[Sk?7NgCdhtOncQ<a/WRWOGcj!!2e:Lmjga!+@&N8+JS^d(7X^*t2#?$]j9T>*/MkNHr[<=2EVF"[p9
%ep]_*,Yes;:%$1GTAZ>fs&%Z;hu\D)U!^'*Dub7d/4C`SIF.$WR"LN`9+"J^RM;<>]T0YTf8g#o+V5@=f:Y<_E3khZjbp/B8nAIL
%U5jmVJ#qXs.DSa$mt#@PUlBtF/md/bRt]JEb8c$\=3L^fOJKDi%:KPL<)C:crFY^Eo_[EYhMUU26AlaR3rmC*(Ig_uJJMqK4YnP[
%kqtcDT#ld4;Vshq<9t4qj![;'X$9Vf[d`mI1sP(5!2P%2lZaP!q7mom"?TsoN8ZhR`g.kEIs.:=o3>/.=2sJ[Bkjb7GX,1]PfdV)
%UA0ls4>CAe+rDZ;[PfBPQD&aHo6:iSipmM'&[HKrSX5`MOX/7Sal>k\mcjJL<<3Cd4S91g2eoXSX.J"J>1eOn_OYqHg/gj$H"1`7
%8<Sm?0*i3WQl\-f@N^=-3uDE`^HdIEh(:C4$^k`?mH+QUMlY3(R5SCLd,bZ9.JN[$#W#3%GcfBCK]B^*":CP[4qPT"f4,dCl!+QM
%<g:7hM\dO,I^g'?4Zb<[a,OgsEorgRnlQA5O>Zs@B]-tT^58\?G.O\CO4B$R,]*)H>bgNH5VB(CPQsl*Y(g'FE$Dgi*a8^.3XrgU
%39]D61sb#`Lb5Wkril\/c0T4.G&!(:q!;VHZfQ>UdmMTo=>eS@',Kl.6o=)+B$`ht*P%1k!Y@4\/Quf;j<eILeQ0#WHB/93YdF+O
%W(FW']@T0P.=R0nlR:S@quEgsUR9H3Aa5_,H<L@0b/::@VOgMY$)dCVEq%R^UGS$<.9#n"\l"D"QZAj`MiM$:MG(1]g<hs>X]KI5
%>#FO6RK&P=+V02E@7susidnI?.]Rt*?OGmDh5.&f.#MAAh,d%0"h=hf/Eg$^."Por+U^nc$*!qIj,$^rDGre0>GLj%X^loh%K/et
%#A5#)@l;_cLu<V00k%`78XHVk"AN\r:kJ!D?*)+LbZDU%$JQDu*L;2D.d)EB7)oR^%9kl;[r_S$E!WT?*\KR-2dN]0hP?,Bl!Qa]
%;0N4')#F:5P!F\sgPC4P`h#$0Z78Ci#oUPAJ9L!I[sj-Sg:N+)qEB.07(0qrUkQf<mI">U!NHu/Q%U"Tm.tPZ.:[tnGQUURL&eiV
%=$upA\C_LY)ie'L@GNN*,/deE<5Y2q\NDhsXB7)U1XK)X:>ia7DNfXVXK,H(49De/$Lk$W@0$hE++Bf(V"c5K$K/V]19jGQ09sKk
%qis*4rNZ285RN0JQmQ6j)6O7gVP0egB^3_b`rBFsP6L-\Nrn#k_3?b3f(obi<kV%lK*icKaRI([It$VN4@^;9=U@m"n9Dt.QU/*h
%k:a@[qrN)l[@NB1.OJO`DiWa2\+B4gWiGb7_k8oQpIHILaR/[<:Juabj2A/H[Eu9o4Z2S`>M&0Lc=lfo-5o+F<?#]sfN;LH$u"t?
%_7[);VNo3]6R>hUY=fRX,2!UeXCQk>)2F0i^7nuhF%`T*Q_'b#p)@2AZ+C"^,\-%Z';DFjd%]0mbOMrd2ac$$)"11KYb"?BY]s07
%=a^jnWSM\IR2rhmUPni%TaH3:-l#<cSpHBT4!]YElAt-Qp?t%'P!p$`mgiEup7J_N6fkV2QY5m:bJ_A$lB-l$-MD/5r6Y$DeatgC
%GSVtT]%?8)+Y"LmDO`6\R=f,35(:Sh,LPP=@XM#L4,u,PgN:NVR0WR?mC('_8AmSOYam#'<A'6Xa"^3n]oM8i%-\aK4AKbkg=?Ig
%U]$qqp[(aIpk%8iY9J*hq3&4G'3[qFCf8fon5E4\GZ8T\`d5HdFI?<_82)Z`M,7-Z"3'/O<C(usXP\pF'f/MSZTG4"7Yk4++]\\S
%KJHIa.$7eVZ*1-m9kGCtAdV6IH/N6raGm#^>-]#kA:="pg`>JrFs?*;K>uuTDij=Z7[5C$?ApLT1O(HH5\Bbtq?L^WQph7G,0Sko
%:df(IN<((B+S;u<#+)eV.%t(LIAsmhMC86LJ50@-p^`Yoo6CTi@)9*oQlZuWZ\p=2(XG/]ha;i$?!E&qToY;k%pfW9Z>2dXW,LLY
%TcBHi/*?113sPBqL@\kP%#W'g$foGhm=1E\?i!<`d!g2u,,)6'$e2,a/iRo@bT-_tNai0u>&kVB5aVTYnYN2]ou)tP@&p:,_'C_U
%&i('XM1]ROakNQJ1&0pPpNI93MF>+]'HEsk1Jft!pmenEST\VWh$AK38VD.4d9FYcl.60rc6ehZP2K\m?cf910*AV@enP$r%Q.d'
%T+=>5:s"lF0BA#b(lrlr*RgD3I!d,uLSb+D8:\r1l)-XIK^,Z43iHF+)2_7DSTLhg<Q2rTi/*X]mpd8EX_HV0CgXs'&::J`SG.^?
%*fjlb,[]MZMUg5X^)[)XJ1tD5/DO@)rK*,ZC@4f\-YL7?26o(DpV,jqnX+`]mF.btil/IIE;Z#j?[!]IX3AV57=d_go<G4j@<m*6
%r>n.+.#@1X6f2%#F>Ku2BGu&+RcU6)&0&nN`Z7[PiF!ech*\Y/p<.l_5d2AL-H/>J1*5=ZeS/f:ATQ?R!l9dF.hjd+aBR!&of$RU
%V\GK)4<iTe?E"G:pdRqJS`<%3*,3\NiK.DIHak_sXDSF&+7VAC)46]8er=_\qPj7MCMCT_b;?=E5m[IQLcst`7VMbbe"(=KBY5rf
%lT4&BV?q)`-76K<5iNJo@(U&4>Mq_6li`;>gQ;KjLPEd3ef*aSZDdLIl9je5(M1PSVTe<>`!&\L[mXBlKmAk.b\M>'JhP=\!8%Bg
%B4`Ysq9dTh3]eJ(":0VZhqXWM[LZaQl7fmeD3m<J,<&HE@=OQr7F%bj,_)3L6^:;c_H1=f&dZQ?/=IKM/al:65WE9q-<VU2R"GSU
%oXmU;<h^W`E8TgD-^aM!OL?;fKR0hH&Ft!4IPUM[A;kXdL1CT`(%4!fI-'!J5@/j4/3k&s<W_F1G_dp)Y\g-c1V,=Rr<q)En;H]M
%?F7S+qX;r@-X9T8hW]RGEI"f]!,]gqJ`+j5]u%kYDTp&YA5K0/_\l@_C4hO$i@a?`1^iacS<d;iRZU8r-Tb$;'*VsYjlBI)gsDl-
%O57:]1gTf:Q4<q]6L%ME4%#.+01u5$E<cib8As!o'gB)CPUm$-KOf1B&ZGc1j"#%Xer55Z;5XY..NSrlgk&KH>eJRTAq<QM`uL<@
%EYMsH,!O3&+^>\Ljs3sU&2^eff7D/5.tt(Q_GRr?@L+@^/U708\7Xja':C^pc`9U1o^YYfqXoF%H$m8+<DrL=GBTV/$G&Il1.65a
%SWQ2$H>77Y>!S;=dU*6E2A:46N;Y$GoeAVF`RX^(#[XVN:+)qX62&at@l_=80&`gFahY>0qW=l[F];nQ]nP)chr*:EU=.F2MjU%s
%o6;hY"Z@mNO7)B8o60fsfJGkW-&)Y6@j,,Y(mVbC+5k.4BqJ+WK6(a4GpD?gh.s[kpC3c-k:b<d%qYR.<ZS,RA.gC,bZ?ui<na[5
%5_,Fo[s;a?i%7L_FgTjdPBH1T@cY&8XW^Q^hW@1\ZEScF=&mEfPk<JHO=VH+Ts]**=*c9=PfFS$`'+7D]54Cua$_73d!Bo)OF``9
%nT3t,pRmY/UPT8`X>dbP0KSNQpRe2jc8mEFc>g?=+ne#TpJf9*IC>;Pp.00%_NLmWmllbG;Ue<7`c7$jc#aTEREsJrrSH!]i9SNF
%#TJ@`F-X'QL'I0m4>1#YSIqe,]7lmg0$ph>5&m!?^f18UD#(4,E9:OLhQ/B,[^S^5DF^aI\A>F<0N55u*-*oj,9gea!CoB[!!YZg
%cNNfCYp`,*b*$t&?$C.G*YF]l(gK\!Yf$'??Xo^l`K2q_I8X2R8PSTC`.u_"`^+.Xj!nkum&S4t$-._H"M?-?W6S#GJ.OK?$&K'H
%K]iG**mk4aGUbG+NTMirK\f'&N$)FLTH6i8&n\+Fq6)&jHN\$e@r3W[-Q8?F%]Y-^pIA>*L<=+M7i=*[eT-7,JOQr96i$sncS4MR
%<!7slhL`GQ#f_H\MU^LGm/_2%j9'>,XIJtuejn+bih?_pg$Q$?O:od;EBXHZ#*d/uO,K/M&I95k@.u7U=mJ]]htfq#^b5a;J1]m#
%Qm5_.&$b?h!u^Eh:O!ls4/V1=N&V?snesq"Y>^?r+1an_g$[u_*!U"CJ^bn5L]BskMHSgZ'dq:8)1c?Va#?S\Xdk@#V;?aD952DE
%W56Zu;h2I7f3`c/%3H]9(.U0)O,)d8?W>FGqm'Z\"%Wdc@b-ad"&K$2XPDZsXK$;,P@9;qoBU1<^c;Z8D77e+OFW/!"OOHJG8dbN
%#mTK0DY(fORu*5LJC8Wr3s&oq'*AX6?VUZK<u.L3fh@YL\2M=H&\s[V:]W8*hmFYt>-$RTEg?S`'eB,95FPO$Pd&5ZDU28N9tf@"
%+h4]WHU*I\#P&D-nRan&Ko=b$F3lWLo)[<EW1D:S&g6CMcJL:R%\G@G]8g*8LE[_^\2q:q`^kDIC9*<0m9DI!+]c2Q]'7LK3:?iQ
%AFDCJLt=pp+)Y*jh"_>Ec67t+i7BDf#Fm9,cF;gP&q/_:9&s7.6AZ$,=s.fG'kP<TbaGRN@85]WT3K0sGJ$D[Q7rm$WVC<D_Y&m6
%MO*=s)@C`&,`9NQG-JYZPA5/\#3+YXe_*"B;'8c$YluP+9-TjJU]UF#FX!##*9!-ubmH/lPWHS:+rP<S2sgYK<*:B3rRi18fHBe`
%k/Q]:n,S1j0Hl^^*p+4H)D(&/SE:?$G/r2aI'Q0l$!er/TY8hc!d8$!8cg/YPL-#:0(T/Nr`gfPIt)=SFh0q0#_Oh2aNd5ZPh'@G
%",]2P/I,^9i3:sk-2'VPSgbr]6q3^gQZYSB,QX4uFL]e\X-TXeZ#KuA'Hik"f]:E8<RfSfg+'=EM&"V\qt78ZO00tkJIC@->Z6l2
%6.($,oOH>^.6K=QpOs6J,*2[`o/Koi%9hc\d@7^u(25dlY?DS?_`Q"RM8FnoGW6'9>>4h3H!06j>ZSe-Uk;`B!RQ]X/qqoVbd2DW
%jEE8]-;hQ2bR.Q!XQCImG<iERiM#%-FTMTR,7'IlZro[Hh*sG0L(tSq_E#;r,IM'M*6GF'7V[-J,!6%^nhNoYXag[[o<hsijG;oq
%>f,p-F';*l!3B"S!&F?d#*2>O,0N2i@oRteBF$/!O?#d,Y^nkOh+eF$-.Kd/]WCL0$.7D`#2(LPSr9F%11^f#!0i`H??!eb&2]oo
%W%Mm)6/9fT_%ZtN_WWh7B/]o2!h(g?%,^BOn#O0`b*t9Y8p"KB@;9YQfI7tlR3"om(^eYk#BfE&q5gTd)t![X.,FO4O6hORIjY6S
%3^DgpLaYc"21?U.!*!%<Rke]X@#4:bB*j`#HaWVkKh%BpeT^2,%^>`]_h7]eL5BXJ#:2i\4U-4%'i%F-R97pebS\^m\[IiM7AqO$
%p6^:#j=IS1"Tc,S;tiUf$>]+nAH7e[a-'tmkU`nf(DYUP&m\c#',>8!4uNH2"Zu9)Yud</A+FTL8Pg+QHJ;`605<[>&KN.I?Q"A;
%%`Fi]0M4^5_]'VYPUlk^kl]G)lA;XEEbgZ":VO]P$Ai/c&+tPtd#OY_/VO1c-f:AO"QD-tU%%jR.5iRG,%<u1^KGbEEi?I)"^?53
%c*,;7<e%J6RDiXuLJC?5WG"4oooh&2[)_^P`/C43T->[N+E$Te2ERtAaF,1J$u52@aZ$ZJS%1`//MM-JjnT/bMd\iJYR\fmlK7t+
%74r2Jp,I-@S>e"hF!&Z*?ru(M>h0'1]MEfPdF\/5gB+&;'8]Cb$s^%&@8pXPX7=QSp4,tfL;H>E`iEg9fSmY%Q9JWW*Q5iB;'KE_
%+h,tPHl,U$oO3I'e%XO?FiUs/[`MCn+/TsJUBnfUU*FN$gA,1Q+kFQRp"MO'W%qQVYTe)U*&MZQg-glkKrrB@jbpKiQKr-UYPp4p
%d/le*V(dL`0<=,I.k=eImABT]Wmq38Z'*l:7Sln.,hqJjV:DK^0uMVDi&K'QE!T3lo&2KCG>#W_$SEqi-1X8s1#.,$ohpU\&?mUr
%)2LhLIChUNes*L_]1-N>Vg+n@W(j_sLR5u;'Y_Q()$=P$jnA2sn<#^`UL2'OBZmUI+24`9qRind(?kOU3%n2-;Ri4Oh/b`l;Q)iL
%!lB#t@A"J+_njl[e/s,no[[\%I-&XZWcRCg;If%X.V$#_<p]S83Ssi\^-27.P,!!eM+D%$`*iWKYW9l8q5TAhLILM=:9ZJbb#7mN
%#Zh"hb_?.@4XAp@30?LL?cI*dhoKP2TGU_=KNh==3M<aP=i^`C3"Wm@au/^f_O,GBn*g_=TB*X,5oMTa=H>]WR2<D`+7UE'<n6^G
%$NWT#m_I[%p9$JrIg;@fZ"QT"J8qN1?tp:S>1KR%B1NE+6#0WEaOamCdZH2MN(f:sLEN[LqR@l/!oOR,_2(&WLPXQEQ;58"L\4bL
%'!KF(+7'RCW#lU<iq0-I;@Fg;Oqh.?U6[0@^2o1EmjfJ>[:UY&M4]!jDlTH6Ff&k5.`udIfh&9=<2^L]FS8pQnHqps-V88@bY:;\
%P5Ee7=k[FRb+.rQ@@tZ.OAf+]Z+b?f;-uC!;:+H<4;s;o=Ft7ILI<KMgoJ.q2AO_f8u;TYNuP?r;d9NC.H!^;3ki_'336IU,4<N4
%aCjgr1`q*J0QlHD*QI#+/aMAR:d'n5riq:CkJ6\\W;hY6^t0[L7Jobr4W5?2G469_XaPP<%RqVZb0EDXCpRW:7fPpH>Ja7CWYP'\
%HNlqCL);2Ba(8Ac%j,EkB]C%IH[f2$msZ`1"SWR"F40Hg(t+)+^3Fo+=]?6t:NT-*LJgGGA0^)B$n9s->fT?)ft33)Wf42l_ot-h
%%*@*<,KO,#7grPc8?m'$8"!K9lsP05h.\JCPuouijDHjm%,"fQ[53-@MA:I@4;'p1lbOtQ&3d_C5f7rofHCuKBqqWJ8\k6I!o=3P
%,b[Ym3h1a\.I4o=HAX3d($a:/k[on8-c4dM"X\uf?C:-JkX='/aj8.&6po9R+Z*N^4V/UM8H9C<'hW?9/Uh\)b4I"Cj&U7?4<m*$
%jZUp,OcYAHcXS)kM?RLNnOC&l@cf`6A@8`Lm\sEn&&2aZ/L8o\#]M3DqRTR4F*JRI6,DVXN,a3hIGB37OE18[a8^0:Vt^QBGnc/M
%Acn&,1aRS!M58%KID7,bB#Vr$oab$`iQ,\eQGMY1q5;7,7+`Y1">1orXjCdbFPKEB8cP&Z;21C&,J:.3&H<flLIG2\/MBOLi+,5o
%=#_q7ZiE<*XD.D&aL9)9&4I\Tn'Auf?-eXf:\,sFSj1DK5874tB7]`Z2[s3CS=CrL>ug_/!]lTKDNo5cqJ^es;r(drgFQJNVChW]
%1*]MK6qK;WNhpp'fgCS?pT!7!,DE7F]sVF1H1$(&M@jfY(O<^1Lj8LY;7M_,$85F<hWOH9\2/Z7'E4[r!,C'nTs.,.cQV6enD$Aa
%M@e`hR2Qc]h8n6a=74Iln9'#0^t&/>dir/M5=T7o'hbX#J50.<!R6`>/N,sX;DQaH8Q2L,qVRtNFbar.cALM\',-5"Xod;.$2iX@
%KI:'SYH5XVU^q-[o^]!nOEm-"'aaulU-^Yj66I)pHIW9,HLHY0;^6B`c-6.5#b?B7l`3K?'hO;X%Q+;d@q4C7Tri9R*uY15)&6/*
%7d-b_1,Qkg0DqG?-(q\LfV+'m!0*>FTL1#a3s/uXJ91hJ_5Bohl\(8!'"Z1nDOnQQ/Fu:VKH#'7"HXOokTEk,E^6W?J*;P,pna`!
%+P@9b5QL"aY8RGfZ[HJG!-i[Niiko9k\@]KX%)=57'*L&J?%r4W=c:e_=56u7_ndN%>.X^8W68eW!&'jXI4iA5h74TLJGX<XiNk-
%.=@Z&J"BR5@?([r)uY`@3/9O'(J`g+m4pP'?pQULqIi')$[uqqO7s&Z,-+XBg.)F8e-$Kb+ZNrRVT8;(1A6O^=k\U)aRmf<EODCk
%,N/DW<r:!A3b23Q\pfe_Lh:P(RSB_/eM<l;3\\OtPR",pA%<jM-c.32&5uSD4#:\P1Dn7QG9)!_dt!<\oV.iP)RF`K)79^TH`b6K
%,/,O=>X4?=rR&")kX;MNL;jdQV=HOiQde@&$/d(A2(O63;FEUo%W!OHVb@bWdi_cQruR?"8E]#&fS6r\a7$p?PgLK>!2DY!/b,\l
%+S?NL*_':%I=*f3X)lOPJH88RI2Tafd_1!Xaf.i>r@ng21SJN)V@-t%L$L^q'\"pB$MVKFG6uOk=<BN4oY%MaOIU"l7,LXs\N#0t
%]H5b%B9pT$rOA&?bQW7`l20d/5"lZ3n`?p>dr0hn0gWVUo&Xf+LZI/V>TN05:pDb^13$4N+KnpQT>=&I>\5EJej:^8[0Whm@$N3S
%Y`J;G:eh<n,2siI<A1#>b#sSil>i*U4u2Vh[2MXQlATu"Wh3qsd`2mr;n\)#laT^#+'#q&V,Xdj]L3.Jjqg@'e\M<-/.ru>kV69u
%D;lkc)3LgpQf!V''>T8[&m!CiE:EH-CER#Y)qX!&'a,@mnL%j\VSo+9:S5*Us.GWQFM]V^!;pWLrOOJ;XUD-nLIU"<&,a`*?QW54
%psH@%*M[1u2K@><j7jekRJgH5?lWdK+HTt_+@[PtSq0oQ:#4!sN87h04['hC(gLh_f;Mjm(hrSniQ&=1=b3+<fh9g:`H`-0Pdrde
%=;esa,>">Q%FkWDS?h,W=8(Z%rmh\Z.5Is=XD?auB<T%$;Th!'r3rD!ck,8R!q/W6I%2N"$P*rQ+blc,ppJUCfR]*N%U>CP`!Xkm
%IWeV5>fPk_d7Y<D3.d_f*(odt=aD9'drQ6$\k8[sk.ASIi%r<*Poi3[#Mb</lMh-,KC2qhf%0O?P9G2B<9TL)rE`51;2m7_\'R(F
%"[,QEiB,4AV\&YAJ/.5?Vit!u#J,u3-&u'_\5[P\jT7(@:[HiYL"t1&.iC(oYY/[6"?3EGLe^@pk55cp:OMrQmqe80=e)ntkg5Mq
%/;STV+;A`.g=F&77lhV?8&KkJN_[E8nSRqqf*ij\O]i9dTpHQL(VbFd@BO3N<!tb"J%TVcZ)g=m;%Q^K]T921,cMhI]Or?iYKN8R
%W;JSg-9lt9D]QM5<]#Ren%\E2s-:q*YC+@i\+:JoM#PUsXS,)0@J%G+"1NQZ';,a^c3/:kH7\9;+P]JMJ,&^]>c3*!,Z@>3KHMO[
%FX0`1FG*55Oe*6de3i4Cl:)-h@9KD9Yi1b2Nm@NY+o0,-./L'Tn:&p_WK5s3VqMt1^$?+*#rCQoA1,Y]JZsRENZ_(s(_E%<ZRNk6
%&:abPH.T=-Kh3Qg>s/HFQ;%?*jsU4EO>mKl6/%%#S>c\rPSPChrRs8u?U#iF5MR"#I)[2,8<+7P31"bqC_5"GOU\0o7%XHJ8>-1[
%%%q?TEB?]B!&(H_2DtZi_<^Hm6,OjgGln.jM,JWq^9[rF+M^2%_(7'G<huK0WI"MG"YIm>N;tNA#j/'i+:nZi<2.[`LPh5<Tr+Mg
%_.Zt,B@+Y!F6*b)_.>jLAZ4+5^%G%>+eS+i=/E2\c7gra-o?J<8j-9]#DU%oJE-_m;-!'K2RERgR<7"+=[f8)E0b4'JD1SSbTJmo
%o[bD-&Kh]<p1)4B]%g6-)`-/Q%'kJ\c^4UE:?s>Mi^0s,QW5B(Sj-4eC[[j>b-9mE5W2.!l?RYScn!l?pdQ#hpA#O4&qmq,(Z=ph
%Jr`btg4]Ol1\`A=<)b+i#hR-AI*CV1.%-H?:rf*0`ekUgSas%'J@elLjX`'rU!FIpP,O1:`^2h1ChGmYdu`F%5(Bjq^nEP*qZi@!
%2*^gP=:t*bHYc/7W7PEn=G/iFggX3C>9hsNT,h+q19(WP/PpOGe-I!$QMmh#:9*D(V9ogsRM?Vg)[P_Xl8Q/;8c>UmDl"/Jnq0F1
%!Q<<&EQIY^U[H/PGiSTf@%)b!O^2=kr%KC4^r_9OC*so[TH'[P':c;@DPBY78h<?XNL"tI#QBDi&*2'#o2^U>?NK>Ciil3AGHugo
%kB<4t+L&EC"e>#?WjoK6CGW&iVW:&1WaXskY*-_8[R)pO'P^UK5A]hTXUNl[(bE?AWfR5KSD)/7O2Kbf5"^KeiXJ^Y>_Dhu?5,dO
%b,Y5XaEu^^@iKob^i)M@rghd9GBq@23(_8"YfK"P]\9V%h1TP#\[6P9hA?9;^c4?crfmee8F*#"TEmXElk2&UNKiBhe>]6%1s.[;
%M2<V*,`Aa*4qU'KSp7PFJ"_eA;Y:+V7&2=gR(/T^hk:FA?6Dl!i5/Igri<8udT7;k/W&7$Wbp"`0`2_A_a!pUDu\kr7aQ8!Di2@s
%e[\N%0n,eNEU`E<Afq^ulAsU`9q(i8@`I'8MLO#a@WBc[BTMs2OVNg$Jr^N<jC9M/)XA^c>eeZV?BiZ/YBOauOG(IU`Y*2;^)>\`
%1Dg#q[d:1T+S_3]$7j:f>*G$heZlnN+lU'?XoRW2hue$g?3mASs/?B3$D4BQK!MnA<:$!UKGqA@6ZQ7Ra#?/MfcEo]V9a*(*89LR
%&32t>ZKLp7-ko_2E(CcQJD`JpdgI[6";NTVH)4lkWq%4:6[1+0"DG<1.>TanJnubJdG3XcltqJoFq"60cco<Gh>rl']pjaufkM+T
%-fcjhNr;n'4L_X5*W:J.[A*4X[UBs,rUJO/R>1U=4$B;qX3i;E/F/\;ll>L\o;Tt\&hNeO$Vpp.CK'\Eb`<SM.\K_ll;Y`-6t2PI
%iN9&d)E'Ob7JO!1`utj:rV^L[&U1o(AlbbQlk4rh29On%H3@^jods\_9ZhD=^R<>+K71(aaoKV/j4<3>^;m?%$ND%qK>c9>au;*t
%d(mg\\56$+!4GtWeG!\tqj\^:_U!i<WhY897YPa5`m1o#>%Uj^lM:P>^i1eXhn.O_Us#)$ErFWR`e\0ml8d'oI39]X.M4(m-:I:r
%%KLDkhAEddnml27bbW\99V+]7VgoPme63%Yi&6fT_3W,#QpJ!74VW+gip*E(llZuE67]'Td7Os;r)#3HJ>N*8-H1K!T`<G+s6;WN
%hG#R[ce2\NU[$leCm<slAd$&:)7/p!qj.4!`#-\@>Ei]r=dJce;ckm%fMDrEdp7ZcBoA8]N3P642$6-p%k?Ri_[eY#)Hul8X+>s]
%)d8^F,<r1>&\Jp]C<7gi"LO:-p2C@@"NRr!W]u0XrQR+H_TI7n;[30-UFb#1nte)Bcbg(U'W\ZIMg@C=br*@lgg%9Z3f6];l?hdU
%ZubLs!ET#s&Hd%tM\%NDbF)PXj^ejU6N^LC(<K@!6L5MLfk%2R(3*%(:$m47<>M1@7NdNtp[Am<&GB+Z],6kXc!CUdLM(aXidN8L
%3k&B+dRct;?UU=_\T#(OR2E20+!TR!)SXpt(Qp4.mDlCn,`ek;8CJEiF_"tr(2?*!)<2gkPPNfDVta#=;KuqBD8&S$FbH&1rcN%s
%27_?IZD/hY#1bt4_m6G!;IafSZ!DlGTZpKu&/I3\Are$6CZ#28AdbK'q1IAiZ?%Pi/aQ0pH_e!g[#($QcP02e=$"6ll;(\!QmVbp
%gl"#Ga)Cq5(;%$MV5/TcMfBXhKar8BL#1^/Ens1/V%0'cb5njt:9X[bVk`WG1=>FO[^CZqB:tFe_7BF,q>9-8r^Wm^]0lTsbM[FT
%_KFp>!Frgup2p]6&erHjKh*aF(m7q"mj,6Ta.`D)+$,L43MD^(W76DVP<Sr7V%3"+JI"[nRH'94d50N1]%WV.>o8TF/@jn:%n(5.
%XCkq[68Z[)#I^Zc<%RJY/_Hn^)u.%@HVN[YR%(n7R&lE\=_PeDnO%aJ#Q"l?E5[[Ob!j6kWkE1O5oO'n]7qYsP"dSdoJTIbm\ukp
%lfrVai$?G8,?P&qPH7]j:0!RpfVu14l5#u[)t$D)_(bs:bI[C",PucLEkdQC?8MfnnA,bXP"A>q3+^$:"=u@hZ#BctkPP_O?CBQ`
%]g*Qnd%NJnQ,a<fKh8'*5@tHdn*)FSZYG"6>rpfaB)NDi.fM(gI<Y0r5#;WV\&k`lkH$4&FMdZkTaM*iC$nYS9=<GH,$c.]]upAn
%_HXb$YDb<4,qD%c4_M&FS7SEm8e=$OQhTge2d;SH<.Ya7m:Q:K3GZR;_.X-"R@OYSm"/,iaI:*h<-^,(/<n13?AUlo<at8#3!ji2
%c;3B.L",-%2k;NfI:d`%)lB=>;3K!9BJEGET3@34@lLC0f4,2!)^Mf_UDF0i]rZHr;\sQ0FF8_"]Q(,5&?hp;\>DsrS$ndXEKi`h
%0)05qEB?Q_A/r-NM*jZ>YTgAG+9k#?ad,E(3DL!=!qA^[$Gg[-O5\!:l)u*n%8k1qJI=au?A$-[JKT/+,7B=UZEpSgNPT8/Z_=<6
%6Rg+t6W"=$+]jA>+l/$;W9;H:'P;ZeL0@Nn7_"J-G9*Wb)TaPc>;7[VB>E\6G,2TBg'opjE^I%E&8a*6gl;BZNl\`3mOPI:Tu.1(
%LSh#mQt#s/6L;UKI2eD:YQ\*F0#Al\%Qd0snbSY8rL82-;UqFN]@eYo5?'=L>V`A>;Jf:ZjYL?.3)<H#gP^q>R@0sRHHSa3Q2JKO
%S0gD9'MLW9nao=F>Fc<e&pmOq1)K*c;XQ`=S(_hKm\U`UCF9kE(+]T7g>.l,_OpeZb@RpX1tttpJrj]'Y_cA/[N]CWm@gLGfGCh2
%#t9$MQsl<BA;['Sd\.DZluP(SlpF"(%1@'hng\79>i3n<3CDLjcrX[,o%qsq.Kcq+MIoD:[2aF/A?hi<"48/jOJO(a9_@gCe76e+
%Plq+D.o[!mZH:[L`fP$l.&r%;D3l<9HQ?+h_M42s<=hQN[&dY2Z"B2"Qs:fi#;`:r_8CkW!?4N+:DCWbL$_#-g"FG'P=&3Dh;#Ys
%][&^-#2?Xtk5`5b8+F$CLgHO&S#aNA-m1h.6ad-2J,$Yo>e7?<NDD[3(Em?=>oEVIb)hM#3(m1^`cRs_'pR\da!UTp'XFm&U,#E=
%`l\mL7^)4i<L4Pn1JBrS4CSj5]*5`GficE,@Kn/I,35l3O<5@-$uN'/&"3Np:sX[SWi?JB:oSR7V&W]/X489)/nDB9ZaS9A%Q*[6
%5)>=)NI4.d"=6oD1/C,+GOV1K$s0aX1Ekm?ieFa=MfT#(B(S=*dE!!drWHoL:TV;Q0Jiah<%RtO9-*OQjkITsPO,5WJa[2WEOD3%
%\X*V1P'W:!(&D$FL#;T$1/@JU#]W2Y#hBk?8/[)D;;PSLmO^h^QZ'c]i-`Tf!-M(T_uAff7B)lO8!=jf<1[j*`PgrXhGD^cH#q%=
%oMn]SANEmYQ9oGmT^!t1+)<30+DT(\%e='f1:DemF^<B58euT:)EEYt*Bs@^U4K[i1SU(M&Y=JM$DtGOI9n3*Z;B[`b;q)>4T$3=
%X->%M[ur-@@q>8i2FC7n]nM;_O$!ME&;?7,`oLW,eD"g.#+9W0a[:PlQ7<P8B+W^C:1-E$:$nTsfT]LUf?!AJ6Y&[H(&BhI)Ra=@
%5t7oYH75cg3!=&4K=AGtR>npo!R;hbO5:OHXAj`:?uieUK3"LuE$:\F18k5O^6"=H@OIt^-b^`pgQ:O]$ii]52W3*;Kui^f9V;O?
%M@1Y_R=q"VL9/Kdg&5LOm2^bA_8700>.[\.\.75G<*DklU=AI:gAM.QAZqcb%.-`%ZAn8Ub2c#=INj&2a>)oZ0T.2%A[nuK:D5"H
%cXP3XEJZugRU-i_Ki$g:%e\RIiX]S<>dcCU;iO86(f9p_`J@5-W2mr`Sl)EZT"1[p@uaRm?_qG)gTYKKD_dcI`,-%/l^$D5VqTtj
%h:a'!r!ZG212S1T3p:f"l7q4#^"PtR8V$r'OkIC5T'QKKOBf7f<i=T,\S^N$&[?N#M2b>i9[#,m'LdjPS\jfV&(M\Xq\kU"l+(@e
%(ifhVkd&*$Yd?'1X8qrDp:Wm<5^ZaF/uo9=_,kN]9KjL$3eT7B=c*KXdMeYfE(5d=Y#c&s82rC;I,1ipD/eEhO/,9uKiC81<pnmX
%kYd^:HuM?,GNFG/BiLRs-#50H=puQoRLl_0LnDOZ-@c^*ThXpAm=j-Z9gf?:4ASWcKP[L-pJ'r+JgsN+W9pb>S8t/"YZPKE'8+XI
%=Rs6N.d;NUd!\W>jReRhB^Y!:iVU"i^eKitD2:pQQ4/1P[ipJ`TYIu5%BrV?6R)*<gD"]_7.,)L::/+j.69`?Cp5l*4s>f$&@'gk
%q?cC2Z4tJ`LJuu]W<b/:-*TK3jL;!@)N,.%['%Z)DBLslh?KodEN>WEJtZl![cjU:(sUJ8_+#a$ebADZ!YH;>C"fge'MfQO0Z'rt
%o5Aq-Ml7LC,%i/h[0EqkUNc:Zi723+gq-MWOC3&k6rRm5R2QX2Uui[G_65=?c_En\QP$E[$WCT'8^#EJ9d_OtlQCJ?%g+5L5P`0l
%p'\7diKV/nD:-7R$k9XV05YWV61#J1G0JZfk`SX_`JP=fp4T3h:lU7"OI`ZGF3aPJ\Y)_+6sE'e-ommpbc_\1^gep-8tg=,[iZ"M
%1O6[O`*fFL[s\u/0%S%^DA2!==5$-&"d5!bGLRh*'^cea/>0*FrTDTD6S:299QC@*r,P_Q5TSgQX+[$$!?AqqZHZi^7t-..plZ\A
%?r82dOKp#Qe_V?!NYkkC+8)Cl9+3_Tn2Nm;>n(W`2lbWt7%26,R!KT&99r&mrlo?#8fAX)bY9i[nCNn.B=U)$^Njc*m$X/7+O/-J
%gqq_V2oT%6RgV#O2n)@IY7&nfi-Ak>f//=#Z^E<NZ=+Hlii<o$N0'eFKd+DCcYYD+f)P,U_D0%7M)Sc+Kk=q;ML(fTPO5kD%WWOn
%,uRq)%g=fi:"&0a5BHnr38C=S`6ED2%>EM[G;.`>ET$m$&:m9V3g@lm!T92WVSRsuB$H6qHS2mt<V2To#"o<#TtLo>dL[ubP-U7F
%>0#\pRoIk);H;ucb><+$7`J(-,*l(r/7>qd6Il^9(5T-TA@;rY9K]+tPi_W\S$&c<0*)e]S`<^te<Wfa?+dJP"-D.uP`rLW]f+%B
%W7GQ+[Y>6P$"T>/*AhV*@[F3L2M]/D-onTXg4!MDAE?-W]NAPOaLnZ..R\MK9l*rH!_9U@0G=oU8>O4L`::PZB#it_5g*_)?0t3+
%MT9nj47V/Cg82@d"7_3#(%Er_rA+8V/s"bSlBBGb8(K=?Q#pR1H^RY"YoP5\7=>ea<_X!p>=E,>Dj(N\ml$n)hSb+NXUdR@b74"b
%:&_Z!:9OZDXL_\<0^.0)9<$GMa1\Iu,,Db=.S/,NCfr1lQmn!rQD&(%jCSC!N<iqpfg#!e3<K$C'nb=u)01aVab9TS)3Vu^ZPam@
%?pU+CJr*ol6N>;AXMcZ8G,%]1Qj.d9=XhUt4T7Xb.&kl@[7/eP&Zm/b:1=ZfW4*m.`]3L(&c&fa8*]NDIZ?VkCjpfZ:f^jDfBJd$
%B4$de&>G\UW,l?c0LdVuq6@ZuI2pYN_U<e+UUZ^H\2jABg[SW'@E027:4eU6Um/B>H9cbSgp=ecJIJP*UPI^o!R;fV4Y^)E<FF]\
%I'H,HYu2;Ws/+meGH?m^?h$R=Rt0m:FqIY;U6pto40OskCN_SlU?Lg5%US+D[%GY_JeTM\'Xd!QSG!.TB-rB!?6OI(L&!uMI!-bb
%2<G,mbYNB.0,Br9-PtXCo2lQW/*A"e8N=H@?DUX`)J>_3Kd.hJP"u'jbsQ#)Z0-AF0[On8cTO[FY3ufKcp7Eg+ZV=bp[><S(Y=*5
%OT3gjU<glPF9_QcCTIs=8takT1IL>.)M7Kj[Tm"=/l'O>!/]$Zq]"a@`._^52MT%7XR3(k/LTZ@]IaPZ@EJhK#+4.n)O6(pq<o5X
%+ijnor]m6-r/UgT1TV%tG)lF:gl'sG$D?H()qj7^Zt4,I%7B2+Q7c5+/6gR7Z^1;FQ4;A5'S"QR)5eJY;O^Cp9A2[76Q=Hs6p!G`
%O_/o,$DjW%%/R_S4RFJ)Pd^nsh1tpm5S`GUBD^Y=6F]Y'].OcD)oaAhHl;4tngRr*pVU(WqqX5_m]_Mc.gD67Bd,j$]IFoR4lW4V
%\RWNLRdBtK/Hss#Ur2Y0>,UUTN9>uBpsW(A](>K9o8er1F$gG?IO>rYeuH_:f`H<K]/s4'fC[SMm5`+OPf>hT'5^CuAn3=8^rV27
%%GW1_E=H-\hFe./d6.uLD!X1U,G-W9o>=Z-kob,5-=3;.:Cn*9I(rm5:7SCWh2U8tV!*>lm+QCPNBnZmq3-TR[`IXEo/?>s1V/"l
%5BfNc>\i\fJi(d8Ndi[f3S(5D\&c2:06f*sHsHU)a7'!#c`?T9fJQUHOKc8CeR1Zu\HHV*gZ&uU4j)IhdBtmbPe5N:]W_u$4W_B5
%n';B\7T1?m(m=oH4ue4f]V$Bqf?9q?]Bd>m0YiHgH]b$,#*ch1[;PLQ?%*\k%IDG)`d3H&_aO0Yqfp,7Q.V&YY8p1s'mJNO-8q.0
%DZOqa(4sRo6hF)_j0q)d5/&Rsmc2?&?2PFYLo'pJ(tce[oGBm$"<F?>?i_GkMR"7E,dS2T#Ib(2=.c5d6B&(G9.6em5UFApl8GT*
%mOq5g<Hnj)V[JP'Ik8Ld`o`p&KrWT2TXmDH@YApQ"OV5>fUHS@mNl=q%""G3"o6\AJU[0lJ!PE[hnJ#k;'PNDlL!cndtQo=a_WOR
%QLGJ%S7E#F3.p=d$okY$9L<GbnkE'7>-F"1#WPrPq-1>Lcf?5*_ID.C)Slag#S:OpY$!@-,t4?s)'g`q_T-<.YC61DYM[-es*UNl
%G6`&eUE1&6m-Z5@!gZkObd59nd]`EW?kS?&1%ppLk&^\DLcT]'!]AOU(3'm*!dS#V,)TA@p0bbs.4U51En6i1l_gFGVh26[^nf/K
%Y<V9IU[Dh.@`!B,fIhnfm5qf>?N9)#HcI@\.L:M&KWj)!Pnu=WOG;c6=l:@>Tq,tNbL3!iqjWV.RG7>MZ5gc2kj_mL<9+R(W8@F7
%6:!i-qp=Db(H`Kt50cCeanPc=9oeeOE<mmXPCk[)[Jj.e^m9u9+1f+^UIcN<]TS;feV>c\m,XN0;jjEXSL=T4b'X`-KR5+gjF:fq
%3Mal]9jV\M.W[EigJJJ(A\Ls>s&%o#5PJMMR9.9%epc":%q-mERT?X]91`nZjn>^t!?WodE>]"UbkfiN\*0O/+2Z[M^];LXMTq0:
%/iKPSC'D8>Gk1;2+.qYeqtR";=dab`n>shab3,cU12HIg96hVmD/Bb3>Emst]Wsn7aU][,O\M-s2Qpd`fiNGi$Q9<[nK<NDIu#0"
%r'`)PN]rLU3Y4oQ"5nNJZF)]9,.m@$g74XRNq#o:\GuOpm/Q\55k*1;mp<q3p%BRu&G#ZF[;K]U80WI$4FrtqOeQbLj+fV+c\2Kg
%PlCTg>83.[a`^;XS`.\6IZA^917lf$OnHKGmp,V^[.q%i?i+a>s+2Q<QOY]97K9kV3<uBLdWr)OL00";kfWrtI3G`RH:[fW/U0+u
%F_k9O%6LYIr]`eE&I=NhPV-t;;WY'K94em;dq(s*1MqTk#R5_7\98Hr%cG(KbE'pE4tKoNf)+s;>Y6dOn]=Tf&,e"/(RVOsSEM,T
%oBfO]Q0KuPqt9(#d70=gLD(UNHj$*(HbWm33C`QMn"73\IP1*&V;Ni:c@j6a0`gn*4'TQ`cg/P]O)Kj3qY7=FIGoYQOLJ;j8a%=$
%-$$mW;%#r+@faso_#dO76OAVF`";Q!S1J1LX<9g#;gF0Y#f$u,e<.C_$Vm_`#jBT5<.u^k!/B"JYR:2TRmdWpTb+Vs:5+2J)oK6j
%VH_9[$URfn0E9PPnuGD)LfC"5<B8[?(FdUkZ2ClEM%O4RT5bg.p^uXPH!XV'q=aW*7hj;B!*G,o"%lT95M+-Dp`)DSGjfpoqnhqB
%pWn9_hVYR&QN.\N+eY_0m6un_?K,S1a)EFc#8-7\2-S0;c<)gd>XdeRe@C=dK]IX0nCOBM2r&<=E]fW=`Y4Nai;gf6mo5rZJu>"*
%A;GCeO^CR#YQ2/lSSF:2.UgKG$d[b=/;BZj7en\gH_@OBU:^L#$u>^$ZKqek)E`/,BL29Oih%99&]-^aFH,_[k<a9^lZ!FaZGE[C
%EW7!dbQ*]K%?h:N#i%(X?hjE+pplICq\tk"LMqHb04jG`LiT(a;?k2d=5#\unLhj]CT%T!6n*s]0Fm0iVJ$d7$TD:\73%)6!.KC-
%&AFEfgKMk`QEY[QM-&d^7"@cXN<gRtRasTi6m``6Z2I=3;\Z(/[92<dq_UaN_10mZGqAg,&1/MIC,ZWgQ21oW!CaL-(*!%316u=R
%1(1'`_+0rJP?D'k[+L=&&Y^*81(]1%=IB!&bgU)[Qo?u@$Mc<\iA?A:+kDkmXoQ<=BN0dS9qY`ha:Ut"q;r'K(EU?"G/3aKE'O0N
%57\B;e..N/_c]2Tb$5H3/U[4M:%E&8&l%^:7'%2tLlAOeZ1BYJ)nj+ff?""J>1gD?L29AQ@5Qb7>dU5QIi:HTWOZGqU4(PEZ^OO;
%"N4Pq/Qdt1]"dJkLnb^LJ4ua[$(JpcDZAa\YPn(O7$$lhdn^B".Zfn=2<EheUpRc_h7`&@W@>F&Z65G\TX$-tC@1,QMb4DR/-$;P
%aaq&,=B!\*`@gj6\m;;SXh@2:ff",OG/;V^Eir$AE9sP=i1)%AOs7;q.fP52l<R]5S#mjjII6JEc6e3-e*?"TH[D$P/@3IPl413G
%H)C[<C*RYR=%V#kIP)S5W:&QS7=M0?,W$G17PmT[YGED4d,V)K3YO7>bD#*um[sCGYpZLHo-%i%rJ[tB49_+N[oY#0D%T-CccSZX
%E$dZOmoFeGlq%%qs7p]g<+.V-=AqpD]$U*4mos8MM;bPVAbV[bhtlgKmgfA)5=D`g([GU/8d&CAlr-pI!o.Si,KlF\GceYM)S(/V
%_',<OBlJRRm*?hNg>eS`FdLG6%r_%5a:A6GD-.+K$eQSDjdW(Br?J-e[1K$PPPI^gfKs+=*W^JQrKiV7SiL8&A#i2g*lnS9RPgn8
%6GQ*_3+^LWr*AK^g+&_1s6b!<\7EpHikdT\*Y!pHWql<&E<)KP)?`)`JPY(mI,.F[M+^S1pTKAkUs5$'9hN&BYI/K6pk=8+$]#u]
%nJKo&1N;9(ImQ0oEt6!Gm-&MR5nU6We9Mk3VN\R>0L1lRlMuM@Ad$[a"20;[pWNgLinJpQi^X(70uXm=9:[m];p9oWg?ce>ikilg
%HTi;k"#'($KWs!/R[diCU8NOV%AN_7@u?n^pm>OWmdl<KMUr=_r_0SqcJFQG]A`e11]0$W(?Q_=m?a,,7;@&PN@,*cOELWPlnlgm
%J-[>VXXD_*OlYZ#Ac_N_h3ujr2A>DcFJ7'EcJV#uC4D&(]rEcLHT$J;Y>Ser/#J)>NIZLDZq<4JY.Ak_JlH)s0D+a*GUUu@_mD%C
%"%tFFdm/B4.eg'e(LHC9lPZ[V#kajUobGl6PDe;$m&#DCRk&`s)FX<;j>H_`X9(%Hbg41HpO0-BJ\Z-An5G/"Ikis4DBZj0m!8SL
%gZ)X6nr9I(jBGV\cst&eI?qoM*C]?c).k6f.14KGHH-j0#Yhd,KNPGE3A$[&Qdk$rmb<CeR&'KnUsnsZ$fk93]B%O]f8QEu!MZ#L
%1sNR]_&^[\J410ukGn8T/+^#Lo\0i6aE-erm`$($#JqKdct[!C<DS$"9'@-DU/a\<ldeR.7joUuRm]cHVGQJ(A,L[drqDs4F_p6!
%5j12=eAmS5d$T)hmiYe6">O+D,^GYf+Gm8gS*mt%_c#3;\hFI.PdTSuonN[ZJdEq2D\K,>/)?rdWPT\K3&)nTdR3!\[A^'6nU+oE
%hN%;_:tl\LkYE$)>Tb'7&!aCdr`Y?%UE,34kt(.W2-a,QVG;1dE0s/r:hPdmD0`.9KjVTHD)5)gQ'I]jb#c([o[Hb9'`,.7K=m\D
%n#`>8p\_"NR_PR]<qIZsp[k1+1SVW))GgJi!Kg.j:1qT@glhe#ig`@D]2`QZo$o65eL`T[dfl"B%]XLSCi'aXY*2POL"EFIq=TF[
%HG7K>c]gM0SZ947a9+#mn85T^Mg5^k.ll8G8oA:,4+LIkg'hsm$]\1c>ssO\IcVjg%c?QsIlKM[X1Zg8G'Wr/5<]tGh`LMG;1YCi
%2-87r&dJ%VWS9A+M08"TRg7SLKpC`4aW<GIn!e3;*hgZmKZ&;?92i;FLmAtIJ0_@6Dd9>04SP'A2db1m`4V"'V64hWQZc6fi7:o`
%QBK[VdgcgVeI)b_(b.Bl'"/JoXY,Er1sK,I=@jY"GIuo_KNf`sZ`kQPU_:=!"mc7o!gkYgmAd/If&cs+iJ&a)#Gq`@Ves;]CLqgf
%dUB*YD>5LMo=^tWC+DO*8,:cD#Qb+KOskod5g>JaJl:T=TjsLkf+J+RL5q,W4driUJ@ccs<;Z;K9n,Rt%JL[A.N/[oVQErX0\o2p
%_?-Q;+8sZo.`<H5LX:)73!!h#PEKqLUi;f,oF]P\;O;r]e'-/5r9C[t#Sg8=LHM1A:uu?E<Fn&VNZ!?Sck-=[`f7Bq$\\V=pc,k"
%GKN/!*pMq*r%cMs"bWe]GL,:2HBXR"D8j[1*Nb,kk386tO)'QKqu]2TEH&f)gq^a*a4f2_XjL^>l_#mZl-jqPTrn,?m.cL5HIoV9
%hcbVMJlMMPFg(^V<Y8YrlS8kI(?Mhag)>n8](nVDd#g7FQ&Z4QJ9Z30cs._d0Wl<up]QohYNNU_.&d]!6Yp->lt:(gh1hk<>>F?#
%cp:[acUR=nhg55TrpB2-iqqpH`u@N-\:pL93(b^&ma`4@_^?]eUOiV^0ari,<^Gg<$km6N"&e@\$@6<PO%^A*NW=!gg,"@R"[1D7
%2j_,HM<P$&-19U\n8rU[I9]P)9;.<f,oo5*gR3LPNZD/5MeZ_"aK2No%4hhhQj@(oPG`pdD?)IB#i(_Zlu#--Hua#GcmRrZ.cF%V
%6q@uu9GMA0.u9:#_!p21K0b;D$k_rnB`_<F[.*)hHB<H<gjO)V73:u!>W6d7Q)IX"RDV>Q`f$BNl/Nannm,8EKa6Hpg-@%e1EI_t
%LaH>o@3E4,0>G_!4"c?EEsuk&M\c8K<dZ;B(r]7f;U,)5&]+oeMg",f5+/,5XTN*SIs`94T4a=A@a]f_f[?.(a\k3!\n+>iF@acU
%-IKuUh?8E0YSL]%5'Lt+L8E/+Z*BWuZ\Z]H`_J7>N/LU<dMdP1aV>>Cq[`fpLU.?bIu;;gW.!-2;,N:&/2:&NdZ3FI8q&5A*DS_a
%3kA>3Nb5%WNoJE_a9.MjfAY;ZjNgP*J5A<c!-+]sb];?A-3$q5cVl"h!0G3^Aq_RWU!=.H'DVM?Q!hOb)eKi>Fk68^2Qn\AIZWtc
%k>+XOWAgFkD-fF!P*T[.Q+HaH&_7#NFq?drY8K%Y4tU,aY<.;Z!X4l2,+'QBfB>e*>3o6f4lNJ]J&Uj$jB-#SMf]1)WO.q,"\k:u
%%4Us3=.]O*H,EYUB]>09Y<\[]/4)>Q<qW!kXX\VSaX?:PB/2kHAo]:!SIaQi5*rc-n9QOPlB7$:9/L4g!DcjUf9?@EP^3p(79l2o
%R6@q#@fGY>Fj`O4+=T]@8L,d7Pp)5F7<.7`E9fcqKir(7BFhI"[4P-9[l>aRAj,<b&e:2V+B8Z5[iYeY/+,.rU+[n$pb?^,hp`kU
%j+>/PP,nkp]fK*pcK9#1;!qmYo`S!8(0=[N+,"I;!rXGcWja#lI97Icfgg&e/f=n^G71@dE,ME`@NBV(S$-Ts:I*F`nVgd9r&m^a
%NZ\2O1n!JOO1h/G#=f)JOJi3-V\\ki,%0tJVg`!r,HgWZV`g%eod7[M/<W.%m=13[WVVuEQ<]32iUPOUR$TphG$<]9*<8\OSC<%I
%04]]d%]ITHG1T<NQ"n7?j9i/E7]Hf_WEEa(L9@jO'COT87m#@(HSg5m#t82OY5hWHY:TDuNNa.Um5@KMQ%N,VriFR1T9DfU(2c][
%]1"9,O6c1%#;5LN3@O;\Mp>-ac$UMjh`Hl]XeE2)V3tO#Q3boP"J',b653o:$KWFr\$p+FMNX^bdVd<db)+-5@"u,&VMO&lEE-5r
%PXR^!I6-$Q!Z)OJ5)O@j&c@-7A>MY6:*c==pc/K4E,sWf#3QQ).ZZ^F;g$7Pnfc-W%pld)q8teG2bZZiDuf??TKU4m$1gE<W4MZY
%YYuO6CIo:Q"6kaGW@]o[6rTl'Y5]]G5eJ*3b2';U]dFr.:CGS@_8,XA'_!2D_.eG[Z22"Q[gM"jPkO7JJo!:Oo$FYe9pE8AZr4lf
%BMp>!Dc3kj!_.-;qREn063k7(n]>hJY,cQ%g\c&O"tC^:%a1!RKDKtZfj84F,!:i*0$tc"#ggPcIWdF2NaJm"Su@HRQ6HR!$KLH^
%Zc_l)KW7$3JhCeuXu)9BiOlKC=@TCDI%k@CST?q/9+Gf0ETE0$I0"Vf2"K$^&udq=")5DgMre8?C8krPiX*.api5uWigbuE9N7NE
%"1;eu\[LQM\a0ITX(H;/)+DOYg_Ru'UARe6/bhW)e3;1'GP)aHeUMfMfZX&DGZuEQ89WoH>uskU+h_3V#+NV36`@T)'"S0W-2Mc/
%^eRs>QlCcGWhX8Z+^q1*&ph8DRrh4_@A\+H@eQaTch&db;2JLH7Z52&79NUFG[C\ZX7J"VV*..,dJQJK%.VnfV[j"lfPmPZ^r+U^
%kI^>q1B7us,RDce.>gY[A5lo,#8RY=Tki/Jik0&CTVmu`kesm?gI5DCeB"/CFaCj=I,XPg\2D+&s/K:=E5Jk3I:N;i)>jWcfB&rM
%T3QgpI3M9$@tBGKQg3mMgd46+-m+3X-GY\M?!+.*.8A&8>g:O90ts05ZO6`SHV7=,<O%>.O*$3-h7FeMOpo!MDULnOU,NhTD3LT-
%b7INQ*5N23O];tOMP-$uCHHsYT]WK:fhY264lsG%,D#EBQf)uO_@P-9b'eOS=)0Y(V&FT3Fh;)nPfb1%>A7M,X#6ngl&O43ed=Z/
%$A8(QpK!QSTb`s;&L&5c&A^N'81>g?=tTKRSc)fAgN<q-*5ERu%1c7?g;<\5DiegpGVB)KaAMKePWqT"qT7-;GAM;jO5oT((/p&&
%BUujp!co1m-kNHH=LlO8(C.7I"&:-eSLK`6[G7&&HUVRe1j24lLgJC5r"-=s6s]s4B(o\rLX;dQCnaE%;Sd+Xk]Q)**E*;5Q6K_'
%S_kS@P\cgo#M3WKR\,:)qa@c>:[,&U?_ed@*BNA4<Q-;,WfUR&?2nq!<))$0b#o0d_HW`VQ6LLf<7sC51)i9ImFt9ZD[4oK+c&TA
%:SEi%_FaW8kiB`[0d5)(m)97XB["iJE*&_CS")2m7I3@<+/BX[DEq:N6:B0TG0q)rgEGIRPF7uDOq(_=*6=6r`sd.`*jCo5S5e9(
%Cj7;h)->*2&_hHea&2iL;u+nHcADrq!D+b;q+^?2U_$.cm6&4bUM;oO&9b&2XV%5N8r@SWI#sq(3gQMrI7+a`<QTpII#pj+V04bQ
%M_Z[^S.N_5h8_76N"cTT"l"CuF"]?*4JWhp_*`g4@;$])b'Eeml!X@Y*?qM<q=35#=lS5jP,K*]ojYe/aR5;SMK4I.C(u;J&IU/J
%7AQf^iE8sAKg;)"MAgU?V_K!J39'+W'_s^OJ%f<P'Mc:?PB3c1]'eMCi"85-(NY6.:<l^rYWTsgq3fr4!#jC0ft3PU&:0k:33at8
%1F5('2WF<n-#%--#G#K.@<nJZN;hckDag0?bcN(^YNR$rq[Ee/psa/T)B/,\;+P=a[iASS9;bA/WQQ`97"G0n#\"h]'4'XkB+[dJ
%W%-pn($F-%%/]Z85/ah<iQcR.X?RT`h`LMG&YXcsTRH&Khs*q2CEsjVL_7D(r>_M=91JUc1Xj;bM%6#_*QXir'UP'0+%24q(c"Np
%pF=Ni44_i/,Uin]UaVepA)7h-f-'T[MHb/O*"hDN2\F-0<FoNQ5G?Pl'h@E"j5I2gYH7[*eKKNJW;XYH>#tL9$SaCefo`prg_5Jt
%65X<eLEJ(l;t`;FS!>_J+q>rOXMimA;tRcRK`/E0UAOVe-k\(n&Il>fO9KP@abX$\3&-^9e9*[2pO`o_\lJ`u#;thW*dfX[/3mOm
%6PA78j'8HsCJlbAKY.`OG#R%PpTAIB>*:/\=&kp`RinnCil?aDaj/fOB(UTlbmJL4(%L'@jA`&:rgYO9-ZHN2,,&>+A(hpmi4UuV
%8B`PLf?D@.&n.s$%tje,VuCmL7>j\q(usdf6KhcV@`2us7L5UAA`VtZ`#Y:;A_bkhJ\Z?B);09>X+;+ScKOWj;MF8!a+C@$:Ca=r
%jU9047SsKs#t?]W%Th;ql`9$UNcF$F&@ug#JARJW8j'`0&SS!p8&/Uan!sdt7fc1G!b4O;#"5ae#dJ?+*2P9C=G/s@_Ta+7SBe8>
%Sa8,NH"3)KYa5A4"n)'dTFCN,Qt`0dd.c,>cI_pknML!D+\(cP0rGom]m1_p+@!g4_,XqV(fCVp#%=LWW#GGJY\gpKPbp%kQm^1T
%Ct[J"#1SD_13UG6=g%@OE4FR&XummlPspC?3+"G<dOpD5%=qZ#1V!n`ktpR[FZ?bib`4M@B<(SG'Odfc%9e<2`WLWoN91s)C5j)G
%\@hf8*LMG"jHBWD^!ltK$402nhh(^Afe'ZO$"7dbd`k>j/<M0IK3q4!T^ql[nr2^m!#[;qe!!>+9d-j^"U]=q'9?n(7FNSR\-4Uo
%e8(T+em3ef!:S*`I0WQQ.ZSDm-TUR/UXSoC!Xc/l.l;kK@`Vq%[dqP\ron78mCFjnT7E[64LIRo4d%RV\`#Z"dkEi>PFZ-4a>u3u
%\V0EkYm1n1iUXCN"(!Ot`8@n:'6eMdWj]b)NB^)CD'L_1`cGgAUTm.[#D#NupMg*8BnC1RahI<aI\quQ2.Mi'`Ygp)AJM?eq'e%>
%`P9F>/_q]V.ZeWMR0OLd"%OInl/A8#o5`*sGCV\9ksP4YLg8\bHsLr<MLMg4d[0MHoSX5c]eH[*c>"il;_?D$!LbBKTrT6K[`Ur@
%BF)0C:F>f$VpkV=n'u:dj>q`PB&toFlRDoEiFI!Ce/Dmj,D$KB`M5R!/rYZ>2T&?^6h/A+8)((cdODg.,8QCtce6rdXBK=9(B$3e
%7a&J65tKHG%LdWr(,b)H+H'(U'FD&*)/cA-&85Xo.dDS\2rig\IdE[Wn=Q84?df<;1;To/^e1t/0NbnsTsZUg>PfVV)\U02hA28;
%agFG$7$E5gIoL^Eg3D:oEt(ZkB$Up!3G>sKQA%!-TIn.OL3e=-W\##OK:[&-fOb%NA3!f@aECDfP<(5aale-O=5+C%LVpVdqj8a.
%ls\kPNeL37CZD;,>b>S.#F7a9,4Pm>W3k,<HU??cBXF2(jQo]1rRU+.'q>e9\Tpgo10*&@0HA=3%mqQ%LtF6q*!2:Nai#XY*'TYW
%$2b9:Y"+DUi?\JmT7$$uD@4/^<h;N^rU_UeU>PZ7&Rb*&o9+G76`XAsi(=_<V;rg1"IiR'&*ooO"YB0V(ICtq;7S#M"d#4.a4Lrs
%!*kY+a!ceV,=MZNR_W-J/^Uu,m"j/#(rMtR,WH!p7!"`I2FW@].XD;]lQMFki\J!"`9KHK,Vb,1+%st9f!'XY=&)U;h!_X3d8d_j
%M<(<]6;S.QSi&DO4R*O*lVTSLP[<q[mj8o[CGc;s"9?EoT(`OT.oQh7JV'CPZBPnX"slK-m+5%2qd8c]<+B8/B;9)XfQ.:bPYk<@
%BQNDl6`M':DH;.^YYUX9508[r43O-[16B4)_lL]<h[K9>&dQPc?g<uJ(f`03FC#>sK0H=d;Jk1FeZ&c"n-PU'Uju].=c82-5CVnl
%:WZ8moREl1)#Ihud17S9*-.UG745AZhVr^]h;JFFD2-UdX'U-h0!A^%eRPg(^-W=9E`;/:)R*tXSo`2oU`t,<1R/!_m%gLnG%G-?
%!W2ReB8M3`[U>qUl`08%,&IK^U3a/X+#QuH#3<;[$^,n5H!j17V?&uC@Yk5?E-=DP5Y"HlEWYYC-O>J;o1t,9HRCVj?M[I53rce!
%\l;P&`q<X@J0hP1"&dZ'7+K0k1i_q3P%!R9aE-Q?[V(W)EJr*fJA4oVY3"\2<_SP]C`XW\+r/(q40gdoa;TbT3%;r+>fk!Kc13ZM
%BW._+Ja!S0)WE+U4;IksHZ:D<h-[qj3sY@.Q`^#.h1j!LjP_bf`VndKA0RM$"8>q\H&X1i4`&:YM.Hm"RH1JbVGos8$^ml"+)qp%
%+@X8f&4FVW=*>%*<CKq1Kb1,`Adm@[OYEK0!DtdnJ7K"YJ0io@c>qC[/S-:`-VCg4`1?3r&[>8`DH/*ufcE\Yia@.R`=`S7L#UT/
%(PDK6bdbomIpT%G,#l#>R]8dR<'^XH`[j>b_rND+((iT\/Q%Q<V4IOh?<W"r+N`?(=qaP.P\>G'ZX5qfmshm3Gtc8(d+\KQ2`\aH
%9P%PY625tb>0Ko<@8'.;D$"9oq%4"i>0X(L^ij9`T15lFe\tWY=kojFH?I1`+]XU*XjTAqc%X2@71WW,,tJoZP>t^ai6oIC/jpMi
%X,==F_l%rR,IGXepa9j1&O7_t]h$q'pg^^`'F:NN_t>W%Cpo=68n0bt)cg"[.4MlQ&HkS:Wn]D>-HiM'eg>&L6a7[h"Wgj+=ftMV
%d!b#Cok(cT"q)Qr&RZeY5oH!:VFL\TVYVUeS!`nTF(-.J1h.4Lp,J9-%JU'(qElOt274?k;K1?Ro*s1^4m3<1S\Xe=KkP%9D]L$e
%]@GkcPnnDu_1p5`5#\`uWI>Wi(P_:eR/?Lp)rFDa5"tXs;FBFRq(T'\5Fq4lL-gEuitE_\3t'Z@dX0]b7E+G)i07C'\M[JEj7mUS
%9J<X51jd;S$Q##FZE$=sf/d]39r)g%oIToP67Gn<O8u.5)@\EB"9hkbqHP/m]5ph.aZtH`*\u-qp/[u3JB#fMf;o?-6;'JoGY!]^
%fDof"/tCF:+IDt9R(f=,.O[N2\GbMr?iXfLM'Klr?b^:tLBp5nV%##@=L[alIo6USli[BFU!8;'[:>r_2!lnOb1o%:I.KVAK[+*V
%*%d,^CM6bb)R2\,9nc_N%1!D4,18a'foOFHNkLN*^d<Ten-(3gP2QVYJgjI=XE.m\IS=WfT"2*>D0+>Ob8Zp5n.<P>"=kpYGG_C@
%YZ*,KN+j)k?f+hn;j>p$.)\ia.9/bO;A!FbQ&nUkM"c[mq4<kDYCj4[Gg"UO9H6XbP0#*Z94Hag`&M-8qC>$"@I;-E.:uL'^R"GL
%.)4DO#,&r3mI7_[(GN[iBlMF`&t%[j;07&I'7XNCeFt.iatV'/cT*9!&(mo;fjk4ak(m*9&Nh6S:s@5^nS>lEL27/!V*@!_"OBZ;
%AM`orgZXAcO>;T4e**H>:12,=6kY%A-/YD>V1_rpU`c2nUljVgJ\m2B6Gmpkh\8B,E'QAo>@qb[GJYR3;=e!3"p5,7grI%#Ii:]Z
%^1;HepuG)_2jBYKSUS6J*!'E#rLii:FNT/Cj,B.,*!R$Uh3NY!iD,LmncCj#l"GFDK&G7RNt@d)\t\eq.\D6)p,g>K[RWkkiRnX@
%;ui>*Z$()@ao"-DgPT\V-$RJWE-YNBjm_55J+I%l3d<4>$ki1kVs;EH#aUOR/@(S1f*Mt=2/ZKEaJfOZKKtkZ#d<l?[d@@HO6!%J
%p*Rq$k9X,f6g<CVgE?e,/_tc2[SNDkdXf/jZ;'L@6@S\idb=18l4OU$h:MYoiS7idUH/`B=PD`UANQ-^2B%.$Zu%QQ59NhUVC@r!
%#N`]^N*+ac,>,']@SVtl5q56XEluG;p;fTnAk]^tbQ:+Ql0iFc]\R"R6^M`3gQSB\pc5O8A/rY1n,:K59%6fJO0$P=E'+51`_Y*L
%'\d"5buZ<&g.SS\5BrWBU'^+tF`:8u*Gfmp-\a#fN`VnRZ[^@B4euU59aj%Y',^e^F0pm-j?:C0@YIgd*t&*k:CkWq5(;p<*_nCI
%g"0_,GuIR_-\<La*VDD>[VXq]'LFcj@^(ZjZgb&[(r7*?/Ff]uQfGV7',bPs)5Z]f,j.[00sR\TZQTor0bd%b6l^HV%Vn#Ha9.eq
%LFq88IJ:#()pR]7p#?dE%iSC]AAFpaPOu:MR+!?\/VOYN^D*c4nZlpoI%*<V?oJ6jB,).-$m5K"c)d3P1nRpIYHjs3IoDu\E571k
%jTL^V0#<g\K2a`XafNOG<G($.@V"*hj-+E[hI,d;VpZ*24]j>bg48@FjgE8se%q/.@#+Me?T&kYS%2^69S></@[Qk86hrg%5UdFs
%U\KK;Tl#QiocblTM'B""O:uDAS=f";"_25-T06`sS/Yco!aj.-Qn6Hqd>>8bT`mmGWX@@F..]6"2N:`C-t/!Bcn#Ql\)pW':lVGW
%,I77r3WegC_mb(*#FEkMZi9HI+9N@3<Ts:RTcDJP#+-[SIIS4Y`QYG&$P0p`3\:?_jr"\rcN-X4$;,Vndrhid=0<G1'/V_0grVUQ
%QIR6GoVmde*4C(S%V.J"hYT@j^C=)jgCh36Wj#\/.H6+II-pACbeN4qX[@mM]QG?Z0i02-bDN<]De):@&Vg1f7V9G+Bbc-H0'T9I
%5S5K%e@$+<@/:*%H5=uc2A^WNQ+3R2=nG]mR;3O@d4W3bM`R#$<@Ps>R[:TGVGE<_>W`-:q8]];hGfHWHN%nJ5EZ+:.>q1a/*jW*
%eC(1+Fh9DWe\jDB)/p(rlR8QdaJXd*X+$>._d=U(*pt&r)3cJs2a')<nlE`!pKb43+(PR'F*];=E/n,b<#Z@1`H",I\RhAiqKka'
%fn]2I.H(6\J,H^a(*SW5i(0%V9l":^A0^,g.L18,Uj9bj<Dg`4PSfK>::76t.UBo[Wk:_\g6<^N%#;'m+8nN[N_;20^h!4QTmi/<
%(1<8F][eo#M+`:TR8L[q>B_77M^2fup2b1>Uad0[0kl`MD?m0B];(Jj!a!0_l)>;^]n#f[.eCdj!/:Z=O;AfsPU">^>_fDl0:3>2
%CBA]9iH4UYbN(^:__tm:(>UCfJ<IKK=Osr-I0k$VI0P@$Oqj-,M+B9di[:af;6QZr9==ZY)'KJ4*Bq'"Xp:\@7F?=_;ADi5esR/V
%U]MUUNg_qN7m:lofk]3l4+We>>X;HBJO07=hS-PBf=uUeFabea>QH5/c4WEO1>*2&'\hXkCB==";h_:],aXs+pYtDJXK_-%28a,G
%D[.a5LdP_3nAOYVE$\k%ChSji!%+FNTDf`1]f<E6cbQQ!Wm9erZT)i8F_JZS.!*.?O)okmS\ZN(Xe4^r*^DEiX*9Rrpq`@U>_o>=
%"f*%sc8plU^<l)do$oO3$)%=*N8G/G7\&stG#-n$DV-bFEr;"KneBa$$r92fd-HGk2\WdDhO%E+6?ManO?AOJR!mUef,74J;]oKQ
%,1;[6?6dO^Opklh2ioGW@sBMBbY'?7>3/1K9Ei80OUN2)Ue)bZ(eC[7boe$`?RuMa+L`(-bm3rZf)SqsF9MTCOG"GgOH$8G'o8T1
%"U62-*jb2_+DB6!38iM$oL9D_J^Ht9"C"T<XOja"`JeJA'XUrn8?f/1(LT2cZ;`46OnIZ;7Wf9qj:T9i.GshX]dP#B;[#P2mk>cj
%PllK+IBAD,p>=n$q)=F(/M,;UbMP]4d6arTp-iSUO2?E8j7gnN,_SM]lD&dG)E%)fTcd4Bi1\4;*4JUnIVV=XeuRf+OQ@IU?R;,6
%&PZ#IlZfIFOkPh"Tp#P2JXoX6,df`ahIcrDXlu\$&OLXRVKLpd+h+=Tl9:1uek+Lh**Ql@TrB%;)^Vkm*p4Vu^f[.+P.rj9I?9<p
%V7[eW,WTSgT0AO^`^tWD34[.L_A2o,i5m+iCVK09Z<^)5cr/eZTcUqU48FS5;\b&f,n/);61Jrk4cT[uS59edNL%]N`Ho#?O5brR
%%^HT+?uS:NWg70T.=M[D=bJfb0%S`%)oLSuF?B;BfM+;b!7:25,WUkkEV-n*9uqq(!oGtZ30e;U'F,<)5R+?Vqu"<DO.@B5S/Bsf
%e&G65!`GIl[rU(G@+E46JBL@V&a.)f1%h6E7F$1c$#TMSqEC.h*nhH$0/8C<hJ'/&!$90<PhZa"^eoc$$b5*Yb8i0FN`t8^!/.+n
%[ge\%Jn>h/p!i$c2d4d"e`0XH[!Wo#>Kqfg@tQ2i;BJC:Lc'=\5>Ik7bgq7R._q;.N7MDAj;bkGkF&eR^j&UD&;i'3;`['c%o*'`
%A9W-s4D-C!e!e99YBTW%IjfKgEK[3lk^WTZT4c+>WP8ssVgEFo#Fo4^lMRs#`1Un[#W7.UaGH\@,R_+Sdj`iu5.<l%E5\5Bqfp.B
%@aIF$JSDo2/aK]AVJbbuB0MS9LoFlW+:hm"Y@3-4fn(0kSF+Zp=DN>Uif6p)^B!))6R[k/fQ0Z,]s!%YjG'OFDjLSMb/YQ`pr#hQ
%a:OG&`E:>BeHb?pn2r:.ROU_XJWkN8e4%J%>M*MO%+[#ZHa"AG0'jP6.4XM<*X9-PBeL#'8An9]H$sK+=HRW\MAha[7)Adi<IIk-
%oYi.d<i+UE&;\t,1m;/_Q,AZ0Rk,uE$[=Np/BA9p]2JmBft">2"JZN[=p,`d8!ei\V'l@8l#jdBAaV$8hJ'3P.GYi:;D3lVpKJoo
%o[kIrN!ogT;+M:b$UUtTa9W>2\$1mKFHs)s-&[u+J/mX4gl(FQ"GPMkm*alBCQ/s`.<e]".n:?NbkiZ?'BK(e`_QW;>"U.]m%0JU
%$V(+(<&:ggmH&Jc_?T<eX-;A+$kB6T/pE>D6_^0_g*.pP-.UO[lnq-:bmSkgH#e=F#J6AuSqJ#Ur2S!+ga&d"gi./_8mJCI)D%XG
%>skbl<KU<:VGQU.j_R]jYV)):GMke=FEum.C_FE#AIh$&[M)@ZE]',K9fI%R$dGYMPd_9#gWdlb`"]dQT@VXRGs(B4SB8=.[j1N=
%c[j[Y)P1VG>$@=gg"HI*jBD>:$a^"&q\DNLfFOhd.(hAlBIFKJ>`aRL:^EAp^-j/S[0!M;hNh5";f$%&beKgq(dq8RiKD\'!7P^I
%[Po1']io.Qj]t#5[Ls5^f#:ra]"k$a/O!b*VRt1Go9V1Te#aKJ:29G[b?<+#^,%o0=<L#Opj0aTme.)WVe;ij(@#$__.=Rfp24W_
%.)EIA6ac`c!E%[Ma*CDu&k?!W,s5mF0fJWKdQhKld3fAVUR$n'"qig%GTJaP]a%E!'o*67]?W_4@7++P%='%N%GPd5*]>.Lo+F-?
%%;9>+5lB`J5r$umca*h:o%&W'k2QH\a:1!@^D5[rLfDpm1__7mE&9`4g6;g$%c&";Qb8I76WVOon+;rKLP$"WEKr\/I4Hom]FT^N
%+r'`,5=`cUnsi"Uc^9I#e4+m,7MO8>4\+)phYV,)9E5]h(5F$0O_(?_;+XMYBn=<mb16QpY/fK/SjK1>+%J04a.?Y!$CZR!M!]8\
%_!Gii<h,B:irm?FAb@mlQ04VF5QS>]abl7Qh\)rV/CUGu=.N(CNW.*umW=08AGmJK,[#OY-of%sVh,En0Y@16IHWLFb^;RCaMk/(
%3Y!ljaE>_I;+GNBh"'d!8/C*rg@Oe:^9mAQkD4i0k#o;l#tSWGhT*a`qOYa$o5T:Dngg.5*u/D9`-BPRF\!.md_%F]ddK94=.Mma
%>8fPGo0;]A->'6XSoAI]p'Jm1hb`]JU.h]GqHk1FP5Cal4XF)uS1!Zb+GCi6%RaInjl:G,YOWqW-&s^c0=*D23U4tH8#Oi-9Otm=
%S[*6[Z9(kMcQe`>qTSER@cWk3:OmM"':Ac>Z7e0s]tPO$Qo->Lq`Ia.V`dhHO)oYp3=fj;Ak<_sb;(=!SjIs]Ln%]Mr\9uQo!"u4
%1<V:s<6:iK4+fk>:%n+'Ica2\BtWg=CQSAhLJYQ[ds*u,,TMVbVfUPi1%@mY5#7rhIS57pK7RJ>&GVJ:248*tT7q)0Aim>CfQ*Zp
%88RT@B6,[mOcum!o32`f+)99I;O$r4aFAYu)@SgMrR<'t!mo[Bl/N`Bk<A^oD_J6PlX_m8b#Iqd&n*`AZ&r'SVmq?&F6c)XJ\S$*
%@1Y#:3psOj$<ZS-,":,r<!"b.e<pE,8u+f#92s_$:_X(m!l.NOT1_S=BJ@?4,-ToC3fLdHE^DGAgcI!r+^)W+[]2]*'<?S'\aj!s
%eGFk[K^l/t.+d^4*Z@k:QO57)+N"q"<7!7YeQ"-S/V"/;>W8rbZFBK"AF1^)J85b$puK.cj@b8=[V4_Yj2N7/SR'9U^p$dHMIKQd
%jZ+&)Z!LG)@$9_NIDDZAJOF,u8"@-*,t$**;2GT'.V,^'8B5F-U"#r!hHqZ#iP,=s9p&nMR)-bEjX5R]GatH;,*>X1#]Ii4>$ZG[
%Bd[`q?B8O27U6l-4f/`KN\Y(W=V)"9^`^2[WAS4-*!AU:em)UZbaRdi7[6-6#Cu^:H0oA-J47np'[!50M-%dLdR5u[P*aAM+f%I-
%+aG(D!5a3ZP)Bk^,Yk54UiV'm":Y_t1JPn'Uh]MJZU\C6BO[!n]B:mUa`d"YX2ReWS:</s+>K[/3Nu7O16+F]Xq@AACmq%e%:jb$
%L_QG1h0n62M'be]0f*3DG#Djtn"b2TDTT!<_"f*hDp)Cf1%=ng99B*@IC#Gb4W0"+7:R@/M\*SKh,0"qIWOWU!#&mQK^SQ)XRnnS
%4,*48**rNC&!mC1ff%$9<^mE._Bp-AidnH%Yit3Oa+O^2]!Hrq0^>4[A-O.;JLhO&i%mDCTGpR&,#!":?rBE])/WD/A"ol2o>[.<
%3I:1V`m4"+P'#>e2u=f<1Z$Xk#'&e/8:o*^Ye+.8BSkN/+F"o"T)cX/qr('S)$rZqdVbGf/h0s;_p%o:j1k_h"j9TbdR#7JWgt_^
%5%.;^3OjU$3e>VZ%Z)kk0/k48Ro%*N&ouLoWsdq,PQ4:G(YatXTSQ[k&`@@/S5W<QZEd@<C>$WKJ%N^[67tPP],mLqR2J>TG29';
%$mTi&<)XnV22W^U.dh^%Ia`.J`'FLIMOp*QCGQXP[eiuuU+)E-@#hB,3'bBt3BFG1+WIcD=+F7D[)[.<-tej1<,"@PPG9o8i&[=,
%'66h3+(hG$<.WZ2&$5@lJpEJ<Hn%cWFbm/?*HuCc5d))t6HV<+jCsTPmQ0IcA>1O7Ff>XlXc]MjFnf#k5V=r#gX(B@L+2)WP2:(p
%Ds>n.BT_0E4h3-:Qe2]dZD_#F/m]?<=A8`AX\Dt[R95g5'nA!7,;QU#9C1tia_8k8!sZFb7hcpSi=";27q/[Knm?:."qa(V+?KBs
%&+12S7uWO<>9T!J-CT)1iOCe\\3_/g"pLAgKB5"ZEpCZ/\MY+gb14iZL^8lgPB6:\b:WZ@/2Vmshh7Jr,joLC7IChAZtj1>!NKTV
%]j76#ik%;GY2LoDmFptn"*\"8gR'`f;!.:,LD!'3Yo!Xq-l>Z5Y;KNf"g$O[>aA;ILH;Psj1\F[g+84bQ<ure*ao<O#iM[rcn:/?
%pgUf?li]$`Y]<?b4=dQgZ-4)7ZC7BLPKhD7nH6\rIS4WYA2i9V=b!p%]j7rGJVlCFB[r?t6]=p.A8c[6UhDG'$W5%k(.WR%]k"Ji
%4l5"P+#;#La;>$sG$[p"H+`\SaKh7`7sj.;n4>-*eP36A6Qh2,*RtZ:de&5dJId,r-#E,M5eZMd,X\sORhUsr-ED<IpT1(\UuQC?
%Ahts^fQsr=mrIuX:9.q?J54buZ(MX=E/IO#&0e9^YKg"&+FsE?R\D&o%Ua^jS8OfIOYN[fgYJ(?1QTKLPX-rZ!/"(94k/eCUR3a'
%iRPl>&jf]Q[cS9+5g^J_m<otQgL2G:%ITfqQaOT0r\",n<Fgm)beVirSYDQ_UX_E]cRh;'4ZbgTL36=g)om[q3oL,S?2lcc<_"RB
%$g5AZedR%,1mWG.L2Q@Pn8c\MUc0c4:\\Nli%Xk!"653j25CA%S`KUrd%:@*98ehd<i\PU$Dcf1e(5+iZN8-fg@\YqM[Xf85*eSF
%=&ROGq"Qqf;&fGslFG"d,[E?u)T*tZ&(+ssX_>$-oH`k\ZoW7Z%CEf^lKt=P&+<P37,uX$Aica0]ErN$aeQ^hj2Y0ieZ5OFJ=gi1
%CBBig$^g5s-8!4JWM:k?)f3HYe:&a,;'2NJB<F%-at]2-TN)Hh52D]o,,Yq4(H*s!#;%YEj$RCJ/lR`gb?Wc.BSPa-1JZ#c/8&lS
%Wh_K4&ciIu*6JC!oTs\G+778Y1dYT4-9"=>dO>YBHnnO5mX4'Xl.b1IY-Y4JTK@d/Y)1@o!DZeP&<X/Xo>&hU/;6*uC5[75rDH6\
%1T;#EP-.M`H41'nQb7!3*m]9M)E7!9Z9h3$Puoda9?u40D&;fJBJ.81#OGZU>L@sN)h]H26lg8BpH!<r>Z-6+VOjf4:9MmNo1Ppi
%_5H2Q\:`+t6^5`0\%J>2KkS9-QY%bW@1b4)SnTPf6-#V/Z:oj?i?K&Hr\-?noB@o^i.h+2+@nV#SVN<PmLf#^%N(Vb8.\*.U:E9c
%a[QeJD/^oV#V"f\^u/00??!BBmStPB/__k8]Fluq\0[FX9dQ/Vbni.-`,=lNFD!H^Z@O+u2(bTad/!CWMr5O+lKWU)77"Gn%Bd$Z
%.cfgC#Xjlb<t06O7*o.eB6.q\+^GWC1[_rbDc['?1J\/64K!1u@=9*W2'85qZ%8$aCtn+0UE?m]cpTcER-BWs_Wl?W?5&TEQilBU
%m2KPYY;8T0p8l02!p:ca08qm4dC-YJY=B]$9h7<*;jk&_FFUn4+lrhCPIW'UJQ1OP8(ES7$,F_3Q;/.C2abm.R2[GUOA5qS.o*$H
%I3$5$ZlinEW'T0[KBh]+lt&U+e=C@I+l*lN,#6-?SIe0/><Z+&&kr(\kce3!4/sa@+tFkaA;[M#3Vr&47F^D]JtaLPVBg_Bh^!%D
%ae4GT2K?FU1H#h5ngm<1E<f+g*B&&#Uo)qS=gQJR&oYSkBJl'O:(cC]=D`!K+@<Ie6pp_dLo,&)M":5i)*5'jc3g;?bT".+(;bNu
%,@@tmT=8.s"F+K1Bfnd+Bn"h''"o55Y?=glZKR@hOJo0%F=G%,PmAYCi[ie7,-I0O\\a?R+r+6IeYrq>J8@?<_%;`0Y2SHa1d+EL
%,P%^TIHN;Y+NkirJmRDubU>AqhA&C,R#:?p?S3Y;!>l%VD[^f*q.M`C&:DLDfr%PfL]-#<&0P!>$8d/\JT,,HG[mdB5nj=K>^kl7
%5fXVh90m*I<Q_&9_l32fr+4Kj,r<5Dq^`9%m"j2un+/56DubR9q-fe++&FM"`&qjW>Z.:]-":uFpV"eOkIV/#/XH9o^'Pb;R\?Qf
%"qjf-_O!cS*!<D&#@.(jrV_a>6b#BH#>$+=6;.`U#RprbkhCHZ1$NVh1oj$$Ytu#6ilT,Y6nA>^J8O@tJC(\NI'k8+VWM&U9bO[o
%goZVIVMJk1'FqKa,peho;mQ?pU7FRm3k7gpM8hi#&3%Y,Qp,MZ0XQt=AgpJK'BlJ\E>s-`/,#XHCa<-O"ASghPa*<!+fYnVqn#3n
%Ot\O]8s=us=Tj[F*@k5:7#72nrIM.d9bOi\k.'Ib2[\fcVu_kA@QkZ]i&-3oGmEJXVn8hCpf:[Z;)qlN8iK6ZDKJN^cNYqhjF6,T
%-*-*LD7iPa1$#)\g4AOb"Y.+r4*@"FN6DheY-/e`9?8(a,/#)LpKnHO,?$:O[MrL%,KHUc2n@J'/l=Zdc=Tpt;]X(A:K,C:jO3k6
%9qa%.#t_OX:b#)3`I%=c9]8r3M0qmZj=KVanN][)?:+*[[cZPRhUF6,9"QUb9B]@K)n6%gdoReLJ<3Xrj<0Qh+r>B,AbZq%>2$78
%Ru[n#j2g%_RO))pq]LWKP2m.T:.b'?Mh"\L_1j484*oZXE9>p9i!IZWMAB&$1.>S2,eiJOZY#HU2?7=L"IfG0cHH%3'kfV!#!?RP
%Cke+6>H<bq8h[TImgRa-S^Z("^.eWgmZmpE8jSj.\2t]W<h^S<5'G>UeYcbNXg7B6d$6.8&#(!KR.Vrtf5,!s!-@3p:JjDJ)L8C'
%JgJTfRHuA5hb-(@T#6G2:8_E_q]^EnYA3RdoLmX5V>8.7%Ik?PQH1_I&!DC:O^1CX1AJo;Fun.b[Bb5Ls3o]ToLOuV@JGkis'[O,
%*+V.u[!`&['%0<ii/U:EBL.4Rc13%W4oKguAp(KmRcPGneRbZ-R?8(W]RaeKrHqcF_%[3.pkU4:GC0(3Wu6NDmNGWIrGj7`8l`gt
%\.9Q5W0C\T?W@<\?#^"!cC=T4Y;ib=Y0PTNPNt>/e+_?^:@0=P"S!2P%-=W2PrFEpF'")daR<ulj-(*3lH,9")."#T_ejZB?FYkE
%)0jR'0$b*KeX.th6:;orYl"6iUK`!:9[Ss3@hb$?d]VDq-@F&#iQNu[jHMhBh^Bk?I58g3dG2^._$r]$b/9[.4A&G7WPC;[VA%6;
%PBr]+*KK6k+26HoGk"J6*"t*nqlQZ2ardF!X\@F06e';R>54f/nk3&=DeHT5\(+6u]N7$1=)1GCD;c85iul"'G2%T83!*Rq]+FI#
%/bY"8;S'g7k'k>%cae%Zi43ggk-BnF5k+jl,lHubl;gfbZ3sX/kr*UoYkIE3#5DRdPKu*\_&kN'hO$VnJ!uSdaZ2&X(5[mm?b@Bi
%?EDh1HWO%5B3`"VX!21?i0l][ms`6%n+=A!i-C:YcI9VYpuWQF"D't9k'B*Y\iWF*;`e>-*#965k!?]fT\0qX3%r$1bFh/+Q8J]-
%VbaOqgK@OE[Ma^)jAYk*m=R21,dL5t=Bcc,3>=ci,7]Ykj@C!GFu#FFaG#gApa@.=C^d1ZnU[M\bfN%6/pHE:qOBlA@$Sj`0G*+4
%fX!AZ#tD4;B9F?NPJc@D[]])U(uN!t7tl.>Tf=A8'(CWfTkdgP9kLF$&m]Ick.K?0.`C)dNc`GQd9eqrB^g3*^M9+VYh-.+'\HpG
%,MKZ8+79KZj;roBFQ90Y8$X@U9m?OPo4#u*!B&VrWndBUGJ"@&#hJCAI8-(_:A)eUq/2IY]1,%PU]Fp=0/(_=jkYC%bBpLna*W"d
%6%"c-f,LL_a^mn=LO)2ifj=bY]T>DnG)O!?1>'2Rc"CPu_V/8H$Q4V62qRIa#1!u[c,_$L^$QZX+M]dR]#>)L>q4,1bi%1AM\S#R
%X]\\](Gg:srAGmQB3,FT+G5n0^:+Cd`:%XSRuouB-0pIY#,+N,TaEO,:R=2h`#uGI.*tu4+<)5,rY70?7CbV_K6TGAVC>ma-"G/4
%'eoFZ$%@$>63<r6lJ4s=-/4Se&VXa59.a<D)>XcAN(iffN#G<u(s47kNAX>0r=&+kNZYA&*`O,Z]];?]Sl7"J<cT.`;r-4$LuG&K
%Lm9$4or)#B[>F(!fJ/MG)>f&K?<bg.&/f-1X9_-pW1G_rL&`+qdY:7So@=\`G]&p<'A83-+_+RR,_Yg"/efRV]$J=t98Ok$`IOeH
%9CsWEp9Chq<-ZenR,Q<-RFu%3.@NjI-6+Eq3RRYna?Reqh#6&]mYk[b*63>r2I9Qp?RImpQ):V(%hj&$>eq^KO<'%&L%pA?_pd1G
%*F+Y:Ar;fmV,4F5=*qa^0Hlh;#TJS+Uk8M<&$gP!59Cb1L`]8X+t+XGM8eca=(EgL!c`j-KTVFF"[B;b-K(Nu,h^AF=fNe3+,`o0
%!&Gdsp24Xb']IMSrob1&qc%T5%up5u)g)cIZpfmflj\-c633d:s+4*b6pca8?Qn%jOCYGT<k8%ac!WYVL+nq57\2XN)-qk`F*]%c
%Ut'RY",*G@'0VJnEg1u-<>qTlc/fWP13f]hfX;5K:Dup/5;7Ia4)4X8rE/&2d3mCn'ZShp#A0&a6<o7s(:(Gr[HmthG(,0-kC=7\
%'29p=Oj-/ECacN_g4LI0!u&dl3%_I&FHVq*M]V0N?IfdD8YmNF^kO^,%0]ZKkiCZYe/[6kAVA"sAm']idUDO-;q:Yu[:^Sq\@ZE%
%4=Z95,o(!'Q*ZJ+SgO5n9cR;JCIF8LbLAHW7JK!YV\Cd";J5i=BFnI5mGA*dlrF!acsXTqpaBm]UMFp7->KdBL#[h)7&tu5K,->#
%^#`@%I3`R3AGQZP`%J:4'PJ&t[[S<O1^K:C-NssN<H^AiK4d4m%Vh*&]hJ6>5@ZE*GUCrsW'Tcf/Yt+p#1'^"SgS7as)>YWD'j)g
%>Z0cef\dWmS-Nl7ho;i)2FoR\YXcP7qiq9;N"*(j8*DFJDM\H+C_0?Y>Ku@H2Mdf@F^-XZLurBSYefMu1q@%6T6'c^8a#4gqs*J]
%EJJE_kFU-'CY95p1#>.QHaq@L^Sb;se6W!F_ufLmQBV[[)XKVUb!d,@%,NsC(e"?g#mLN5`'?k+\u<Vt=EnA\O*qRcKDhQOP_%LA
%JoH:M^o&@_T*OZ?V-Q]a@,_Baa42iX<8n+o,@prrm):2Ee0+YNgqEbcK/i^P5(so.Bama?e6j_0%;N,ZjidOq"sJ/tDEcYe22DH/
%CX=q9K5bIfbUmS6YGHb'YX+4uiT+C!IAtr>@"ZecA<6)E90L0%ZHM?9s7G%+K.U(M8o@HLiunQC%FSC[pR^05h"TeFaUM-kC^FAa
%DNN,L66_:+7$k/$JtrV(?R!Bme0$l\IKrn"2@(llf;ff/K\Y9%/W7IMqg`:^0nKm9'fU@;gUKQUL)ZphqA#H<GAfKM[%R\D_3\cW
%6k-H*jPls3Z+*M_d;r6=YjD7(;lDus0soC\+fRbp1,Y""dcn7-`4uR+!TAqk2G!'<UVt.Vhj>.nn8p\-6;QAZgYiJq$o`tmQa\f]
%5mYmr"+5e3*d?9(_?Q]Y[r+JAM%(N8P+W?8+H1'aA82Y[<Flq'8CJVYg*r@V:/QY*a>'r>V*jI?5"-"3+:]bk65;B!L6n)%%lO.%
%0R`m3*%-`k]*d$L2g!RX*VbWB)rcg/aRL]m3La,3[Q.qbUnBfl$ON%L2".s7,KpQ<-G7Ke_tr>5RqoWi"6'cOC<+O-ipge]0#/%e
%[^NJ<M!.ZSj>dpULt=n?qa*0GV2Q<Z#(;^M9Zs?X85dW!U'kBY3MMBHLU^kbi8ZLf'DdbU$kY1j"P)%c1"W(OD`jXfruZ1ko'bq6
%1P:;cm0MQ%E"H5G>?tLJHG:b:p\k15lqE[d>:!"MVh\E+K4q93Pf"GZ&5E0M92sglpA*hB#6bUSFR8^>$QSM'BV#81iRO_>5hmK3
%G)Ig)+Kk0nFH3lI53*'f%JG2_fI:\LNUkTnYIHlc>*\<5)akNA:N,A"fjZ`9\%"a#'J2PD/u"IjIGb;acWuMCD@ikl)(?JEK<Q3a
%T"%)-kua2qg`YSreti^4pbXW:>e/sI4`H$iFF<MRPu]c1+.6e`K8@`/$^M3=&@6ek3f1C5oa@l7q7aK2dLnmng`Z?i8q\p"8e47+
%8[q'h:JSr(g`VmdMY@lFaK:Tt[)EKS'DEQAR%C2C7pb7qK07%XQVDRqT1A1q=)`eOP4sa@V/V'kWjo:C6,k_1M_O'3@jC@u3/AgF
%@X-_e+AM-P&TEiHT]n;\J$eM6%QF`XPB@'7Bj$bhoiILH*!$:QEhA>AK@IC%/j-p8>30<!*9=jJ>TIeQNM5p=h:s#jiW`hT:CqCT
%(8Ylc%Dnjge\hnT!-^bo_[SNZArfONBX\j)#WLDOd0Wqd2[JA&7?`TJK^`6.J\_d^Gg>K'E.]ebBT>aE#,u+q1u[?sn[nUi\\SJ=
%'J%\$)oOVW-(;&(g`$pX!ul(3%)W?+erE%171oeD`;"KNB>Fd4lm7HRClhGJDWSeGdO7R9]s7AfK0NW<SfXr)2J>l50.(KHj!#0t
%fH;_]3`4NPa5)JHK,A(jr<tOhMp&+p%H>JX;D_7'HsHDR"sm#h[)!0fU-QN4$pmU+(H#W5O;=geQl1QG]osdTO@JKI)B+8trA=Wc
%d_[;EJd-34lkWpS+>03:2$t8?4hiPlgB08\UOSEUTI`Saf5$;T5oMC`QrL_,3DKC5)l/0V2hN(1aGV?%2b;-SlQS:?fJgVL@^n]d
%f_]]NT%kG>>-u-U@QFe#T")U+Vt@J'2op7iaYe-lQu:KL+5@ut4,$kT%<>KA]&29chEX!>R(5L$<LmuE&/Lt9i<Go%plCKX1I#n"
%&)89j;^i-E)l/Fk=Y$m$4#ZQN'/iCVZrW.qb$lWcfH;coiuZhqNSK&:%Douf[nq]6>c.$X%B=X-^(4ri(=grh)l3'K%G&?)107"g
%1Ya*(3qe:IUc6R)kemqY(k@e-+Pdl8H3G:ajZN+Q`OE?=0cb4pLV:Zr%)G6$'8!Rp*+VQ_Wb-u*j=0t>k1iK;nq8XC_MK8n1%*mC
%WX!R+kB<,TQlLcjn2_]tH0f?*&fcQNMnd(oN7hO):r#@[@FcV-*5mMf"HgMdQrZ(mS\RO7<j3M.RLX]QS_Cmh50qolW81&i'/ulh
%NU$]Wnm[2`&fbF8J_I7.%apConRQU#q%kQb)B<9tM5h3p3&nK^'KF17gT7ueSRJEWcasEu&DgZ,#E0*I4XFBB@tW*ORN4*1',*80
%8_S4lr5QOu^0$sRfHB9U=XGr/6261``Jk<^_7!L,KVrn$T)-OD#2'?8kO*;Abbd+')fUo=M/>*sE)8Q\h?Gs\bMmUL364aZ`^><0
%\3\E%E.],7D6W.,YlX]hLE!%608l78%Dnh@gi.nlj-c=D8$@$o#2/BC#NKcUbi#JqRG8o4:^QVl,B@>F>)l;;#+7ch+qI@3D#Wi&
%#MC>5'2E4[OI7aP:^S1AAi+X2!=,Ts/!&*5+O1G=TEZB`j%_D\Nl9<lE0.4sTu7'=0o"Y*%1_BKm60m7Hi:h107]JC+Kpj.W!XJS
%f$/-R^]p'^]05Y2gM&,tBgr9!cCG;$@tU.UY2BdJM!ImTT-=N\jUQ/>GNFX"^d1"j=274eK,BV^<=a,3hRg'W+U;H0>iK@9n;RHD
%:jjj^KL$)W/QS%Fa?`6.f0)Y"VQaq+O`(^ja=*@8"@38)/,(2FkhpGL4*=!tO(_B"FH@*GeKGg(K8;Zmo3ali&Lu<0&Tj+C7LakB
%61/3703g!T4;8J?1-9j./&;J$=Zb"fn3N#*e"iiGYp4'#%1tbu`Ydm`h^Z]'kWuj?M0k^5A09Yc=r,B=P-!\*i'G$*B.Nf?XXg5t
%VWa4pDsiMJkW5u$]]qYA+lP]g+\P?l7TJt-MLN:3iB_@TB6V@Mn0!5S^7rNN1#!d=q&(6lII,-gBaVhZFt9I*432P3,<sO@oc'W<
%&9O!W"6ZnI%_a[9)LEn'IoTqTQN$7Z$*bt=(HY!.7Qi(JN.;B;<-<PgJrFP.9?r*Hl0WqG<3*]<ldR)4bYi-:F4`5+Z<GR#fFr'2
%H6kkDDCMP?k4#?lkuJbdC7YO+i7b))+k&+C\,<.]T[(=(\$WlkAK>c)lI(f+;kds>6U]a8XJ(cDim8Pq3fa*bVK%UUkka+k]OTo>
%iT$3p`#WQ<i(Rj04%*m##<E]%5#[KULlYqj$-rD/h@$<@7.$u`NkJ\E<Y?T`(gT#A_Ad`-eoQ'Zl#f"5Hgp,[DkG])9jXltmp<,,
%<Uq@G@+qbA?OAmD7eWgaRAK(ZS*g`ERM1o'J9qE9Vi_&"Xb:abPbgSBDUZ,11%FGfp3F3?NDX@7=oKVGFg&'-+q1AeQmoUJOLV/:
%:!J(8=d9HVK6O:le\A.k'D^I3\&<Off)4?-piX/ppg)5]IXVl_T0KgAO8nV3G(3AH\6mib&D+Bo<0)>>)8F?mALBb#%l,Wf#Cc&b
%)$Ck13o+\&`@f63>=!a!p/Gql]jf)gmggKBJ^UX#b9.p3!%<`aid@p7HC<.L*'jV<L+XeV-Jl0!\"$#B"LsXThcqd&,jBs1AmQ!S
%<cX`sk:2PCP.+K$DEuA<3gR?tJ!Wh`IR,=ab(F>`E1-U_DLPn:m\O(N@,7)kaar^Maoi2UWs6393+I"VmZ0aO]$]FgqNteEdG9H\
%Q/2\`=Jq2-Os-(eEpckdMGjkCcrp_!it-5tNL"3)AY_J%dm_,7,G$9bpXBK8=,`R=X)d#<k/f"Mk@K#8nCEj%n26VhCS]H&UTqqW
%"Ff*(YX-#:6F[UBBm(-:@on@Rkp,jmf6*UA0q4M4Y?*RR+([buCtW0F(Ia*rRt'MS1Tfq?J3>"K5$]tZ]+s2_p.:5HF>,O3Vl10r
%YTHd0qt,l9l.u?c`G"JYmlF2D2iidjGsoUUi7RG\$"3_3-;dubed:u),uG>*]&,^,dqN4$?dgguW/#(*kNTUC.mDS\7t=IGODVRn
%b?^VZY8NM^f@oAVK9C+0Cs`f!mLSeH<pZ]lSb&MKF4ud_<C?dKYI#DMUGU)BHol8r:,$.mQ=FcRX-^(Aqoc,^MRN@6n@7St?1T&g
%>fAH^[b?M;rtL*8O'des8](<geRtq3/f$)g\uP;*](5]!YA_bmPH2=RJ%kG]biPjXU/,t9de8':j%u.>_``Ln&`E2O@[M&GCq89r
%5BTKhF7YCC<K3'iQ.NcsI=hiTs-Q"'aUbUKH$9LH4_4pb6)cYsSgoYQ8-^^\P]ShilrP)V\&aB:+fj0fX".,o%i-J80oi0d$pi&8
%ZpZK7>A2tR#8CB?p<A;EoIor%^UW)8&m-dps%Dh]+'[APrUi=&qQDKA(Fl<Uom^k>IA5q64!)H3N*oPC+UY?[]h`-_[P[fL`Xr00
%oq"$qkN4\r228$.M2*h(,0i6G)FIKU0I'P,Li'fY(h='Fh\[!*0k>.Ffr$QP]#Xj>(k,Ihljl=11&UCia7"NRr?"4Nr:fA-n)(ks
%^A[H>mlpd>bJujGq=BqkIe);*+9204h8f!!a3T56gWQ5GIJ;jp%tFWFQd>,Lpu>`]"Ui%D?hj?L?iK1hhu)P";NgY_~>
%AI9_PrivateDataEnd
